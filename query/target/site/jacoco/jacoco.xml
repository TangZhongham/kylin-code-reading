<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="Apache Kylin - Query"><sessioninfo id="tangmoumoudeMacBook-Pro.local-7bfc8fbf" start="1635303893202" dump="1635303906282"/><sessioninfo id="tangmoumoudeMacBook-Pro.local-d50d4dfe" start="1635303946531" dump="1635304001822"/><sessioninfo id="tangmoumoudeMacBook-Pro.local-ec5ce218" start="1635304015632" dump="1635304166903"/><sessioninfo id="tangmoumoudeMacBook-Pro.local-ea3e26b1" start="1635304174704" dump="1635304178647"/><sessioninfo id="tangmoumoudeMacBook-Pro.local-cb7978f" start="1635304188596" dump="1635304250565"/><sessioninfo id="tangmoumoudeMacBook-Pro.local-80366821" start="1635304257392" dump="1635304261224"/><sessioninfo id="tangmoumoudeMacBook-Pro.local-479f150d" start="1635304319849" dump="1635304323455"/><sessioninfo id="tangmoumoudeMacBook-Pro.local-f92424cc" start="1635304332814" dump="1635304339269"/><sessioninfo id="tangmoumoudeMacBook-Pro.local-2f9890c2" start="1635304363993" dump="1635304374040"/><package name="org/apache/kylin/query/pushdown"><class name="org/apache/kylin/query/pushdown/PushdownRunnerSDKImpl" sourcefilename="PushdownRunnerSDKImpl.java"><method name="&lt;init&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="PushdownRunnerSDKImpl.java"><line nr="24" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></package><package name="org/apache/kylin/query/routing"><class name="org/apache/kylin/query/routing/RealizationChooser$RealizationCost" sourcefilename="RealizationChooser.java"><method name="&lt;init&gt;" desc="(II)V" line="245"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/kylin/metadata/realization/IRealization;)V" line="250"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compareTo" desc="(Lorg/apache/kylin/query/routing/RealizationChooser$RealizationCost;)I" line="258"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/routing/RealizationCheck" sourcefilename="RealizationCheck.java"><method name="&lt;init&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getModelIncapableReasons" desc="()Ljava/util/Map;" line="45"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCubeIncapableReasons" desc="()Ljava/util/Map;" line="49"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCubeCapabilities" desc="()Ljava/util/Map;" line="53"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addCapableCube" desc="(Lorg/apache/kylin/metadata/realization/IRealization;)V" line="57"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addIncapableCube" desc="(Lorg/apache/kylin/metadata/realization/IRealization;)V" line="63"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addIncapableCube" desc="(Lorg/apache/kylin/metadata/realization/IRealization;Lorg/apache/kylin/query/routing/RealizationCheck$IncapableReason;)V" line="69"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addCubeIncapableReason" desc="(Lorg/apache/kylin/metadata/realization/IRealization;Lorg/apache/kylin/query/routing/RealizationCheck$IncapableReason;)V" line="76"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCapableModels" desc="()Ljava/util/Map;" line="82"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addModelIncapableReason" desc="(Lorg/apache/kylin/metadata/model/DataModelDesc;Lorg/apache/kylin/query/routing/RealizationCheck$IncapableReason;)V" line="86"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addCapableModel" desc="(Lorg/apache/kylin/metadata/model/DataModelDesc;Ljava/util/Map;)V" line="97"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addModelIncapableReason" desc="(Lorg/apache/kylin/metadata/model/DataModelDesc;Ljava/util/List;)V" line="102"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isModelCapable" desc="()Z" line="106"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isCubeCapable" desc="()Z" line="110"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isCapable" desc="()Z" line="120"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="116" covered="68"/><counter type="BRANCH" missed="21" covered="5"/><counter type="LINE" missed="24" covered="18"/><counter type="COMPLEXITY" missed="21" covered="7"/><counter type="METHOD" missed="10" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/kylin/query/routing/QueryRouter" sourcefilename="QueryRouter.java"><method name="&lt;init&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="selectRealization" desc="(Lorg/apache/kylin/query/relnode/OLAPContext;Ljava/util/Set;)Lorg/apache/kylin/metadata/realization/IRealization;" line="53"><counter type="INSTRUCTION" missed="184" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="38" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="adjustForDimensionAsMeasure" desc="(Lorg/apache/kylin/query/routing/Candidate;Lorg/apache/kylin/query/relnode/OLAPContext;)V" line="115"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="collectIncapableReason" desc="(Lorg/apache/kylin/query/relnode/OLAPContext;Ljava/util/List;)V" line="127"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="262" covered="0"/><counter type="BRANCH" missed="28" covered="0"/><counter type="LINE" missed="58" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/routing/RealizationCheck$IncapableType" sourcefilename="RealizationCheck.java"><method name="&lt;clinit&gt;" desc="()V" line="123"><counter type="INSTRUCTION" missed="0" covered="194"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="194"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/kylin/query/routing/Candidate" sourcefilename="Candidate.java"><method name="setPriorities" desc="(Ljava/util/Map;)V" line="43"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="restorePriorities" desc="()V" line="48"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/kylin/metadata/realization/IRealization;Lorg/apache/kylin/metadata/realization/SQLDigest;)V" line="58"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRealization" desc="()Lorg/apache/kylin/metadata/realization/IRealization;" line="65"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSqlDigest" desc="()Lorg/apache/kylin/metadata/realization/SQLDigest;" line="69"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPriority" desc="()I" line="73"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCapability" desc="()Lorg/apache/kylin/metadata/realization/CapabilityResult;" line="77"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setCapability" desc="(Lorg/apache/kylin/metadata/realization/CapabilityResult;)V" line="81"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compareTo" desc="(Lorg/apache/kylin/query/routing/Candidate;)I" line="86"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="101"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="86" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="28" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/routing/RealizationChooser" sourcefilename="RealizationChooser.java"><method name="&lt;init&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="selectRealization" desc="(Ljava/util/List;)V" line="57"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="attemptSelectRealization" desc="(Lorg/apache/kylin/query/relnode/OLAPContext;)V" line="65"><counter type="INSTRUCTION" missed="113" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toErrorMsg" desc="(Lorg/apache/kylin/query/relnode/OLAPContext;)Ljava/lang/String;" line="107"><counter type="INSTRUCTION" missed="85" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matches" desc="(Lorg/apache/kylin/metadata/model/DataModelDesc;Lorg/apache/kylin/query/relnode/OLAPContext;)Ljava/util/Map;" line="124"><counter type="INSTRUCTION" missed="95" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="makeOrderedModelMap" desc="(Lorg/apache/kylin/query/relnode/OLAPContext;)Ljava/util/Map;" line="160"><counter type="INSTRUCTION" missed="152" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="39" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsAll" desc="(Ljava/util/Set;Ljava/util/Set;)Z" line="225"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notContain" desc="(Ljava/util/Set;Ljava/util/Set;)Ljava/util/List;" line="233"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="519" covered="0"/><counter type="BRANCH" missed="58" covered="0"/><counter type="LINE" missed="118" covered="0"/><counter type="COMPLEXITY" missed="38" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/routing/RoutingRule" sourcefilename="RoutingRule.java"><method name="&lt;init&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applyRules" desc="(Ljava/util/List;)V" line="47"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPrintableText" desc="(Ljava/util/List;)Ljava/lang/String;" line="56"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="registerRule" desc="(Lorg/apache/kylin/query/routing/RoutingRule;I)V" line="75"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeRule" desc="(Lorg/apache/kylin/query/routing/RoutingRule;)V" line="84"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findRealizationsOf" desc="(Ljava/util/List;Lorg/apache/kylin/metadata/realization/RealizationType;)Ljava/util/List;" line="93"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="104"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="196" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="42" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/routing/RealizationChooser$1" sourcefilename="RealizationChooser.java"><method name="&lt;init&gt;" desc="(Ljava/util/Map;)V" line="208"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compare" desc="(Lorg/apache/kylin/metadata/model/DataModelDesc;Lorg/apache/kylin/metadata/model/DataModelDesc;)I" line="211"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/routing/RealizationCheck$IncapableReason" sourcefilename="RealizationCheck.java"><method name="&lt;init&gt;" desc="()V" line="127"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Lorg/apache/kylin/query/routing/RealizationCheck$IncapableType;)Lorg/apache/kylin/query/routing/RealizationCheck$IncapableReason;" line="138"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Lorg/apache/kylin/metadata/realization/CapabilityResult$IncapableCause;)Lorg/apache/kylin/query/routing/RealizationCheck$IncapableReason;" line="144"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notContainAllColumn" desc="(Ljava/util/Collection;)Lorg/apache/kylin/query/routing/RealizationCheck$IncapableReason;" line="181"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notContainAllDimension" desc="(Ljava/util/Collection;)Lorg/apache/kylin/query/routing/RealizationCheck$IncapableReason;" line="188"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notContainAllMeasures" desc="(Ljava/util/Collection;)Lorg/apache/kylin/query/routing/RealizationCheck$IncapableReason;" line="195"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notFoundTables" desc="(Ljava/util/Collection;)Lorg/apache/kylin/query/routing/RealizationCheck$IncapableReason;" line="202"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setIncapableType" desc="(Lorg/apache/kylin/query/routing/RealizationCheck$IncapableType;)V" line="209"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setUnmatchedDimensions" desc="(Ljava/util/Collection;)V" line="213"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setUnmatchedAggregations" desc="(Ljava/util/Collection;)V" line="217"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setNotFoundColumns" desc="(Ljava/util/Collection;)V" line="221"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setNotFoundTables" desc="(Ljava/util/Collection;)V" line="225"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setNotFoundDimensions" desc="(Ljava/util/Collection;)V" line="229"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setNotFoundMeasures" desc="(Ljava/util/Collection;)V" line="233"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNotFoundDimensions" desc="()Ljava/util/Collection;" line="237"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNotFoundMeasures" desc="()Ljava/util/Collection;" line="241"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIncapableType" desc="()Lorg/apache/kylin/query/routing/RealizationCheck$IncapableType;" line="245"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUnmatchedDimensions" desc="()Ljava/util/Collection;" line="249"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNotFoundColumns" desc="()Ljava/util/Collection;" line="253"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUnmatchedAggregations" desc="()Ljava/util/Collection;" line="257"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNotFoundTables" desc="()Ljava/util/Collection;" line="261"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="266"><counter type="INSTRUCTION" missed="50" covered="65"/><counter type="BRANCH" missed="24" covered="18"/><counter type="LINE" missed="6" covered="12"/><counter type="COMPLEXITY" missed="19" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="294"><counter type="INSTRUCTION" missed="89" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="306"><counter type="INSTRUCTION" missed="138" covered="0"/><counter type="BRANCH" missed="21" covered="0"/><counter type="LINE" missed="29" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="404" covered="97"/><counter type="BRANCH" missed="69" covered="18"/><counter type="LINE" missed="95" covered="24"/><counter type="COMPLEXITY" missed="66" covered="8"/><counter type="METHOD" missed="18" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="RealizationChooser.java"><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="4" ci="0" mb="0" cb="0"/><line nr="57" mi="10" ci="0" mb="2" cb="0"/><line nr="58" mi="5" ci="0" mb="0" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="4" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="2" cb="0"/><line nr="68" mi="13" ci="0" mb="0" cb="0"/><line nr="72" mi="2" ci="0" mb="2" cb="0"/><line nr="73" mi="11" ci="0" mb="2" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><line nr="75" mi="4" ci="0" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="2" cb="0"/><line nr="77" mi="4" ci="0" mb="0" cb="0"/><line nr="78" mi="6" ci="0" mb="0" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="84" mi="11" ci="0" mb="2" cb="0"/><line nr="85" mi="4" ci="0" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="2" cb="0"/><line nr="88" mi="4" ci="0" mb="0" cb="0"/><line nr="90" mi="6" ci="0" mb="0" cb="0"/><line nr="91" mi="2" ci="0" mb="2" cb="0"/><line nr="92" mi="4" ci="0" mb="0" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="1" ci="0" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="98" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="1" ci="0" mb="0" cb="0"/><line nr="102" mi="13" ci="0" mb="0" cb="0"/><line nr="107" mi="5" ci="0" mb="0" cb="0"/><line nr="108" mi="3" ci="0" mb="0" cb="0"/><line nr="109" mi="12" ci="0" mb="2" cb="0"/><line nr="110" mi="6" ci="0" mb="0" cb="0"/><line nr="111" mi="1" ci="0" mb="0" cb="0"/><line nr="112" mi="12" ci="0" mb="2" cb="0"/><line nr="113" mi="10" ci="0" mb="2" cb="0"/><line nr="114" mi="6" ci="0" mb="0" cb="0"/><line nr="115" mi="1" ci="0" mb="0" cb="0"/><line nr="116" mi="1" ci="0" mb="0" cb="0"/><line nr="117" mi="7" ci="0" mb="0" cb="0"/><line nr="118" mi="11" ci="0" mb="2" cb="0"/><line nr="119" mi="7" ci="0" mb="0" cb="0"/><line nr="120" mi="3" ci="0" mb="0" cb="0"/><line nr="124" mi="2" ci="0" mb="0" cb="0"/><line nr="126" mi="4" ci="0" mb="0" cb="0"/><line nr="128" mi="2" ci="0" mb="0" cb="0"/><line nr="130" mi="9" ci="0" mb="4" cb="0"/><line nr="132" mi="6" ci="0" mb="0" cb="0"/><line nr="133" mi="5" ci="0" mb="0" cb="0"/><line nr="134" mi="10" ci="0" mb="2" cb="0"/><line nr="136" mi="5" ci="0" mb="0" cb="0"/><line nr="137" mi="1" ci="0" mb="0" cb="0"/><line nr="138" mi="13" ci="0" mb="0" cb="0"/><line nr="141" mi="3" ci="0" mb="2" cb="0"/><line nr="142" mi="8" ci="0" mb="0" cb="0"/><line nr="144" mi="7" ci="0" mb="0" cb="0"/><line nr="147" mi="2" ci="0" mb="2" cb="0"/><line nr="148" mi="5" ci="0" mb="0" cb="0"/><line nr="149" mi="1" ci="0" mb="0" cb="0"/><line nr="150" mi="2" ci="0" mb="0" cb="0"/><line nr="153" mi="3" ci="0" mb="0" cb="0"/><line nr="155" mi="5" ci="0" mb="0" cb="0"/><line nr="156" mi="2" ci="0" mb="0" cb="0"/><line nr="160" mi="2" ci="0" mb="0" cb="0"/><line nr="161" mi="4" ci="0" mb="0" cb="0"/><line nr="162" mi="4" ci="0" mb="0" cb="0"/><line nr="163" mi="5" ci="0" mb="0" cb="0"/><line nr="164" mi="6" ci="0" mb="0" cb="0"/><line nr="167" mi="2" ci="0" mb="0" cb="0"/><line nr="168" mi="2" ci="0" mb="0" cb="0"/><line nr="170" mi="10" ci="0" mb="2" cb="0"/><line nr="171" mi="3" ci="0" mb="2" cb="0"/><line nr="172" mi="5" ci="0" mb="0" cb="0"/><line nr="173" mi="1" ci="0" mb="0" cb="0"/><line nr="174" mi="1" ci="0" mb="0" cb="0"/><line nr="176" mi="6" ci="0" mb="2" cb="0"/><line nr="177" mi="5" ci="0" mb="0" cb="0"/><line nr="178" mi="5" ci="0" mb="0" cb="0"/><line nr="179" mi="1" ci="0" mb="0" cb="0"/><line nr="181" mi="3" ci="0" mb="2" cb="0"/><line nr="182" mi="5" ci="0" mb="0" cb="0"/><line nr="183" mi="1" ci="0" mb="0" cb="0"/><line nr="184" mi="1" ci="0" mb="0" cb="0"/><line nr="187" mi="5" ci="0" mb="0" cb="0"/><line nr="188" mi="7" ci="0" mb="4" cb="0"/><line nr="189" mi="5" ci="0" mb="0" cb="0"/><line nr="190" mi="6" ci="0" mb="0" cb="0"/><line nr="192" mi="3" ci="0" mb="0" cb="0"/><line nr="193" mi="5" ci="0" mb="0" cb="0"/><line nr="194" mi="2" ci="0" mb="2" cb="0"/><line nr="195" mi="2" ci="0" mb="0" cb="0"/><line nr="196" mi="4" ci="0" mb="0" cb="0"/><line nr="197" mi="5" ci="0" mb="0" cb="0"/><line nr="198" mi="6" ci="0" mb="0" cb="0"/><line nr="200" mi="4" ci="0" mb="0" cb="0"/><line nr="201" mi="5" ci="0" mb="0" cb="0"/><line nr="202" mi="4" ci="0" mb="2" cb="0"/><line nr="203" mi="5" ci="0" mb="0" cb="0"/><line nr="205" mi="1" ci="0" mb="0" cb="0"/><line nr="208" mi="12" ci="0" mb="0" cb="0"/><line nr="211" mi="6" ci="0" mb="0" cb="0"/><line nr="212" mi="6" ci="0" mb="0" cb="0"/><line nr="213" mi="4" ci="0" mb="0" cb="0"/><line nr="214" mi="2" ci="0" mb="2" cb="0"/><line nr="215" mi="6" ci="0" mb="0" cb="0"/><line nr="216" mi="2" ci="0" mb="0" cb="0"/><line nr="219" mi="3" ci="0" mb="0" cb="0"/><line nr="221" mi="2" ci="0" mb="0" cb="0"/><line nr="225" mi="10" ci="0" mb="2" cb="0"/><line nr="226" mi="5" ci="0" mb="2" cb="0"/><line nr="227" mi="2" ci="0" mb="0" cb="0"/><line nr="228" mi="1" ci="0" mb="0" cb="0"/><line nr="229" mi="2" ci="0" mb="0" cb="0"/><line nr="233" mi="2" ci="0" mb="0" cb="0"/><line nr="234" mi="10" ci="0" mb="2" cb="0"/><line nr="235" mi="5" ci="0" mb="2" cb="0"/><line nr="236" mi="4" ci="0" mb="0" cb="0"/><line nr="237" mi="1" ci="0" mb="0" cb="0"/><line nr="238" mi="2" ci="0" mb="0" cb="0"/><line nr="245" mi="2" ci="0" mb="0" cb="0"/><line nr="246" mi="3" ci="0" mb="0" cb="0"/><line nr="247" mi="3" ci="0" mb="0" cb="0"/><line nr="248" mi="1" ci="0" mb="0" cb="0"/><line nr="250" mi="2" ci="0" mb="0" cb="0"/><line nr="252" mi="8" ci="0" mb="0" cb="0"/><line nr="253" mi="4" ci="0" mb="0" cb="0"/><line nr="254" mi="1" ci="0" mb="0" cb="0"/><line nr="258" mi="6" ci="0" mb="0" cb="0"/><line nr="259" mi="2" ci="0" mb="2" cb="0"/><line nr="260" mi="2" ci="0" mb="0" cb="0"/><line nr="262" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="591" covered="0"/><counter type="BRANCH" missed="62" covered="0"/><counter type="LINE" missed="136" covered="0"/><counter type="COMPLEXITY" missed="45" covered="0"/><counter type="METHOD" missed="14" covered="0"/><counter type="CLASS" missed="3" covered="0"/></sourcefile><sourcefile name="RealizationCheck.java"><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="2" cb="0"/><line nr="58" mi="9" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="2" cb="0"/><line nr="64" mi="9" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="3" ci="0" mb="2" cb="0"/><line nr="70" mi="9" ci="0" mb="0" cb="0"/><line nr="71" mi="8" ci="0" mb="0" cb="0"/><line nr="73" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="1" cb="1"/><line nr="77" mi="0" ci="8" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="2"/><line nr="87" mi="0" ci="8" mb="0" cb="0"/><line nr="88" mi="0" ci="6" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="6" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="2"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="5" ci="0" mb="2" cb="0"/><line nr="98" mi="6" ci="0" mb="0" cb="0"/><line nr="99" mi="1" ci="0" mb="0" cb="0"/><line nr="102" mi="6" ci="0" mb="0" cb="0"/><line nr="103" mi="1" ci="0" mb="0" cb="0"/><line nr="106" mi="12" ci="0" mb="4" cb="0"/><line nr="110" mi="12" ci="0" mb="2" cb="0"/><line nr="111" mi="3" ci="0" mb="2" cb="0"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="114" mi="1" ci="0" mb="0" cb="0"/><line nr="116" mi="4" ci="0" mb="0" cb="0"/><line nr="120" mi="10" ci="0" mb="4" cb="0"/><line nr="123" mi="0" ci="80" mb="0" cb="0"/><line nr="124" mi="0" ci="114" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="4" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="144" mi="2" ci="0" mb="2" cb="0"/><line nr="145" mi="2" ci="0" mb="0" cb="0"/><line nr="147" mi="4" ci="0" mb="0" cb="0"/><line nr="148" mi="2" ci="0" mb="0" cb="0"/><line nr="149" mi="6" ci="0" mb="8" cb="0"/><line nr="151" mi="2" ci="0" mb="0" cb="0"/><line nr="152" mi="1" ci="0" mb="0" cb="0"/><line nr="154" mi="2" ci="0" mb="0" cb="0"/><line nr="155" mi="1" ci="0" mb="0" cb="0"/><line nr="157" mi="2" ci="0" mb="0" cb="0"/><line nr="158" mi="1" ci="0" mb="0" cb="0"/><line nr="160" mi="2" ci="0" mb="0" cb="0"/><line nr="161" mi="1" ci="0" mb="0" cb="0"/><line nr="163" mi="2" ci="0" mb="0" cb="0"/><line nr="164" mi="1" ci="0" mb="0" cb="0"/><line nr="166" mi="2" ci="0" mb="0" cb="0"/><line nr="167" mi="1" ci="0" mb="0" cb="0"/><line nr="169" mi="2" ci="0" mb="0" cb="0"/><line nr="170" mi="1" ci="0" mb="0" cb="0"/><line nr="174" mi="3" ci="0" mb="0" cb="0"/><line nr="175" mi="4" ci="0" mb="0" cb="0"/><line nr="176" mi="4" ci="0" mb="0" cb="0"/><line nr="177" mi="2" ci="0" mb="0" cb="0"/><line nr="181" mi="0" ci="4" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="2" mb="0" cb="0"/><line nr="188" mi="4" ci="0" mb="0" cb="0"/><line nr="189" mi="3" ci="0" mb="0" cb="0"/><line nr="190" mi="3" ci="0" mb="0" cb="0"/><line nr="191" mi="2" ci="0" mb="0" cb="0"/><line nr="195" mi="4" ci="0" mb="0" cb="0"/><line nr="196" mi="3" ci="0" mb="0" cb="0"/><line nr="197" mi="3" ci="0" mb="0" cb="0"/><line nr="198" mi="2" ci="0" mb="0" cb="0"/><line nr="202" mi="4" ci="0" mb="0" cb="0"/><line nr="203" mi="3" ci="0" mb="0" cb="0"/><line nr="204" mi="3" ci="0" mb="0" cb="0"/><line nr="205" mi="2" ci="0" mb="0" cb="0"/><line nr="209" mi="0" ci="3" mb="0" cb="0"/><line nr="210" mi="0" ci="1" mb="0" cb="0"/><line nr="213" mi="3" ci="0" mb="0" cb="0"/><line nr="214" mi="1" ci="0" mb="0" cb="0"/><line nr="217" mi="3" ci="0" mb="0" cb="0"/><line nr="218" mi="1" ci="0" mb="0" cb="0"/><line nr="221" mi="0" ci="3" mb="0" cb="0"/><line nr="222" mi="0" ci="1" mb="0" cb="0"/><line nr="225" mi="3" ci="0" mb="0" cb="0"/><line nr="226" mi="1" ci="0" mb="0" cb="0"/><line nr="229" mi="3" ci="0" mb="0" cb="0"/><line nr="230" mi="1" ci="0" mb="0" cb="0"/><line nr="233" mi="3" ci="0" mb="0" cb="0"/><line nr="234" mi="1" ci="0" mb="0" cb="0"/><line nr="237" mi="3" ci="0" mb="0" cb="0"/><line nr="241" mi="3" ci="0" mb="0" cb="0"/><line nr="245" mi="3" ci="0" mb="0" cb="0"/><line nr="249" mi="3" ci="0" mb="0" cb="0"/><line nr="253" mi="3" ci="0" mb="0" cb="0"/><line nr="257" mi="3" ci="0" mb="0" cb="0"/><line nr="261" mi="3" ci="0" mb="0" cb="0"/><line nr="266" mi="0" ci="3" mb="1" cb="1"/><line nr="267" mi="2" ci="0" mb="0" cb="0"/><line nr="268" mi="0" ci="7" mb="2" cb="2"/><line nr="269" mi="2" ci="0" mb="0" cb="0"/><line nr="271" mi="0" ci="3" mb="0" cb="0"/><line nr="273" mi="0" ci="5" mb="0" cb="2"/><line nr="274" mi="0" ci="2" mb="0" cb="0"/><line nr="275" mi="3" ci="10" mb="3" cb="3"/><line nr="276" mi="0" ci="2" mb="0" cb="0"/><line nr="277" mi="7" ci="6" mb="4" cb="2"/><line nr="279" mi="2" ci="0" mb="0" cb="0"/><line nr="280" mi="7" ci="6" mb="4" cb="2"/><line nr="282" mi="2" ci="0" mb="0" cb="0"/><line nr="283" mi="7" ci="6" mb="4" cb="2"/><line nr="285" mi="2" ci="0" mb="0" cb="0"/><line nr="286" mi="7" ci="6" mb="4" cb="2"/><line nr="288" mi="2" ci="0" mb="0" cb="0"/><line nr="289" mi="7" ci="9" mb="2" cb="2"/><line nr="294" mi="9" ci="0" mb="2" cb="0"/><line nr="295" mi="13" ci="0" mb="2" cb="0"/><line nr="296" mi="13" ci="0" mb="2" cb="0"/><line nr="297" mi="13" ci="0" mb="2" cb="0"/><line nr="298" mi="13" ci="0" mb="2" cb="0"/><line nr="299" mi="13" ci="0" mb="2" cb="0"/><line nr="300" mi="13" ci="0" mb="2" cb="0"/><line nr="301" mi="2" ci="0" mb="0" cb="0"/><line nr="306" mi="7" ci="0" mb="0" cb="0"/><line nr="308" mi="6" ci="0" mb="9" cb="0"/><line nr="310" mi="3" ci="0" mb="2" cb="0"/><line nr="311" mi="4" ci="0" mb="0" cb="0"/><line nr="312" mi="8" ci="0" mb="0" cb="0"/><line nr="313" mi="5" ci="0" mb="0" cb="0"/><line nr="317" mi="3" ci="0" mb="2" cb="0"/><line nr="318" mi="4" ci="0" mb="0" cb="0"/><line nr="319" mi="8" ci="0" mb="0" cb="0"/><line nr="320" mi="5" ci="0" mb="0" cb="0"/><line nr="324" mi="3" ci="0" mb="2" cb="0"/><line nr="325" mi="4" ci="0" mb="0" cb="0"/><line nr="326" mi="8" ci="0" mb="0" cb="0"/><line nr="327" mi="5" ci="0" mb="0" cb="0"/><line nr="331" mi="3" ci="0" mb="2" cb="0"/><line nr="332" mi="4" ci="0" mb="0" cb="0"/><line nr="333" mi="8" ci="0" mb="0" cb="0"/><line nr="334" mi="5" ci="0" mb="0" cb="0"/><line nr="338" mi="3" ci="0" mb="2" cb="0"/><line nr="339" mi="4" ci="0" mb="0" cb="0"/><line nr="340" mi="8" ci="0" mb="0" cb="0"/><line nr="341" mi="5" ci="0" mb="0" cb="0"/><line nr="345" mi="3" ci="0" mb="2" cb="0"/><line nr="346" mi="4" ci="0" mb="0" cb="0"/><line nr="347" mi="8" ci="0" mb="0" cb="0"/><line nr="348" mi="5" ci="0" mb="0" cb="0"/><line nr="357" mi="1" ci="0" mb="0" cb="0"/><line nr="365" mi="1" ci="0" mb="0" cb="0"/><line nr="369" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="520" covered="359"/><counter type="BRANCH" missed="90" covered="23"/><counter type="LINE" missed="119" covered="44"/><counter type="COMPLEXITY" missed="87" covered="16"/><counter type="METHOD" missed="28" covered="12"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="QueryRouter.java"><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="4" ci="0" mb="0" cb="0"/><line nr="53" mi="4" ci="0" mb="0" cb="0"/><line nr="54" mi="4" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="2" cb="0"/><line nr="60" mi="4" ci="0" mb="0" cb="0"/><line nr="61" mi="4" ci="0" mb="0" cb="0"/><line nr="62" mi="6" ci="0" mb="0" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="10" ci="0" mb="2" cb="0"/><line nr="67" mi="3" ci="0" mb="2" cb="0"/><line nr="68" mi="7" ci="0" mb="2" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="2" cb="0"/><line nr="72" mi="8" ci="0" mb="0" cb="0"/><line nr="73" mi="7" ci="0" mb="0" cb="0"/><line nr="75" mi="8" ci="0" mb="0" cb="0"/><line nr="76" mi="1" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="2" cb="0"/><line nr="79" mi="8" ci="0" mb="0" cb="0"/><line nr="82" mi="1" ci="0" mb="0" cb="0"/><line nr="84" mi="17" ci="0" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="3" ci="0" mb="0" cb="0"/><line nr="94" mi="3" ci="0" mb="2" cb="0"/><line nr="95" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="5" ci="0" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="0" cb="0"/><line nr="101" mi="19" ci="0" mb="0" cb="0"/><line nr="103" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="12" ci="0" mb="2" cb="0"/><line nr="106" mi="3" ci="0" mb="2" cb="0"/><line nr="107" mi="6" ci="0" mb="0" cb="0"/><line nr="109" mi="1" ci="0" mb="0" cb="0"/><line nr="111" mi="3" ci="0" mb="0" cb="0"/><line nr="115" mi="3" ci="0" mb="0" cb="0"/><line nr="116" mi="11" ci="0" mb="2" cb="0"/><line nr="118" mi="3" ci="0" mb="2" cb="0"/><line nr="119" mi="4" ci="0" mb="0" cb="0"/><line nr="120" mi="3" ci="0" mb="0" cb="0"/><line nr="121" mi="10" ci="0" mb="0" cb="0"/><line nr="123" mi="1" ci="0" mb="0" cb="0"/><line nr="124" mi="1" ci="0" mb="0" cb="0"/><line nr="127" mi="10" ci="0" mb="2" cb="0"/><line nr="128" mi="4" ci="0" mb="2" cb="0"/><line nr="129" mi="1" ci="0" mb="0" cb="0"/><line nr="130" mi="4" ci="0" mb="0" cb="0"/><line nr="131" mi="2" ci="0" mb="2" cb="0"/><line nr="132" mi="6" ci="0" mb="0" cb="0"/><line nr="133" mi="1" ci="0" mb="0" cb="0"/><line nr="134" mi="5" ci="0" mb="0" cb="0"/><line nr="136" mi="1" ci="0" mb="0" cb="0"/><line nr="137" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="262" covered="0"/><counter type="BRANCH" missed="28" covered="0"/><counter type="LINE" missed="58" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="RoutingRule.java"><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="6" ci="0" mb="0" cb="0"/><line nr="42" mi="6" ci="0" mb="0" cb="0"/><line nr="43" mi="6" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="47" mi="10" ci="0" mb="2" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="18" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="4" ci="0" mb="0" cb="0"/><line nr="57" mi="4" ci="0" mb="0" cb="0"/><line nr="58" mi="10" ci="0" mb="2" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="60" mi="5" ci="0" mb="0" cb="0"/><line nr="61" mi="4" ci="0" mb="0" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="8" ci="0" mb="2" cb="0"/><line nr="64" mi="7" ci="0" mb="0" cb="0"/><line nr="65" mi="4" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="4" ci="0" mb="2" cb="0"/><line nr="76" mi="17" ci="0" mb="0" cb="0"/><line nr="77" mi="4" ci="0" mb="0" cb="0"/><line nr="80" mi="4" ci="0" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="84" mi="6" ci="0" mb="2" cb="0"/><line nr="85" mi="4" ci="0" mb="0" cb="0"/><line nr="86" mi="5" ci="0" mb="2" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="89" mi="1" ci="0" mb="0" cb="0"/><line nr="90" mi="1" ci="0" mb="0" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="8" ci="0" mb="2" cb="0"/><line nr="95" mi="7" ci="0" mb="2" cb="0"/><line nr="96" mi="5" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="196" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="42" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Candidate.java"><line nr="33" mi="2" ci="0" mb="0" cb="0"/><line nr="34" mi="2" ci="0" mb="0" cb="0"/><line nr="37" mi="6" ci="0" mb="0" cb="0"/><line nr="38" mi="6" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="60" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="8" ci="0" mb="0" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="1" ci="0" mb="0" cb="0"/><line nr="86" mi="6" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="2" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="8" ci="0" mb="0" cb="0"/><line nr="92" mi="2" ci="0" mb="2" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="86" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="28" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="1655" covered="359"/><counter type="BRANCH" missed="200" covered="23"/><counter type="LINE" missed="383" covered="44"/><counter type="COMPLEXITY" missed="180" covered="16"/><counter type="METHOD" missed="66" covered="12"/><counter type="CLASS" missed="6" covered="3"/></package><package name="org/apache/kylin/query/relnode/visitor"><class name="org/apache/kylin/query/relnode/visitor/TupleFilterVisitor" sourcefilename="TupleFilterVisitor.java"><method name="&lt;init&gt;" desc="(Lorg/apache/kylin/query/relnode/ColumnRowType;)V" line="72"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitCall" desc="(Lorg/apache/calcite/rex/RexCall;)Lorg/apache/kylin/metadata/filter/TupleFilter;" line="83"><counter type="INSTRUCTION" missed="275" covered="0"/><counter type="BRANCH" missed="51" covered="0"/><counter type="LINE" missed="70" covered="0"/><counter type="COMPLEXITY" missed="34" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="dealWithTrivialExpr" desc="(Lorg/apache/calcite/rex/RexCall;)Lorg/apache/kylin/metadata/filter/TupleFilter;" line="194"><counter type="INSTRUCTION" missed="101" covered="0"/><counter type="BRANCH" missed="17" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="cast" desc="(Lorg/apache/kylin/metadata/filter/TupleFilter;Lorg/apache/calcite/rel/type/RelDataType;)Lorg/apache/kylin/metadata/filter/TupleFilter;" line="236"><counter type="INSTRUCTION" missed="71" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mergeToInClause" desc="(Lorg/apache/kylin/metadata/filter/TupleFilter;)Lorg/apache/kylin/metadata/filter/TupleFilter;" line="266"><counter type="INSTRUCTION" missed="8" covered="136"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="1" covered="31"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitLocalRef" desc="(Lorg/apache/calcite/rex/RexLocalRef;)Lorg/apache/kylin/metadata/filter/TupleFilter;" line="313"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitInputRef" desc="(Lorg/apache/calcite/rex/RexInputRef;)Lorg/apache/kylin/metadata/filter/TupleFilter;" line="318"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="normToTwoDigits" desc="(I)Ljava/lang/String;" line="325"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitLiteral" desc="(Lorg/apache/calcite/rex/RexLiteral;)Lorg/apache/kylin/metadata/filter/TupleFilter;" line="333"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitDynamicParam" desc="(Lorg/apache/calcite/rex/RexDynamicParam;)Lorg/apache/kylin/metadata/filter/TupleFilter;" line="354"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAutoJustByTimezone" desc="(Z)V" line="360"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="65"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="574" covered="151"/><counter type="BRANCH" missed="100" covered="12"/><counter type="LINE" missed="141" covered="35"/><counter type="COMPLEXITY" missed="71" covered="6"/><counter type="METHOD" missed="10" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/kylin/query/relnode/visitor/TupleExpressionVisitor" sourcefilename="TupleExpressionVisitor.java"><method name="&lt;init&gt;" desc="(Lorg/apache/kylin/query/relnode/ColumnRowType;Z)V" line="55"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitCall" desc="(Lorg/apache/calcite/rex/RexCall;)Lorg/apache/kylin/metadata/expression/TupleExpression;" line="62"><counter type="INSTRUCTION" missed="73" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBinaryTupleExpression" desc="(Lorg/apache/calcite/rex/RexCall;Lorg/apache/kylin/metadata/expression/TupleExpression$ExpressionOperatorEnum;)Lorg/apache/kylin/metadata/expression/BinaryTupleExpression;" line="98"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCaseTupleExpression" desc="(Lorg/apache/calcite/rex/RexCall;)Lorg/apache/kylin/metadata/expression/CaseTupleExpression;" line="107"><counter type="INSTRUCTION" missed="133" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRexCallTupleExpression" desc="(Lorg/apache/calcite/rex/RexCall;)Lorg/apache/kylin/metadata/expression/RexCallTupleExpression;" line="141"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitLocalRef" desc="(Lorg/apache/calcite/rex/RexLocalRef;)Lorg/apache/kylin/metadata/expression/TupleExpression;" line="152"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitInputRef" desc="(Lorg/apache/calcite/rex/RexInputRef;)Lorg/apache/kylin/metadata/expression/TupleExpression;" line="157"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitFirstRexInputRef" desc="(Lorg/apache/calcite/rex/RexCall;)Lorg/apache/kylin/metadata/expression/TupleExpression;" line="175"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitLiteral" desc="(Lorg/apache/calcite/rex/RexLiteral;)Lorg/apache/kylin/metadata/expression/TupleExpression;" line="191"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="446" covered="0"/><counter type="BRANCH" missed="56" covered="0"/><counter type="LINE" missed="92" covered="0"/><counter type="COMPLEXITY" missed="40" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="TupleExpressionVisitor.java"><line nr="50" mi="8" ci="0" mb="2" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="2" cb="0"/><line nr="64" mi="9" ci="0" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="2" cb="0"/><line nr="66" mi="5" ci="0" mb="2" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="72" mi="6" ci="0" mb="6" cb="0"/><line nr="74" mi="5" ci="0" mb="0" cb="0"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="5" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="5" ci="0" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="5" ci="0" mb="0" cb="0"/><line nr="84" mi="1" ci="0" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="3" ci="0" mb="2" cb="0"/><line nr="92" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="11" ci="0" mb="4" cb="0"/><line nr="99" mi="9" ci="0" mb="0" cb="0"/><line nr="100" mi="9" ci="0" mb="0" cb="0"/><line nr="101" mi="16" ci="0" mb="0" cb="0"/><line nr="102" mi="4" ci="0" mb="0" cb="0"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="108" mi="5" ci="0" mb="0" cb="0"/><line nr="109" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="6" ci="0" mb="0" cb="0"/><line nr="112" mi="11" ci="0" mb="2" cb="0"/><line nr="113" mi="6" ci="0" mb="2" cb="0"/><line nr="114" mi="6" ci="0" mb="0" cb="0"/><line nr="115" mi="3" ci="0" mb="0" cb="0"/><line nr="116" mi="3" ci="0" mb="2" cb="0"/><line nr="117" mi="11" ci="0" mb="0" cb="0"/><line nr="118" mi="1" ci="0" mb="0" cb="0"/><line nr="119" mi="3" ci="0" mb="2" cb="0"/><line nr="120" mi="1" ci="0" mb="0" cb="0"/><line nr="122" mi="5" ci="0" mb="0" cb="0"/><line nr="123" mi="6" ci="0" mb="0" cb="0"/><line nr="125" mi="11" ci="0" mb="0" cb="0"/><line nr="126" mi="8" ci="0" mb="0" cb="0"/><line nr="129" mi="9" ci="0" mb="4" cb="0"/><line nr="130" mi="10" ci="0" mb="0" cb="0"/><line nr="131" mi="7" ci="0" mb="4" cb="0"/><line nr="132" mi="5" ci="0" mb="0" cb="0"/><line nr="135" mi="6" ci="0" mb="0" cb="0"/><line nr="136" mi="4" ci="0" mb="0" cb="0"/><line nr="137" mi="2" ci="0" mb="0" cb="0"/><line nr="141" mi="5" ci="0" mb="0" cb="0"/><line nr="142" mi="11" ci="0" mb="2" cb="0"/><line nr="143" mi="6" ci="0" mb="0" cb="0"/><line nr="144" mi="1" ci="0" mb="0" cb="0"/><line nr="145" mi="5" ci="0" mb="0" cb="0"/><line nr="146" mi="4" ci="0" mb="0" cb="0"/><line nr="147" mi="2" ci="0" mb="0" cb="0"/><line nr="152" mi="12" ci="0" mb="0" cb="0"/><line nr="157" mi="3" ci="0" mb="0" cb="0"/><line nr="159" mi="5" ci="0" mb="2" cb="0"/><line nr="160" mi="5" ci="0" mb="0" cb="0"/><line nr="162" mi="3" ci="0" mb="2" cb="0"/><line nr="163" mi="7" ci="0" mb="0" cb="0"/><line nr="165" mi="5" ci="0" mb="0" cb="0"/><line nr="167" mi="4" ci="0" mb="0" cb="0"/><line nr="168" mi="2" ci="0" mb="0" cb="0"/><line nr="170" mi="14" ci="0" mb="0" cb="0"/><line nr="175" mi="11" ci="0" mb="2" cb="0"/><line nr="176" mi="3" ci="0" mb="2" cb="0"/><line nr="177" mi="5" ci="0" mb="0" cb="0"/><line nr="179" mi="3" ci="0" mb="2" cb="0"/><line nr="180" mi="5" ci="0" mb="0" cb="0"/><line nr="181" mi="2" ci="0" mb="2" cb="0"/><line nr="182" mi="2" ci="0" mb="0" cb="0"/><line nr="184" mi="1" ci="0" mb="0" cb="0"/><line nr="185" mi="2" ci="0" mb="0" cb="0"/><line nr="191" mi="3" ci="0" mb="0" cb="0"/><line nr="192" mi="3" ci="0" mb="2" cb="0"/><line nr="193" mi="6" ci="0" mb="0" cb="0"/><line nr="195" mi="2" ci="0" mb="2" cb="0"/><line nr="196" mi="6" ci="0" mb="0" cb="0"/><line nr="197" mi="3" ci="0" mb="2" cb="0"/><line nr="198" mi="8" ci="0" mb="0" cb="0"/><line nr="200" mi="6" ci="0" mb="0" cb="0"/><line nr="203" mi="4" ci="0" mb="0" cb="0"/><line nr="204" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="446" covered="0"/><counter type="BRANCH" missed="56" covered="0"/><counter type="LINE" missed="92" covered="0"/><counter type="COMPLEXITY" missed="40" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="TupleFilterVisitor.java"><line nr="65" mi="2" ci="5" mb="1" cb="1"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="3" ci="0" mb="0" cb="0"/><line nr="85" mi="6" ci="0" mb="17" cb="0"/><line nr="87" mi="5" ci="0" mb="0" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="90" mi="5" ci="0" mb="0" cb="0"/><line nr="91" mi="1" ci="0" mb="0" cb="0"/><line nr="93" mi="5" ci="0" mb="0" cb="0"/><line nr="94" mi="1" ci="0" mb="0" cb="0"/><line nr="96" mi="5" ci="0" mb="0" cb="0"/><line nr="97" mi="1" ci="0" mb="0" cb="0"/><line nr="99" mi="5" ci="0" mb="0" cb="0"/><line nr="100" mi="1" ci="0" mb="0" cb="0"/><line nr="102" mi="5" ci="0" mb="0" cb="0"/><line nr="103" mi="1" ci="0" mb="0" cb="0"/><line nr="105" mi="5" ci="0" mb="0" cb="0"/><line nr="106" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="5" ci="0" mb="0" cb="0"/><line nr="109" mi="1" ci="0" mb="0" cb="0"/><line nr="111" mi="5" ci="0" mb="0" cb="0"/><line nr="112" mi="1" ci="0" mb="0" cb="0"/><line nr="114" mi="5" ci="0" mb="0" cb="0"/><line nr="115" mi="1" ci="0" mb="0" cb="0"/><line nr="117" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="1" ci="0" mb="0" cb="0"/><line nr="122" mi="1" ci="0" mb="0" cb="0"/><line nr="124" mi="4" ci="0" mb="0" cb="0"/><line nr="125" mi="1" ci="0" mb="0" cb="0"/><line nr="127" mi="5" ci="0" mb="2" cb="0"/><line nr="128" mi="6" ci="0" mb="0" cb="0"/><line nr="130" mi="4" ci="0" mb="0" cb="0"/><line nr="132" mi="1" ci="0" mb="0" cb="0"/><line nr="135" mi="4" ci="0" mb="0" cb="0"/><line nr="136" mi="1" ci="0" mb="0" cb="0"/><line nr="141" mi="4" ci="0" mb="0" cb="0"/><line nr="142" mi="2" ci="0" mb="2" cb="0"/><line nr="144" mi="2" ci="0" mb="0" cb="0"/><line nr="146" mi="5" ci="0" mb="0" cb="0"/><line nr="147" mi="1" ci="0" mb="0" cb="0"/><line nr="149" mi="5" ci="0" mb="0" cb="0"/><line nr="152" mi="2" ci="0" mb="0" cb="0"/><line nr="153" mi="11" ci="0" mb="2" cb="0"/><line nr="154" mi="5" ci="0" mb="0" cb="0"/><line nr="155" mi="2" ci="0" mb="2" cb="0"/><line nr="156" mi="7" ci="0" mb="0" cb="0"/><line nr="158" mi="3" ci="0" mb="0" cb="0"/><line nr="160" mi="8" ci="0" mb="4" cb="0"/><line nr="161" mi="2" ci="0" mb="0" cb="0"/><line nr="163" mi="1" ci="0" mb="0" cb="0"/><line nr="164" mi="3" ci="0" mb="2" cb="0"/><line nr="165" mi="3" ci="0" mb="0" cb="0"/><line nr="166" mi="12" ci="0" mb="4" cb="0"/><line nr="167" mi="5" ci="0" mb="2" cb="0"/><line nr="168" mi="6" ci="0" mb="0" cb="0"/><line nr="169" mi="6" ci="0" mb="0" cb="0"/><line nr="170" mi="7" ci="0" mb="4" cb="0"/><line nr="171" mi="2" ci="0" mb="0" cb="0"/><line nr="172" mi="10" ci="0" mb="2" cb="0"/><line nr="173" mi="7" ci="0" mb="0" cb="0"/><line nr="174" mi="1" ci="0" mb="0" cb="0"/><line nr="175" mi="5" ci="0" mb="0" cb="0"/><line nr="176" mi="6" ci="0" mb="0" cb="0"/><line nr="177" mi="3" ci="0" mb="0" cb="0"/><line nr="178" mi="3" ci="0" mb="0" cb="0"/><line nr="183" mi="4" ci="0" mb="2" cb="0"/><line nr="184" mi="4" ci="0" mb="0" cb="0"/><line nr="185" mi="4" ci="0" mb="2" cb="0"/><line nr="186" mi="11" ci="0" mb="4" cb="0"/><line nr="187" mi="7" ci="0" mb="0" cb="0"/><line nr="189" mi="2" ci="0" mb="0" cb="0"/><line nr="194" mi="3" ci="0" mb="0" cb="0"/><line nr="195" mi="4" ci="0" mb="2" cb="0"/><line nr="196" mi="2" ci="0" mb="0" cb="0"/><line nr="199" mi="2" ci="0" mb="0" cb="0"/><line nr="200" mi="2" ci="0" mb="0" cb="0"/><line nr="201" mi="10" ci="0" mb="2" cb="0"/><line nr="202" mi="3" ci="0" mb="2" cb="0"/><line nr="203" mi="2" ci="0" mb="0" cb="0"/><line nr="206" mi="3" ci="0" mb="0" cb="0"/><line nr="207" mi="9" ci="0" mb="4" cb="0"/><line nr="208" mi="2" ci="0" mb="0" cb="0"/><line nr="211" mi="2" ci="0" mb="2" cb="0"/><line nr="212" mi="5" ci="0" mb="0" cb="0"/><line nr="214" mi="4" ci="0" mb="0" cb="0"/><line nr="216" mi="1" ci="0" mb="0" cb="0"/><line nr="218" mi="3" ci="0" mb="0" cb="0"/><line nr="219" mi="3" ci="0" mb="0" cb="0"/><line nr="221" mi="7" ci="0" mb="5" cb="0"/><line nr="223" mi="8" ci="0" mb="0" cb="0"/><line nr="225" mi="8" ci="0" mb="0" cb="0"/><line nr="227" mi="8" ci="0" mb="0" cb="0"/><line nr="229" mi="8" ci="0" mb="0" cb="0"/><line nr="231" mi="2" ci="0" mb="0" cb="0"/><line nr="236" mi="3" ci="0" mb="2" cb="0"/><line nr="237" mi="2" ci="0" mb="0" cb="0"/><line nr="240" mi="3" ci="0" mb="0" cb="0"/><line nr="242" mi="9" ci="0" mb="4" cb="0"/><line nr="243" mi="3" ci="0" mb="2" cb="0"/><line nr="244" mi="2" ci="0" mb="0" cb="0"/><line nr="245" mi="10" ci="0" mb="2" cb="0"/><line nr="246" mi="2" ci="0" mb="2" cb="0"/><line nr="247" mi="5" ci="0" mb="0" cb="0"/><line nr="249" mi="4" ci="0" mb="0" cb="0"/><line nr="252" mi="8" ci="0" mb="4" cb="0"/><line nr="253" mi="3" ci="0" mb="2" cb="0"/><line nr="254" mi="4" ci="0" mb="0" cb="0"/><line nr="256" mi="5" ci="0" mb="0" cb="0"/><line nr="258" mi="1" ci="0" mb="0" cb="0"/><line nr="259" mi="5" ci="0" mb="0" cb="0"/><line nr="261" mi="2" ci="0" mb="0" cb="0"/><line nr="266" mi="0" ci="3" mb="0" cb="0"/><line nr="267" mi="0" ci="3" mb="1" cb="1"/><line nr="268" mi="2" ci="0" mb="0" cb="0"/><line nr="273" mi="0" ci="2" mb="0" cb="0"/><line nr="274" mi="0" ci="2" mb="0" cb="0"/><line nr="275" mi="0" ci="10" mb="0" cb="2"/><line nr="276" mi="0" ci="4" mb="0" cb="2"/><line nr="277" mi="0" ci="3" mb="0" cb="0"/><line nr="278" mi="0" ci="3" mb="0" cb="0"/><line nr="279" mi="0" ci="2" mb="1" cb="1"/><line nr="280" mi="0" ci="5" mb="0" cb="0"/><line nr="281" mi="0" ci="2" mb="0" cb="2"/><line nr="282" mi="0" ci="2" mb="0" cb="0"/><line nr="283" mi="0" ci="2" mb="0" cb="0"/><line nr="284" mi="0" ci="6" mb="0" cb="0"/><line nr="285" mi="0" ci="5" mb="0" cb="0"/><line nr="288" mi="0" ci="7" mb="0" cb="0"/><line nr="289" mi="0" ci="6" mb="0" cb="0"/><line nr="290" mi="0" ci="1" mb="0" cb="0"/><line nr="293" mi="0" ci="4" mb="0" cb="0"/><line nr="294" mi="0" ci="1" mb="0" cb="0"/><line nr="296" mi="0" ci="2" mb="0" cb="0"/><line nr="298" mi="0" ci="5" mb="0" cb="0"/><line nr="299" mi="0" ci="3" mb="0" cb="0"/><line nr="300" mi="0" ci="11" mb="0" cb="2"/><line nr="301" mi="0" ci="5" mb="0" cb="0"/><line nr="302" mi="0" ci="8" mb="0" cb="0"/><line nr="303" mi="0" ci="10" mb="0" cb="0"/><line nr="304" mi="0" ci="8" mb="0" cb="0"/><line nr="305" mi="0" ci="3" mb="0" cb="0"/><line nr="306" mi="0" ci="1" mb="0" cb="0"/><line nr="308" mi="6" ci="7" mb="1" cb="1"/><line nr="313" mi="12" ci="0" mb="0" cb="0"/><line nr="318" mi="6" ci="0" mb="0" cb="0"/><line nr="319" mi="5" ci="0" mb="0" cb="0"/><line nr="320" mi="2" ci="0" mb="0" cb="0"/><line nr="325" mi="3" ci="0" mb="2" cb="0"/><line nr="326" mi="9" ci="0" mb="0" cb="0"/><line nr="328" mi="9" ci="0" mb="0" cb="0"/><line nr="333" mi="2" ci="0" mb="0" cb="0"/><line nr="334" mi="3" ci="0" mb="0" cb="0"/><line nr="335" mi="3" ci="0" mb="2" cb="0"/><line nr="336" mi="5" ci="0" mb="0" cb="0"/><line nr="337" mi="3" ci="0" mb="2" cb="0"/><line nr="338" mi="3" ci="0" mb="0" cb="0"/><line nr="339" mi="4" ci="0" mb="0" cb="0"/><line nr="340" mi="4" ci="0" mb="2" cb="0"/><line nr="342" mi="5" ci="0" mb="0" cb="0"/><line nr="343" mi="2" ci="0" mb="2" cb="0"/><line nr="344" mi="3" ci="0" mb="0" cb="0"/><line nr="346" mi="3" ci="0" mb="0" cb="0"/><line nr="348" mi="5" ci="0" mb="0" cb="0"/><line nr="349" mi="2" ci="0" mb="0" cb="0"/><line nr="354" mi="3" ci="0" mb="0" cb="0"/><line nr="355" mi="5" ci="0" mb="0" cb="0"/><line nr="356" mi="2" ci="0" mb="0" cb="0"/><line nr="360" mi="3" ci="0" mb="0" cb="0"/><line nr="361" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="574" covered="151"/><counter type="BRANCH" missed="100" covered="12"/><counter type="LINE" missed="141" covered="35"/><counter type="COMPLEXITY" missed="71" covered="6"/><counter type="METHOD" missed="10" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="1020" covered="151"/><counter type="BRANCH" missed="156" covered="12"/><counter type="LINE" missed="233" covered="35"/><counter type="COMPLEXITY" missed="111" covered="6"/><counter type="METHOD" missed="20" covered="2"/><counter type="CLASS" missed="1" covered="1"/></package><package name="org/apache/kylin/query/enumerator"><class name="org/apache/kylin/query/enumerator/OLAPQuery$EnumeratorTypeEnum" sourcefilename="OLAPQuery.java"><method name="&lt;clinit&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/enumerator/OLAPQuery" sourcefilename="OLAPQuery.java"><method name="&lt;init&gt;" desc="(Lorg/apache/calcite/DataContext;Lorg/apache/kylin/query/enumerator/OLAPQuery$EnumeratorTypeEnum;I)V" line="48"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/kylin/query/enumerator/OLAPQuery$EnumeratorTypeEnum;I)V" line="58"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enumerator" desc="()Lorg/apache/calcite/linq4j/Enumerator;" line="62"><counter type="INSTRUCTION" missed="71" covered="0"/><counter type="BRANCH" missed="13" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="104" covered="0"/><counter type="BRANCH" missed="15" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/enumerator/DictionaryEnumerator" sourcefilename="DictionaryEnumerator.java"><method name="&lt;init&gt;" desc="(Lorg/apache/kylin/query/relnode/OLAPContext;)V" line="51"><counter type="INSTRUCTION" missed="74" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifDictionaryEnumeratorEligible" desc="(Lorg/apache/kylin/query/relnode/OLAPContext;)Z" line="67"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifColumnHaveDictionary" desc="(Lorg/apache/kylin/metadata/model/TblColRef;Lorg/apache/kylin/metadata/realization/IRealization;Z)Z" line="79"><counter type="INSTRUCTION" missed="62" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllDictionaries" desc="(Lorg/apache/kylin/metadata/model/TblColRef;Lorg/apache/kylin/metadata/realization/IRealization;)Ljava/util/List;" line="110"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="moveNext" desc="()Z" line="115"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="current" desc="()[Ljava/lang/Object;" line="129"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reset" desc="()V" line="134"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="139"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="214" covered="0"/><counter type="BRANCH" missed="28" covered="0"/><counter type="LINE" missed="41" covered="0"/><counter type="COMPLEXITY" missed="23" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/enumerator/HiveEnumerator" sourcefilename="HiveEnumerator.java"><method name="&lt;init&gt;" desc="(Lorg/apache/kylin/query/relnode/OLAPContext;)V" line="43"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="current" desc="()[Ljava/lang/Object;" line="50"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="moveNext" desc="()Z" line="55"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="executeQuery" desc="()Ljava/sql/ResultSet;" line="62"><counter type="INSTRUCTION" missed="59" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="populateResult" desc="()Z" line="81"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reset" desc="()V" line="97"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="104"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="161" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="42" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/enumerator/OLAPQuery$EmptyEnumerator" sourcefilename="OLAPQuery.java"><method name="&lt;init&gt;" desc="()V" line="80"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="86"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="current" desc="()[Ljava/lang/Object;" line="90"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="moveNext" desc="()Z" line="95"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reset" desc="()V" line="100"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/enumerator/LookupTableEnumerator" sourcefilename="LookupTableEnumerator.java"><method name="&lt;init&gt;" desc="(Lorg/apache/kylin/query/relnode/OLAPContext;)V" line="55"><counter type="INSTRUCTION" missed="141" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="36" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="moveNext" desc="()Z" line="109"><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="current" desc="()[Ljava/lang/Object;" line="128"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reset" desc="()V" line="134"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="143"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$0" desc="(Ljava/util/Set;Lorg/apache/kylin/metadata/project/RealizationEntry;)Z" line="75"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="213" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="50" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/enumerator/OLAPEnumerator" sourcefilename="OLAPEnumerator.java"><method name="&lt;init&gt;" desc="(Lorg/apache/kylin/query/relnode/OLAPContext;Lorg/apache/calcite/DataContext;)V" line="45"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="current" desc="()[Ljava/lang/Object;" line="53"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="moveNext" desc="()Z" line="59"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertCurrentRow" desc="(Lorg/apache/kylin/metadata/tuple/ITuple;)V" line="87"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reset" desc="()V" line="93"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="99"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="queryStorage" desc="()Lorg/apache/kylin/metadata/tuple/ITupleIterator;" line="105"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="127" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="42" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="OLAPEnumerator.java"><line nr="38" mi="4" ci="0" mb="0" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="2" cb="0"/><line nr="60" mi="4" ci="0" mb="0" cb="0"/><line nr="63" mi="4" ci="0" mb="2" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="5" ci="0" mb="0" cb="0"/><line nr="68" mi="2" ci="0" mb="2" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="73" mi="1" ci="0" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="2" cb="0"/><line nr="76" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="4" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="88" mi="6" ci="0" mb="0" cb="0"/><line nr="89" mi="1" ci="0" mb="0" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="2" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="101" mi="1" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="0" cb="0"/><line nr="107" mi="5" ci="0" mb="0" cb="0"/><line nr="110" mi="4" ci="0" mb="2" cb="0"/><line nr="111" mi="3" ci="0" mb="0" cb="0"/><line nr="113" mi="4" ci="0" mb="0" cb="0"/><line nr="116" mi="5" ci="0" mb="0" cb="0"/><line nr="117" mi="10" ci="0" mb="0" cb="0"/><line nr="119" mi="3" ci="0" mb="2" cb="0"/><line nr="120" mi="3" ci="0" mb="0" cb="0"/><line nr="123" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="127" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="42" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="LookupTableEnumerator.java"><line nr="48" mi="4" ci="0" mb="0" cb="0"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="4" ci="0" mb="2" cb="0"/><line nr="61" mi="4" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="4" ci="0" mb="0" cb="0"/><line nr="65" mi="4" ci="0" mb="0" cb="0"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="3" ci="0" mb="2" cb="0"/><line nr="70" mi="4" ci="0" mb="0" cb="0"/><line nr="71" mi="4" ci="0" mb="0" cb="0"/><line nr="72" mi="6" ci="0" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="11" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="6" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="5" ci="0" mb="2" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="3" ci="0" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="2" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="88" mi="4" ci="0" mb="0" cb="0"/><line nr="92" mi="4" ci="0" mb="0" cb="0"/><line nr="93" mi="5" ci="0" mb="0" cb="0"/><line nr="94" mi="2" ci="0" mb="2" cb="0"/><line nr="95" mi="17" ci="0" mb="0" cb="0"/><line nr="97" mi="4" ci="0" mb="0" cb="0"/><line nr="100" mi="4" ci="0" mb="0" cb="0"/><line nr="101" mi="4" ci="0" mb="0" cb="0"/><line nr="102" mi="6" ci="0" mb="0" cb="0"/><line nr="104" mi="2" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="109" mi="4" ci="0" mb="0" cb="0"/><line nr="110" mi="2" ci="0" mb="2" cb="0"/><line nr="111" mi="5" ci="0" mb="0" cb="0"/><line nr="112" mi="11" ci="0" mb="2" cb="0"/><line nr="113" mi="6" ci="0" mb="0" cb="0"/><line nr="114" mi="3" ci="0" mb="0" cb="0"/><line nr="115" mi="2" ci="0" mb="2" cb="0"/><line nr="116" mi="12" ci="0" mb="0" cb="0"/><line nr="118" mi="5" ci="0" mb="0" cb="0"/><line nr="122" mi="2" ci="0" mb="0" cb="0"/><line nr="128" mi="7" ci="0" mb="0" cb="0"/><line nr="134" mi="1" ci="0" mb="0" cb="0"/><line nr="143" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="213" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="50" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="HiveEnumerator.java"><line nr="43" mi="2" ci="0" mb="0" cb="0"/><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="6" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="2" cb="0"/><line nr="56" mi="4" ci="0" mb="0" cb="0"/><line nr="58" mi="3" ci="0" mb="0" cb="0"/><line nr="62" mi="5" ci="0" mb="0" cb="0"/><line nr="63" mi="5" ci="0" mb="0" cb="0"/><line nr="64" mi="5" ci="0" mb="0" cb="0"/><line nr="65" mi="5" ci="0" mb="0" cb="0"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="68" mi="6" ci="0" mb="0" cb="0"/><line nr="69" mi="4" ci="0" mb="0" cb="0"/><line nr="70" mi="6" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="15" ci="0" mb="0" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><line nr="82" mi="2" ci="0" mb="2" cb="0"/><line nr="83" mi="5" ci="0" mb="0" cb="0"/><line nr="84" mi="8" ci="0" mb="2" cb="0"/><line nr="85" mi="10" ci="0" mb="0" cb="0"/><line nr="86" mi="5" ci="0" mb="0" cb="0"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="1" ci="0" mb="0" cb="0"/><line nr="91" mi="6" ci="0" mb="0" cb="0"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="4" ci="0" mb="0" cb="0"/><line nr="99" mi="1" ci="0" mb="0" cb="0"/><line nr="104" mi="3" ci="0" mb="2" cb="0"/><line nr="105" mi="3" ci="0" mb="0" cb="0"/><line nr="106" mi="3" ci="0" mb="0" cb="0"/><line nr="108" mi="3" ci="0" mb="2" cb="0"/><line nr="109" mi="3" ci="0" mb="0" cb="0"/><line nr="110" mi="3" ci="0" mb="0" cb="0"/><line nr="112" mi="1" ci="0" mb="0" cb="0"/><line nr="113" mi="6" ci="0" mb="0" cb="0"/><line nr="114" mi="1" ci="0" mb="0" cb="0"/><line nr="115" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="161" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="42" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="OLAPQuery.java"><line nr="35" mi="4" ci="0" mb="0" cb="0"/><line nr="37" mi="20" ci="0" mb="0" cb="0"/><line nr="38" mi="6" ci="0" mb="0" cb="0"/><line nr="39" mi="6" ci="0" mb="0" cb="0"/><line nr="40" mi="6" ci="0" mb="0" cb="0"/><line nr="41" mi="6" ci="0" mb="0" cb="0"/><line nr="48" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="11" ci="0" mb="2" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="5" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="63" mi="6" ci="0" mb="5" cb="0"/><line nr="65" mi="13" ci="0" mb="2" cb="0"/><line nr="68" mi="11" ci="0" mb="2" cb="0"/><line nr="70" mi="11" ci="0" mb="2" cb="0"/><line nr="72" mi="11" ci="0" mb="2" cb="0"/><line nr="74" mi="15" ci="0" mb="0" cb="0"/><line nr="80" mi="2" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="1" ci="0" mb="0" cb="0"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="2" ci="0" mb="0" cb="0"/><line nr="100" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="160" covered="0"/><counter type="BRANCH" missed="15" covered="0"/><counter type="LINE" missed="28" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="3" covered="0"/></sourcefile><sourcefile name="DictionaryEnumerator.java"><line nr="42" mi="4" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="10" ci="0" mb="2" cb="0"/><line nr="54" mi="7" ci="0" mb="0" cb="0"/><line nr="55" mi="21" ci="0" mb="0" cb="0"/><line nr="58" mi="7" ci="0" mb="0" cb="0"/><line nr="59" mi="6" ci="0" mb="0" cb="0"/><line nr="60" mi="7" ci="0" mb="0" cb="0"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="11" ci="0" mb="0" cb="0"/><line nr="64" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="5" ci="0" mb="2" cb="0"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="6" ci="0" mb="0" cb="0"/><line nr="72" mi="6" ci="0" mb="2" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="2" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="10" ci="0" mb="4" cb="0"/><line nr="82" mi="12" ci="0" mb="4" cb="0"/><line nr="83" mi="3" ci="0" mb="2" cb="0"/><line nr="84" mi="3" ci="0" mb="0" cb="0"/><line nr="85" mi="17" ci="0" mb="2" cb="0"/><line nr="86" mi="5" ci="0" mb="2" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="7" ci="0" mb="4" cb="0"/><line nr="116" mi="4" ci="0" mb="2" cb="0"/><line nr="117" mi="2" ci="0" mb="0" cb="0"/><line nr="119" mi="5" ci="0" mb="0" cb="0"/><line nr="120" mi="5" ci="0" mb="0" cb="0"/><line nr="121" mi="1" ci="0" mb="0" cb="0"/><line nr="123" mi="13" ci="0" mb="0" cb="0"/><line nr="124" mi="2" ci="0" mb="0" cb="0"/><line nr="129" mi="3" ci="0" mb="0" cb="0"/><line nr="134" mi="5" ci="0" mb="0" cb="0"/><line nr="135" mi="1" ci="0" mb="0" cb="0"/><line nr="139" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="214" covered="0"/><counter type="BRANCH" missed="28" covered="0"/><counter type="LINE" missed="41" covered="0"/><counter type="COMPLEXITY" missed="23" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="875" covered="0"/><counter type="BRANCH" missed="83" covered="0"/><counter type="LINE" missed="203" covered="0"/><counter type="COMPLEXITY" missed="84" covered="0"/><counter type="METHOD" missed="41" covered="0"/><counter type="CLASS" missed="7" covered="0"/></package><package name="org/apache/kylin/query/routing/rules"><class name="org/apache/kylin/query/routing/rules/RemoveUncapableRealizationsRule" sourcefilename="RemoveUncapableRealizationsRule.java"><method name="&lt;init&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Ljava/util/List;)V" line="33"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/routing/rules/RealizationSortRule" sourcefilename="RealizationSortRule.java"><method name="&lt;init&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Ljava/util/List;)V" line="36"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/routing/rules/RemoveBlackoutRealizationsRule" sourcefilename="RemoveBlackoutRealizationsRule.java"><method name="&lt;init&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lorg/apache/kylin/metadata/realization/IRealization;)Z" line="44"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFilterImpl" desc="(Lorg/apache/kylin/common/KylinConfig;)Lorg/apache/kylin/metadata/realization/IRealizationFilter;" line="60"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Ljava/util/List;)V" line="78"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="114" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="31" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="RealizationSortRule.java"><line nr="31" mi="3" ci="0" mb="0" cb="0"/><line nr="32" mi="4" ci="0" mb="0" cb="0"/><line nr="36" mi="4" ci="0" mb="0" cb="0"/><line nr="37" mi="10" ci="0" mb="2" cb="0"/><line nr="38" mi="24" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="4" ci="0" mb="0" cb="0"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="RemoveBlackoutRealizationsRule.java"><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="39" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="5" ci="0" mb="0" cb="0"/><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="4" ci="0" mb="2" cb="0"/><line nr="46" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="7" ci="0" mb="4" cb="0"/><line nr="48" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="2" cb="0"/><line nr="52" mi="6" ci="0" mb="2" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="5" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="2" cb="0"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="64" mi="5" ci="0" mb="0" cb="0"/><line nr="66" mi="17" ci="0" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="68" mi="5" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="5" ci="0" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="6" ci="0" mb="2" cb="0"/><line nr="79" mi="4" ci="0" mb="0" cb="0"/><line nr="81" mi="4" ci="0" mb="2" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="1" ci="0" mb="0" cb="0"/><line nr="85" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="114" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="31" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="RemoveUncapableRealizationsRule.java"><line nr="30" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="6" ci="0" mb="2" cb="0"/><line nr="34" mi="4" ci="0" mb="0" cb="0"/><line nr="36" mi="6" ci="0" mb="0" cb="0"/><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="3" ci="0" mb="2" cb="0"/><line nr="39" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="196" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="49" covered="0"/><counter type="COMPLEXITY" missed="21" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="3" covered="0"/></package><package name="org/apache/kylin/query/optrule"><class name="org/apache/kylin/query/optrule/OLAPAggregateRule" sourcefilename="OLAPAggregateRule.java"><method name="&lt;init&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convert" desc="(Lorg/apache/calcite/rel/RelNode;)Lorg/apache/calcite/rel/RelNode;" line="45"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsAvg" desc="(Lorg/apache/calcite/rel/logical/LogicalAggregate;)Z" line="62"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="74" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/optrule/OLAPProjectRule$1" sourcefilename="OLAPProjectRule.java"><method name="&lt;init&gt;" desc="(Lorg/apache/kylin/query/optrule/OLAPProjectRule;Lorg/apache/calcite/plan/RelOptCluster;Lorg/apache/calcite/rel/RelNode;Lorg/apache/calcite/rel/logical/LogicalProject;)V" line="60"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/util/List;" line="63"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/optrule/OLAPLimitRule" sourcefilename="OLAPLimitRule.java"><method name="&lt;init&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onMatch" desc="(Lorg/apache/calcite/plan/RelOptRuleCall;)V" line="41"><counter type="INSTRUCTION" missed="59" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="71" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/optrule/OLAPFilterRule" sourcefilename="OLAPFilterRule.java"><method name="&lt;init&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convert" desc="(Lorg/apache/calcite/rel/RelNode;)Lorg/apache/calcite/rel/RelNode;" line="43"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/optrule/OLAPValuesRule" sourcefilename="OLAPValuesRule.java"><method name="&lt;init&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convert" desc="(Lorg/apache/calcite/rel/RelNode;)Lorg/apache/calcite/rel/RelNode;" line="37"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/optrule/OLAPWindowRule" sourcefilename="OLAPWindowRule.java"><method name="&lt;init&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convert" desc="(Lorg/apache/calcite/rel/RelNode;)Lorg/apache/calcite/rel/RelNode;" line="41"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/optrule/OLAPJoinRule" sourcefilename="OLAPJoinRule.java"><method name="&lt;init&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convert" desc="(Lorg/apache/calcite/rel/RelNode;)Lorg/apache/calcite/rel/RelNode;" line="48"><counter type="INSTRUCTION" missed="141" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="28" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="153" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="31" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/optrule/AggregateMultipleExpandRule" sourcefilename="AggregateMultipleExpandRule.java"><method name="&lt;init&gt;" desc="(Lorg/apache/calcite/plan/RelOptRuleOperand;Ljava/lang/String;)V" line="70"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asList" desc="(Lorg/apache/calcite/util/ImmutableBitSet;)Ljava/util/List;" line="74"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onMatch" desc="(Lorg/apache/calcite/plan/RelOptRuleCall;)V" line="81"><counter type="INSTRUCTION" missed="136" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="29" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="61"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="169" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="37" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/optrule/OLAPToEnumerableConverterRule" sourcefilename="OLAPToEnumerableConverterRule.java"><method name="&lt;init&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convert" desc="(Lorg/apache/calcite/rel/RelNode;)Lorg/apache/calcite/rel/RelNode;" line="40"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/optrule/OLAPProjectRule" sourcefilename="OLAPProjectRule.java"><method name="&lt;init&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convert" desc="(Lorg/apache/calcite/rel/RelNode;)Lorg/apache/calcite/rel/RelNode;" line="55"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/optrule/OLAPUnionRule" sourcefilename="OLAPUnionRule.java"><method name="&lt;init&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convert" desc="(Lorg/apache/calcite/rel/RelNode;)Lorg/apache/calcite/rel/RelNode;" line="43"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/optrule/OLAPSortRule" sourcefilename="OLAPSortRule.java"><method name="&lt;init&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convert" desc="(Lorg/apache/calcite/rel/RelNode;)Lorg/apache/calcite/rel/RelNode;" line="41"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/optrule/AggregateProjectReduceRule" sourcefilename="AggregateProjectReduceRule.java"><method name="&lt;init&gt;" desc="(Lorg/apache/calcite/plan/RelOptRuleOperand;Lorg/apache/calcite/tools/RelBuilderFactory;Ljava/lang/String;)V" line="55"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mappingKeys" desc="(ILorg/apache/calcite/util/Pair;Ljava/util/List;Ljava/util/Map;)V" line="59"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onMatch" desc="(Lorg/apache/calcite/plan/RelOptRuleCall;)V" line="67"><counter type="INSTRUCTION" missed="165" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="33" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="205" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="41" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/optrule/AggregateMultipleExpandRule$1" sourcefilename="AggregateMultipleExpandRule.java"><method name="&lt;init&gt;" desc="()V" line="62"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Lorg/apache/calcite/rel/core/Aggregate;)Z" line="65"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="OLAPLimitRule.java"><line nr="33" mi="5" ci="0" mb="0" cb="0"/><line nr="36" mi="6" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="5" ci="0" mb="0" cb="0"/><line nr="42" mi="6" ci="0" mb="4" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="5" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="5" ci="0" mb="2" cb="0"/><line nr="52" mi="10" ci="0" mb="0" cb="0"/><line nr="54" mi="7" ci="0" mb="0" cb="0"/><line nr="55" mi="13" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="71" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="OLAPAggregateRule.java"><line nr="37" mi="5" ci="0" mb="0" cb="0"/><line nr="40" mi="6" ci="0" mb="0" cb="0"/><line nr="41" mi="1" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="4" ci="0" mb="2" cb="0"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="5" ci="0" mb="0" cb="0"/><line nr="55" mi="19" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="6" ci="0" mb="0" cb="0"/><line nr="62" mi="11" ci="0" mb="2" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="2" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="74" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="OLAPToEnumerableConverterRule.java"><line nr="32" mi="5" ci="0" mb="0" cb="0"/><line nr="35" mi="6" ci="0" mb="0" cb="0"/><line nr="36" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="6" ci="0" mb="0" cb="0"/><line nr="41" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AggregateMultipleExpandRule.java"><line nr="61" mi="9" ci="0" mb="0" cb="0"/><line nr="62" mi="7" ci="0" mb="0" cb="0"/><line nr="65" mi="8" ci="0" mb="2" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="70" mi="4" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="5" ci="0" mb="0" cb="0"/><line nr="75" mi="4" ci="0" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="81" mi="6" ci="0" mb="0" cb="0"/><line nr="82" mi="3" ci="0" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="84" mi="4" ci="0" mb="0" cb="0"/><line nr="86" mi="11" ci="0" mb="2" cb="0"/><line nr="88" mi="14" ci="0" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="4" ci="0" mb="0" cb="0"/><line nr="93" mi="5" ci="0" mb="0" cb="0"/><line nr="94" mi="3" ci="0" mb="0" cb="0"/><line nr="95" mi="5" ci="0" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="2" cb="0"/><line nr="99" mi="4" ci="0" mb="0" cb="0"/><line nr="100" mi="5" ci="0" mb="0" cb="0"/><line nr="101" mi="4" ci="0" mb="2" cb="0"/><line nr="102" mi="8" ci="0" mb="0" cb="0"/><line nr="103" mi="6" ci="0" mb="0" cb="0"/><line nr="105" mi="6" ci="0" mb="0" cb="0"/><line nr="107" mi="1" ci="0" mb="0" cb="0"/><line nr="110" mi="3" ci="0" mb="2" cb="0"/><line nr="111" mi="5" ci="0" mb="0" cb="0"/><line nr="112" mi="8" ci="0" mb="0" cb="0"/><line nr="113" mi="1" ci="0" mb="0" cb="0"/><line nr="114" mi="5" ci="0" mb="0" cb="0"/><line nr="115" mi="1" ci="0" mb="0" cb="0"/><line nr="116" mi="8" ci="0" mb="0" cb="0"/><line nr="118" mi="3" ci="0" mb="0" cb="0"/><line nr="119" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="180" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="38" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="OLAPValuesRule.java"><line nr="29" mi="5" ci="0" mb="0" cb="0"/><line nr="32" mi="6" ci="0" mb="0" cb="0"/><line nr="33" mi="1" ci="0" mb="0" cb="0"/><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="OLAPUnionRule.java"><line nr="35" mi="5" ci="0" mb="0" cb="0"/><line nr="38" mi="6" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="5" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="OLAPWindowRule.java"><line nr="33" mi="5" ci="0" mb="0" cb="0"/><line nr="36" mi="6" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="5" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="8" ci="0" mb="0" cb="0"/><line nr="45" mi="11" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="OLAPProjectRule.java"><line nr="43" mi="5" ci="0" mb="0" cb="0"/><line nr="46" mi="7" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="5" ci="0" mb="0" cb="0"/><line nr="57" mi="4" ci="0" mb="0" cb="0"/><line nr="58" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="12" ci="0" mb="0" cb="0"/><line nr="60" mi="17" ci="0" mb="0" cb="0"/><line nr="63" mi="10" ci="0" mb="0" cb="0"/><line nr="66" mi="10" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="79" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="OLAPJoinRule.java"><line nr="40" mi="5" ci="0" mb="0" cb="0"/><line nr="43" mi="6" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="4" ci="0" mb="0" cb="0"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="52" mi="5" ci="0" mb="0" cb="0"/><line nr="53" mi="7" ci="0" mb="0" cb="0"/><line nr="54" mi="7" ci="0" mb="0" cb="0"/><line nr="56" mi="6" ci="0" mb="0" cb="0"/><line nr="57" mi="7" ci="0" mb="4" cb="0"/><line nr="59" mi="9" ci="0" mb="0" cb="0"/><line nr="60" mi="6" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="5" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="7" ci="0" mb="4" cb="0"/><line nr="70" mi="5" ci="0" mb="0" cb="0"/><line nr="72" mi="10" ci="0" mb="0" cb="0"/><line nr="73" mi="7" ci="0" mb="0" cb="0"/><line nr="74" mi="5" ci="0" mb="0" cb="0"/><line nr="76" mi="3" ci="0" mb="2" cb="0"/><line nr="77" mi="8" ci="0" mb="0" cb="0"/><line nr="78" mi="5" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="82" mi="5" ci="0" mb="0" cb="0"/><line nr="85" mi="1" ci="0" mb="0" cb="0"/><line nr="86" mi="3" ci="0" mb="2" cb="0"/><line nr="87" mi="8" ci="0" mb="0" cb="0"/><line nr="88" mi="4" ci="0" mb="0" cb="0"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="153" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="31" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="OLAPFilterRule.java"><line nr="35" mi="5" ci="0" mb="0" cb="0"/><line nr="38" mi="7" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="5" ci="0" mb="0" cb="0"/><line nr="48" mi="7" ci="0" mb="0" cb="0"/><line nr="49" mi="8" ci="0" mb="0" cb="0"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AggregateProjectReduceRule.java"><line nr="50" mi="7" ci="0" mb="0" cb="0"/><line nr="51" mi="9" ci="0" mb="0" cb="0"/><line nr="55" mi="5" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="59" mi="4" ci="0" mb="2" cb="0"/><line nr="60" mi="4" ci="0" mb="0" cb="0"/><line nr="62" mi="9" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="5" ci="0" mb="0" cb="0"/><line nr="68" mi="5" ci="0" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><line nr="72" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><line nr="74" mi="12" ci="0" mb="2" cb="0"/><line nr="75" mi="9" ci="0" mb="0" cb="0"/><line nr="76" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="5" ci="0" mb="0" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="11" ci="0" mb="2" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="12" ci="0" mb="2" cb="0"/><line nr="86" mi="9" ci="0" mb="0" cb="0"/><line nr="87" mi="7" ci="0" mb="0" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="90" mi="3" ci="0" mb="2" cb="0"/><line nr="91" mi="3" ci="0" mb="0" cb="0"/><line nr="92" mi="9" ci="0" mb="0" cb="0"/><line nr="93" mi="8" ci="0" mb="0" cb="0"/><line nr="94" mi="1" ci="0" mb="0" cb="0"/><line nr="95" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="8" ci="0" mb="0" cb="0"/><line nr="99" mi="1" ci="0" mb="0" cb="0"/><line nr="102" mi="5" ci="0" mb="2" cb="0"/><line nr="103" mi="1" ci="0" mb="0" cb="0"/><line nr="106" mi="3" ci="0" mb="0" cb="0"/><line nr="107" mi="5" ci="0" mb="0" cb="0"/><line nr="108" mi="7" ci="0" mb="0" cb="0"/><line nr="109" mi="10" ci="0" mb="0" cb="0"/><line nr="110" mi="3" ci="0" mb="0" cb="0"/><line nr="112" mi="3" ci="0" mb="0" cb="0"/><line nr="113" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="205" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="41" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="OLAPSortRule.java"><line nr="33" mi="5" ci="0" mb="0" cb="0"/><line nr="36" mi="6" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="6" ci="0" mb="4" cb="0"/><line nr="43" mi="2" ci="0" mb="0" cb="0"/><line nr="45" mi="5" ci="0" mb="0" cb="0"/><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="19" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="979" covered="0"/><counter type="BRANCH" missed="50" covered="0"/><counter type="LINE" missed="195" covered="0"/><counter type="COMPLEXITY" missed="68" covered="0"/><counter type="METHOD" missed="43" covered="0"/><counter type="CLASS" missed="14" covered="0"/></package><package name="org/apache/kylin/query/udf"><class name="org/apache/kylin/query/udf/VersionUDF" sourcefilename="VersionUDF.java"><method name="&lt;init&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="eval" desc="()Ljava/lang/String;" line="25"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/kylin/query/udf/MassInUDF" sourcefilename="MassInUDF.java"><method name="&lt;init&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eval" desc="(Ljava/lang/Object;Ljava/lang/String;)Z" line="26"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/udf/ConcatUDF" sourcefilename="ConcatUDF.java"><method name="&lt;init&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eval" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="26"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="VersionUDF.java"><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MassInUDF.java"><line nr="23" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ConcatUDF.java"><line nr="23" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="2" ci="0" mb="2" cb="0"/><line nr="27" mi="2" ci="0" mb="0" cb="0"/><line nr="29" mi="2" ci="0" mb="2" cb="0"/><line nr="30" mi="2" ci="0" mb="0" cb="0"/><line nr="32" mi="9" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="25" covered="6"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="2"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="2" covered="1"/></package><package name="org/apache/kylin/query/adhoc"><class name="org/apache/kylin/query/adhoc/JdbcPushDownConnectionManager" sourcefilename="JdbcPushDownConnectionManager.java"><method name="getConnectionManager" desc="(Ljava/lang/String;)Lorg/apache/kylin/query/adhoc/JdbcPushDownConnectionManager;" line="32"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/kylin/common/KylinConfig;Ljava/lang/String;)V" line="45"><counter type="INSTRUCTION" missed="71" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="66"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="(Ljava/sql/Connection;)V" line="74"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConnection" desc="()Ljava/sql/Connection;" line="82"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="124" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="35" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/adhoc/PushDownRunnerJdbcImpl" sourcefilename="PushDownRunnerJdbcImpl.java"><method name="&lt;init&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="init" desc="(Lorg/apache/kylin/common/KylinConfig;)V" line="71"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="initById" desc="(Lorg/apache/kylin/common/KylinConfig;Ljava/lang/String;)V" line="79"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="executeQuery" desc="(Ljava/lang/String;Ljava/util/List;Ljava/util/List;)V" line="88"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extractColumnMeta" desc="(Ljava/sql/ResultSetMetaData;I)Lorg/apache/kylin/metadata/querymeta/SelectedColumnMeta;" line="116"><counter type="INSTRUCTION" missed="192" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="79" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toSqlType" desc="(Ljava/lang/String;)I" line="260"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="executeUpdate" desc="(Ljava/lang/String;)V" line="272"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extractResults" desc="(Ljava/sql/ResultSet;Ljava/util/List;)V" line="285"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="123" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="490" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="150" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="JdbcPushDownConnectionManager.java"><line nr="29" mi="3" ci="0" mb="0" cb="0"/><line nr="32" mi="2" ci="0" mb="2" cb="0"/><line nr="33" mi="4" ci="0" mb="0" cb="0"/><line nr="34" mi="2" ci="0" mb="2" cb="0"/><line nr="35" mi="6" ci="0" mb="0" cb="0"/><line nr="38" mi="3" ci="0" mb="0" cb="0"/><line nr="40" mi="2" ci="0" mb="0" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="5" ci="0" mb="0" cb="0"/><line nr="48" mi="5" ci="0" mb="0" cb="0"/><line nr="49" mi="6" ci="0" mb="0" cb="0"/><line nr="50" mi="6" ci="0" mb="0" cb="0"/><line nr="51" mi="6" ci="0" mb="0" cb="0"/><line nr="52" mi="6" ci="0" mb="0" cb="0"/><line nr="53" mi="6" ci="0" mb="0" cb="0"/><line nr="54" mi="6" ci="0" mb="0" cb="0"/><line nr="55" mi="6" ci="0" mb="0" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="4" ci="0" mb="0" cb="0"/><line nr="61" mi="4" ci="0" mb="0" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="68" mi="5" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="77" mi="1" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="0" cb="0"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><line nr="84" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="124" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="35" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="PushDownRunnerJdbcImpl.java"><line nr="39" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="4" ci="0" mb="0" cb="0"/><line nr="43" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="6" ci="0" mb="0" cb="0"/><line nr="47" mi="6" ci="0" mb="0" cb="0"/><line nr="48" mi="6" ci="0" mb="0" cb="0"/><line nr="49" mi="6" ci="0" mb="0" cb="0"/><line nr="50" mi="6" ci="0" mb="0" cb="0"/><line nr="51" mi="6" ci="0" mb="0" cb="0"/><line nr="52" mi="6" ci="0" mb="0" cb="0"/><line nr="53" mi="6" ci="0" mb="0" cb="0"/><line nr="54" mi="6" ci="0" mb="0" cb="0"/><line nr="55" mi="6" ci="0" mb="0" cb="0"/><line nr="56" mi="6" ci="0" mb="0" cb="0"/><line nr="57" mi="6" ci="0" mb="0" cb="0"/><line nr="58" mi="6" ci="0" mb="0" cb="0"/><line nr="59" mi="6" ci="0" mb="0" cb="0"/><line nr="60" mi="6" ci="0" mb="0" cb="0"/><line nr="61" mi="6" ci="0" mb="0" cb="0"/><line nr="62" mi="6" ci="0" mb="0" cb="0"/><line nr="63" mi="6" ci="0" mb="0" cb="0"/><line nr="64" mi="6" ci="0" mb="0" cb="0"/><line nr="65" mi="6" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="4" ci="0" mb="0" cb="0"/><line nr="72" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="7" ci="0" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="4" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="81" mi="7" ci="0" mb="0" cb="0"/><line nr="82" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="2" ci="0" mb="0" cb="0"/><line nr="96" mi="3" ci="0" mb="0" cb="0"/><line nr="97" mi="4" ci="0" mb="0" cb="0"/><line nr="98" mi="4" ci="0" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="0" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="103" mi="7" ci="0" mb="2" cb="0"/><line nr="104" mi="5" ci="0" mb="0" cb="0"/><line nr="105" mi="4" ci="0" mb="0" cb="0"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="109" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="4" ci="0" mb="0" cb="0"/><line nr="112" mi="1" ci="0" mb="0" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="118" mi="4" ci="0" mb="0" cb="0"/><line nr="119" mi="1" ci="0" mb="0" cb="0"/><line nr="121" mi="1" ci="0" mb="0" cb="0"/><line nr="123" mi="2" ci="0" mb="0" cb="0"/><line nr="125" mi="4" ci="0" mb="0" cb="0"/><line nr="126" mi="1" ci="0" mb="0" cb="0"/><line nr="128" mi="1" ci="0" mb="0" cb="0"/><line nr="130" mi="2" ci="0" mb="0" cb="0"/><line nr="132" mi="4" ci="0" mb="0" cb="0"/><line nr="133" mi="1" ci="0" mb="0" cb="0"/><line nr="135" mi="1" ci="0" mb="0" cb="0"/><line nr="137" mi="2" ci="0" mb="0" cb="0"/><line nr="139" mi="4" ci="0" mb="0" cb="0"/><line nr="140" mi="1" ci="0" mb="0" cb="0"/><line nr="142" mi="1" ci="0" mb="0" cb="0"/><line nr="144" mi="2" ci="0" mb="0" cb="0"/><line nr="146" mi="4" ci="0" mb="0" cb="0"/><line nr="147" mi="1" ci="0" mb="0" cb="0"/><line nr="149" mi="1" ci="0" mb="0" cb="0"/><line nr="151" mi="2" ci="0" mb="0" cb="0"/><line nr="153" mi="4" ci="0" mb="0" cb="0"/><line nr="154" mi="1" ci="0" mb="0" cb="0"/><line nr="156" mi="1" ci="0" mb="0" cb="0"/><line nr="158" mi="2" ci="0" mb="0" cb="0"/><line nr="160" mi="4" ci="0" mb="0" cb="0"/><line nr="161" mi="1" ci="0" mb="0" cb="0"/><line nr="163" mi="1" ci="0" mb="0" cb="0"/><line nr="165" mi="2" ci="0" mb="0" cb="0"/><line nr="167" mi="4" ci="0" mb="0" cb="0"/><line nr="169" mi="4" ci="0" mb="2" cb="0"/><line nr="170" mi="6" ci="0" mb="0" cb="0"/><line nr="172" mi="1" ci="0" mb="0" cb="0"/><line nr="174" mi="1" ci="0" mb="0" cb="0"/><line nr="176" mi="2" ci="0" mb="0" cb="0"/><line nr="178" mi="6" ci="0" mb="0" cb="0"/><line nr="179" mi="1" ci="0" mb="0" cb="0"/><line nr="181" mi="1" ci="0" mb="0" cb="0"/><line nr="183" mi="2" ci="0" mb="0" cb="0"/><line nr="185" mi="4" ci="0" mb="0" cb="0"/><line nr="186" mi="1" ci="0" mb="0" cb="0"/><line nr="188" mi="1" ci="0" mb="0" cb="0"/><line nr="190" mi="2" ci="0" mb="0" cb="0"/><line nr="192" mi="4" ci="0" mb="0" cb="0"/><line nr="193" mi="1" ci="0" mb="0" cb="0"/><line nr="195" mi="1" ci="0" mb="0" cb="0"/><line nr="197" mi="2" ci="0" mb="0" cb="0"/><line nr="199" mi="4" ci="0" mb="0" cb="0"/><line nr="200" mi="1" ci="0" mb="0" cb="0"/><line nr="203" mi="4" ci="0" mb="2" cb="0"/><line nr="204" mi="4" ci="0" mb="0" cb="0"/><line nr="206" mi="1" ci="0" mb="0" cb="0"/><line nr="208" mi="2" ci="0" mb="0" cb="0"/><line nr="210" mi="4" ci="0" mb="0" cb="0"/><line nr="211" mi="1" ci="0" mb="0" cb="0"/><line nr="213" mi="1" ci="0" mb="0" cb="0"/><line nr="215" mi="2" ci="0" mb="0" cb="0"/><line nr="217" mi="4" ci="0" mb="0" cb="0"/><line nr="218" mi="1" ci="0" mb="0" cb="0"/><line nr="220" mi="1" ci="0" mb="0" cb="0"/><line nr="222" mi="2" ci="0" mb="0" cb="0"/><line nr="224" mi="4" ci="0" mb="0" cb="0"/><line nr="225" mi="1" ci="0" mb="0" cb="0"/><line nr="227" mi="1" ci="0" mb="0" cb="0"/><line nr="229" mi="3" ci="0" mb="0" cb="0"/><line nr="231" mi="2" ci="0" mb="0" cb="0"/><line nr="233" mi="4" ci="0" mb="0" cb="0"/><line nr="234" mi="1" ci="0" mb="0" cb="0"/><line nr="236" mi="1" ci="0" mb="0" cb="0"/><line nr="238" mi="2" ci="0" mb="0" cb="0"/><line nr="240" mi="4" ci="0" mb="0" cb="0"/><line nr="241" mi="1" ci="0" mb="0" cb="0"/><line nr="243" mi="1" ci="0" mb="0" cb="0"/><line nr="245" mi="2" ci="0" mb="0" cb="0"/><line nr="247" mi="4" ci="0" mb="0" cb="0"/><line nr="248" mi="1" ci="0" mb="0" cb="0"/><line nr="250" mi="1" ci="0" mb="0" cb="0"/><line nr="252" mi="23" ci="0" mb="0" cb="0"/><line nr="255" mi="2" ci="0" mb="0" cb="0"/><line nr="260" mi="4" ci="0" mb="0" cb="0"/><line nr="261" mi="4" ci="0" mb="2" cb="0"/><line nr="262" mi="2" ci="0" mb="0" cb="0"/><line nr="263" mi="4" ci="0" mb="2" cb="0"/><line nr="264" mi="6" ci="0" mb="0" cb="0"/><line nr="267" mi="12" ci="0" mb="0" cb="0"/><line nr="272" mi="2" ci="0" mb="0" cb="0"/><line nr="273" mi="4" ci="0" mb="0" cb="0"/><line nr="276" mi="3" ci="0" mb="0" cb="0"/><line nr="277" mi="4" ci="0" mb="0" cb="0"/><line nr="279" mi="2" ci="0" mb="0" cb="0"/><line nr="280" mi="4" ci="0" mb="0" cb="0"/><line nr="282" mi="1" ci="0" mb="0" cb="0"/><line nr="285" mi="4" ci="0" mb="0" cb="0"/><line nr="287" mi="3" ci="0" mb="2" cb="0"/><line nr="289" mi="9" ci="0" mb="2" cb="0"/><line nr="290" mi="8" ci="0" mb="0" cb="0"/><line nr="293" mi="7" ci="0" mb="0" cb="0"/><line nr="294" mi="3" ci="0" mb="0" cb="0"/><line nr="296" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="490" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="150" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="614" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="185" covered="0"/><counter type="COMPLEXITY" missed="24" covered="0"/><counter type="METHOD" missed="15" covered="0"/><counter type="CLASS" missed="2" covered="0"/></package><package name="org/apache/kylin/query/relnode"><class name="org/apache/kylin/query/relnode/OLAPProjectRel" sourcefilename="OLAPProjectRel.java"><method name="&lt;init&gt;" desc="(Lorg/apache/calcite/plan/RelOptCluster;Lorg/apache/calcite/plan/RelTraitSet;Lorg/apache/calcite/rel/RelNode;Ljava/util/List;Lorg/apache/calcite/rel/type/RelDataType;)V" line="84"><counter type="INSTRUCTION" missed="104" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChildExps" desc="()Ljava/util/List;" line="120"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProjects" desc="()Ljava/util/List;" line="125"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeSelfCost" desc="(Lorg/apache/calcite/plan/RelOptPlanner;Lorg/apache/calcite/rel/metadata/RelMetadataQuery;)Lorg/apache/calcite/plan/RelOptCost;" line="137"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="(Lorg/apache/calcite/plan/RelTraitSet;Lorg/apache/calcite/rel/RelNode;Ljava/util/List;Lorg/apache/calcite/rel/type/RelDataType;)Lorg/apache/calcite/rel/core/Project;" line="146"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="implementOLAP" desc="(Lorg/apache/kylin/query/relnode/OLAPRel$OLAPImplementor;)V" line="151"><counter type="INSTRUCTION" missed="76" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="buildColumnRowType" desc="()Lorg/apache/kylin/query/relnode/ColumnRowType;" line="178"><counter type="INSTRUCTION" missed="150" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="31" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="translateRexNode" desc="(Lorg/apache/calcite/rex/RexNode;Lorg/apache/kylin/query/relnode/ColumnRowType;Lorg/apache/kylin/metadata/expression/TupleExpression;Ljava/lang/String;)Lorg/apache/kylin/metadata/model/TblColRef;" line="225"><counter type="INSTRUCTION" missed="65" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="implementEnumerable" desc="(Ljava/util/List;)Lorg/apache/calcite/adapter/enumerable/EnumerableRel;" line="245"><counter type="INSTRUCTION" missed="68" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getColumnRowType" desc="()Lorg/apache/kylin/query/relnode/ColumnRowType;" line="265"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="implementRewrite" desc="(Lorg/apache/kylin/query/relnode/OLAPRel$RewriteImplementor;)V" line="270"><counter type="INSTRUCTION" missed="274" covered="0"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="57" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContext" desc="()Lorg/apache/kylin/query/relnode/OLAPContext;" line="358"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasSubQuery" desc="()Z" line="363"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceTraitSet" desc="(Lorg/apache/calcite/plan/RelTrait;)Lorg/apache/calcite/plan/RelTraitSet;" line="369"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isMerelyPermutation" desc="()Z" line="375"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="explainTerms" desc="(Lorg/apache/calcite/rel/RelWriter;)Lorg/apache/calcite/rel/RelWriter;" line="380"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rewriteProjectsForArrayDataType" desc="()V" line="389"><counter type="INSTRUCTION" missed="132" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="28" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rewriteProjectForIntersect" desc="(Lorg/apache/calcite/rex/RexNode;Lorg/apache/calcite/sql/type/SqlTypeName;Lorg/apache/calcite/sql/type/BasicSqlType;Lorg/apache/calcite/sql/type/ArraySqlType;I)V" line="431"><counter type="INSTRUCTION" missed="78" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="1059" covered="0"/><counter type="BRANCH" missed="126" covered="0"/><counter type="LINE" missed="217" covered="0"/><counter type="COMPLEXITY" missed="81" covered="0"/><counter type="METHOD" missed="18" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/relnode/OLAPAuthentication" sourcefilename="OLAPAuthentication.java"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseUserInfo" desc="(Ljava/lang/String;)V" line="32"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUsername" desc="()Ljava/lang/String;" line="40"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRoles" desc="()Ljava/util/ArrayList;" line="44"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/relnode/OLAPRel" sourcefilename="OLAPRel.java"><method name="&lt;clinit&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/relnode/KylinEnumerableUnion" sourcefilename="KylinEnumerableUnion.java"><method name="&lt;init&gt;" desc="(Lorg/apache/calcite/plan/RelOptCluster;Lorg/apache/calcite/plan/RelTraitSet;Ljava/util/List;Z)V" line="52"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createUnionExpression" desc="(Lorg/apache/calcite/linq4j/tree/Expression;Lorg/apache/calcite/linq4j/tree/Expression;Z)Lorg/apache/calcite/linq4j/tree/Expression;" line="59"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="implement" desc="(Lorg/apache/calcite/adapter/enumerable/EnumerableRelImplementor;Lorg/apache/calcite/adapter/enumerable/EnumerableRel$Prefer;)Lorg/apache/calcite/adapter/enumerable/EnumerableRel$Result;" line="70"><counter type="INSTRUCTION" missed="80" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="155" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="27" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/relnode/OLAPRel$OLAPImplementor" sourcefilename="OLAPRel.java"><method name="&lt;init&gt;" desc="()V" line="75"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitChild" desc="(Lorg/apache/calcite/rel/RelNode;Lorg/apache/calcite/rel/RelNode;)V" line="83"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParentNode" desc="()Lorg/apache/calcite/rel/RelNode;" line="89"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParentNodeStack" desc="()Ljava/util/Stack;" line="93"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContext" desc="()Lorg/apache/kylin/query/relnode/OLAPContext;" line="97"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="freeContext" desc="()V" line="104"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="allocateContext" desc="()V" line="108"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setNewOLAPContextRequired" desc="(Z)V" line="120"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNewOLAPContextRequired" desc="()Z" line="124"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fixSharedOlapTableScan" desc="(Lorg/apache/calcite/rel/SingleRel;)V" line="128"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fixSharedOlapTableScanOnTheLeft" desc="(Lorg/apache/calcite/rel/BiRel;)V" line="134"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fixSharedOlapTableScanOnTheRight" desc="(Lorg/apache/calcite/rel/BiRel;)V" line="140"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fixSharedOlapTableScanAt" desc="(Lorg/apache/calcite/rel/RelNode;I)V" line="146"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copyTableScanIfNeeded" desc="(Lorg/apache/calcite/rel/RelNode;)Lorg/apache/kylin/query/relnode/OLAPTableScan;" line="152"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="171" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="49" covered="0"/><counter type="COMPLEXITY" missed="22" covered="0"/><counter type="METHOD" missed="14" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/relnode/OLAPLimitRel" sourcefilename="OLAPLimitRel.java"><method name="&lt;init&gt;" desc="(Lorg/apache/calcite/plan/RelOptCluster;Lorg/apache/calcite/plan/RelTraitSet;Lorg/apache/calcite/rel/RelNode;Lorg/apache/calcite/rex/RexNode;Lorg/apache/calcite/rex/RexNode;)V" line="50"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="(Lorg/apache/calcite/plan/RelTraitSet;Ljava/util/List;)Lorg/apache/kylin/query/relnode/OLAPLimitRel;" line="59"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeSelfCost" desc="(Lorg/apache/calcite/plan/RelOptPlanner;Lorg/apache/calcite/rel/metadata/RelMetadataQuery;)Lorg/apache/calcite/plan/RelOptCost;" line="64"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="explainTerms" desc="(Lorg/apache/calcite/rel/RelWriter;)Lorg/apache/calcite/rel/RelWriter;" line="69"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="implementOLAP" desc="(Lorg/apache/kylin/query/relnode/OLAPRel$OLAPImplementor;)V" line="76"><counter type="INSTRUCTION" missed="79" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="buildColumnRowType" desc="()Lorg/apache/kylin/query/relnode/ColumnRowType;" line="105"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="implementRewrite" desc="(Lorg/apache/kylin/query/relnode/OLAPRel$RewriteImplementor;)V" line="112"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="implementEnumerable" desc="(Ljava/util/List;)Lorg/apache/calcite/adapter/enumerable/EnumerableRel;" line="120"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContext" desc="()Lorg/apache/kylin/query/relnode/OLAPContext;" line="129"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getColumnRowType" desc="()Lorg/apache/kylin/query/relnode/ColumnRowType;" line="134"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasSubQuery" desc="()Z" line="139"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceTraitSet" desc="(Lorg/apache/calcite/plan/RelTrait;)Lorg/apache/calcite/plan/RelTraitSet;" line="145"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="241" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="46" covered="0"/><counter type="COMPLEXITY" missed="23" covered="0"/><counter type="METHOD" missed="12" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/relnode/OLAPTableScan" sourcefilename="OLAPTableScan.java"><method name="&lt;init&gt;" desc="(Lorg/apache/calcite/plan/RelOptCluster;Lorg/apache/calcite/plan/RelOptTable;Lorg/apache/kylin/query/schema/OLAPTable;[I)V" line="110"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOlapTable" desc="()Lorg/apache/kylin/query/schema/OLAPTable;" line="119"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTableName" desc="()Ljava/lang/String;" line="123"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFields" desc="()[I" line="127"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBackupAlias" desc="()Ljava/lang/String;" line="131"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContext" desc="()Lorg/apache/kylin/query/relnode/OLAPContext;" line="136"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="overrideContext" desc="(Lorg/apache/kylin/query/relnode/OLAPContext;)V" line="140"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="(Lorg/apache/calcite/plan/RelTraitSet;Ljava/util/List;)Lorg/apache/calcite/rel/RelNode;" line="145"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="register" desc="(Lorg/apache/calcite/plan/RelOptPlanner;)V" line="152"><counter type="INSTRUCTION" missed="177" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="44" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addRules" desc="(Lorg/apache/calcite/plan/RelOptPlanner;Ljava/util/List;)V" line="242"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeRules" desc="(Lorg/apache/calcite/plan/RelOptPlanner;Ljava/util/List;)V" line="253"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="modifyRules" desc="(Ljava/util/List;Lcom/google/common/base/Function;)V" line="264"><counter type="INSTRUCTION" missed="66" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="deriveRowType" desc="()Lorg/apache/calcite/rel/type/RelDataType;" line="288"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeSelfCost" desc="(Lorg/apache/calcite/plan/RelOptPlanner;Lorg/apache/calcite/rel/metadata/RelMetadataQuery;)Lorg/apache/calcite/plan/RelOptCost;" line="298"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="explainTerms" desc="(Lorg/apache/calcite/rel/RelWriter;)Lorg/apache/calcite/rel/RelWriter;" line="304"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="implementOLAP" desc="(Lorg/apache/kylin/query/relnode/OLAPRel$OLAPImplementor;)V" line="311"><counter type="INSTRUCTION" missed="89" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="needCollectionColumns" desc="(Lorg/apache/kylin/query/relnode/OLAPRel$OLAPImplementor;)Z" line="352"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAlias" desc="()Ljava/lang/String;" line="377"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="buildColumnRowType" desc="()Lorg/apache/kylin/query/relnode/ColumnRowType;" line="381"><counter type="INSTRUCTION" missed="79" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTableRef" desc="()Lorg/apache/kylin/metadata/model/TableRef;" line="397"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="makeRewriteColumn" desc="(Ljava/lang/String;)Lorg/apache/kylin/metadata/model/TblColRef;" line="402"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fixColumnRowTypeWithModel" desc="(Lorg/apache/kylin/metadata/model/DataModelDesc;Ljava/util/Map;)V" line="406"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unfixColumnRowTypeWithModel" desc="()V" line="416"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="implementEnumerable" desc="(Ljava/util/List;)Lorg/apache/calcite/adapter/enumerable/EnumerableRel;" line="427"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="implement" desc="(Lorg/apache/calcite/adapter/enumerable/EnumerableRelImplementor;Lorg/apache/calcite/adapter/enumerable/EnumerableRel$Prefer;)Lorg/apache/calcite/adapter/enumerable/EnumerableRel$Result;" line="433"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="genExecFunc" desc="()Ljava/lang/String;" line="444"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getColumnRowType" desc="()Lorg/apache/kylin/query/relnode/ColumnRowType;" line="457"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="implementRewrite" desc="(Lorg/apache/kylin/query/relnode/OLAPRel$RewriteImplementor;)V" line="462"><counter type="INSTRUCTION" missed="121" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasSubQuery" desc="()Z" line="496"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceTraitSet" desc="(Lorg/apache/calcite/plan/RelTrait;)Lorg/apache/calcite/plan/RelTraitSet;" line="501"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="889" covered="0"/><counter type="BRANCH" missed="68" covered="0"/><counter type="LINE" missed="192" covered="0"/><counter type="COMPLEXITY" missed="64" covered="0"/><counter type="METHOD" missed="30" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/relnode/OLAPRel$JavaImplementor" sourcefilename="OLAPRel.java"><method name="&lt;init&gt;" desc="(Lorg/apache/calcite/adapter/enumerable/EnumerableRelImplementor;)V" line="208"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createEnumerable" desc="(Lorg/apache/kylin/query/relnode/OLAPRel;)Lorg/apache/calcite/adapter/enumerable/EnumerableRel;" line="216"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitChild" desc="(Lorg/apache/calcite/adapter/enumerable/EnumerableRel;ILorg/apache/calcite/adapter/enumerable/EnumerableRel;Lorg/apache/calcite/adapter/enumerable/EnumerableRel$Prefer;)Lorg/apache/calcite/adapter/enumerable/EnumerableRel$Result;" line="234"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="97" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/relnode/OLAPAggregateRel" sourcefilename="OLAPAggregateRel.java"><method name="&lt;init&gt;" desc="(Lorg/apache/calcite/plan/RelOptCluster;Lorg/apache/calcite/plan/RelTraitSet;Lorg/apache/calcite/rel/RelNode;ZLorg/apache/calcite/util/ImmutableBitSet;Ljava/util/List;Ljava/util/List;)V" line="135"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSqlFuncName" desc="(Lorg/apache/calcite/rel/core/AggregateCall;)Ljava/lang/String;" line="143"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAggrFuncName" desc="(Lorg/apache/calcite/rel/core/AggregateCall;)Ljava/lang/String;" line="151"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="(Lorg/apache/calcite/plan/RelTraitSet;Lorg/apache/calcite/rel/RelNode;ZLorg/apache/calcite/util/ImmutableBitSet;Ljava/util/List;Ljava/util/List;)Lorg/apache/calcite/rel/core/Aggregate;" line="163"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeSelfCost" desc="(Lorg/apache/calcite/plan/RelOptPlanner;Lorg/apache/calcite/rel/metadata/RelMetadataQuery;)Lorg/apache/calcite/plan/RelOptCost;" line="176"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="implementOLAP" desc="(Lorg/apache/kylin/query/relnode/OLAPRel$OLAPImplementor;)V" line="187"><counter type="INSTRUCTION" missed="89" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="buildColumnRowType" desc="()Lorg/apache/kylin/query/relnode/ColumnRowType;" line="217"><counter type="INSTRUCTION" missed="161" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="29" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="buildRewriteColumn" desc="(Lorg/apache/kylin/metadata/model/FunctionDesc;)Lorg/apache/kylin/metadata/model/TblColRef;" line="260"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="buildGroups" desc="()V" line="270"><counter type="INSTRUCTION" missed="160" covered="0"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="33" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="buildAggregations" desc="()V" line="325"><counter type="INSTRUCTION" missed="252" covered="0"/><counter type="BRANCH" missed="36" covered="0"/><counter type="LINE" missed="53" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="needRewrite" desc="()Z" line="402"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="implementRewrite" desc="(Lorg/apache/kylin/query/relnode/OLAPRel$RewriteImplementor;)V" line="409"><counter type="INSTRUCTION" missed="132" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="27" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toSqlCall" desc="(Lorg/apache/calcite/rel/core/AggregateCall;)Lorg/apache/kylin/metadata/realization/SQLDigest$SQLCall;" line="462"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="translateAggregation" desc="()V" line="474"><counter type="INSTRUCTION" missed="92" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findInMeasures" desc="(Lorg/apache/kylin/metadata/model/FunctionDesc;Ljava/util/List;)Lorg/apache/kylin/metadata/model/FunctionDesc;" line="502"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findCountConstantFunc" desc="(Ljava/util/List;)Lorg/apache/kylin/metadata/model/FunctionDesc;" line="519"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="buildRewriteFieldsAndMetricsColumns" desc="()V" line="528"><counter type="INSTRUCTION" missed="104" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addToContextGroupBy" desc="(Ljava/util/List;)V" line="561"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="noPrecaculatedFieldsAvailable" desc="()Z" line="568"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rewriteAggregateCall" desc="(Lorg/apache/calcite/rel/core/AggregateCall;Lorg/apache/kylin/metadata/model/FunctionDesc;)Lorg/apache/calcite/rel/core/AggregateCall;" line="574"><counter type="INSTRUCTION" missed="92" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="truncArgList" desc="(Ljava/util/List;Ljava/lang/Class;)Ljava/util/List;" line="610"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createCustomAggFunction" desc="(Ljava/lang/String;Lorg/apache/calcite/rel/type/RelDataType;Ljava/lang/Class;)Lorg/apache/calcite/sql/SqlAggFunction;" line="620"><counter type="INSTRUCTION" missed="68" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="implementEnumerable" desc="(Ljava/util/List;)Lorg/apache/calcite/adapter/enumerable/EnumerableRel;" line="638"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContext" desc="()Lorg/apache/kylin/query/relnode/OLAPContext;" line="647"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getColumnRowType" desc="()Lorg/apache/kylin/query/relnode/ColumnRowType;" line="652"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasSubQuery" desc="()Z" line="658"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceTraitSet" desc="(Lorg/apache/calcite/plan/RelTrait;)Lorg/apache/calcite/plan/RelTraitSet;" line="664"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRewriteAggCalls" desc="()Ljava/util/List;" line="670"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="explainTerms" desc="(Lorg/apache/calcite/rel/RelWriter;)Lorg/apache/calcite/rel/RelWriter;" line="675"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCountColumnExpression" desc="(Lorg/apache/kylin/metadata/model/TblColRef;)Lorg/apache/kylin/metadata/expression/TupleExpression;" line="680"><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGroups" desc="()Ljava/util/List;" line="692"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setGroups" desc="(Ljava/util/List;)V" line="696"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="94"><counter type="INSTRUCTION" missed="106" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="1729" covered="0"/><counter type="BRANCH" missed="192" covered="0"/><counter type="LINE" missed="345" covered="0"/><counter type="COMPLEXITY" missed="129" covered="0"/><counter type="METHOD" missed="33" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/relnode/OLAPTableScan$2" sourcefilename="OLAPTableScan.java"><method name="&lt;init&gt;" desc="(Lorg/apache/kylin/query/relnode/OLAPTableScan;Lorg/apache/calcite/plan/RelOptPlanner;)V" line="253"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Lorg/apache/calcite/plan/RelOptRule;)Ljava/lang/Void;" line="257"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/relnode/OLAPContext" sourcefilename="OLAPContext.java"><method name="setParameters" desc="(Ljava/util/Map;)V" line="75"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clearParameter" desc="()V" line="79"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="registerContext" desc="(Lorg/apache/kylin/query/relnode/OLAPContext;)V" line="83"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getThreadLocalContexts" desc="()Ljava/util/Collection;" line="91"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getThreadLocalContextById" desc="(I)Lorg/apache/kylin/query/relnode/OLAPContext;" line="96"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clearThreadLocalContexts" desc="()V" line="101"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(I)V" line="104"><counter type="INSTRUCTION" missed="184" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="47" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSimpleQuery" desc="()Z" line="179"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSQLDigest" desc="()Lorg/apache/kylin/metadata/realization/SQLDigest;" line="185"><counter type="INSTRUCTION" missed="113" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDynamicColumnEnabled" desc="()Z" line="212"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasPrecalculatedFields" desc="()Z" line="216"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resetSQLDigest" desc="()V" line="220"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="belongToContextTables" desc="(Lorg/apache/kylin/metadata/model/TblColRef;)Z" line="224"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="belongToFactTableDims" desc="(Lorg/apache/kylin/metadata/model/TblColRef;)Z" line="234"><counter type="INSTRUCTION" missed="83" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setReturnTupleInfo" desc="(Lorg/apache/calcite/rel/type/RelDataType;Lorg/apache/kylin/query/relnode/ColumnRowType;)V" line="266"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addSort" desc="(Lorg/apache/kylin/metadata/model/TblColRef;Lorg/apache/kylin/metadata/realization/SQLDigest$OrderEnum;)V" line="277"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fixModel" desc="(Lorg/apache/kylin/metadata/model/DataModelDesc;Ljava/util/Map;)V" line="284"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unfixModel" desc="()V" line="294"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="bindVariable" desc="(Lorg/apache/calcite/DataContext;)V" line="304"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="bindVariable" desc="(Lorg/apache/kylin/metadata/filter/TupleFilter;Lorg/apache/calcite/DataContext;)V" line="308"><counter type="INSTRUCTION" missed="66" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="transferDateTimeColumnToMillis" desc="(Lorg/apache/kylin/metadata/filter/CompareTupleFilter;Ljava/lang/String;)Ljava/lang/String;" line="333"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="70"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="694" covered="0"/><counter type="BRANCH" missed="78" covered="0"/><counter type="LINE" missed="162" covered="0"/><counter type="COMPLEXITY" missed="61" covered="0"/><counter type="METHOD" missed="22" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/relnode/OLAPValuesRel$1" sourcefilename="OLAPValuesRel.java"><method name="&lt;init&gt;" desc="(Lorg/apache/calcite/rel/type/RelDataType;Lcom/google/common/collect/ImmutableList;)V" line="65"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Lorg/apache/calcite/rel/RelDistribution;" line="67"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/relnode/OLAPTableScan$1" sourcefilename="OLAPTableScan.java"><method name="&lt;init&gt;" desc="(Lorg/apache/kylin/query/relnode/OLAPTableScan;Lorg/apache/calcite/plan/RelOptPlanner;)V" line="242"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Lorg/apache/calcite/plan/RelOptRule;)Ljava/lang/Void;" line="246"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/relnode/OLAPValuesRel$2" sourcefilename="OLAPValuesRel.java"><method name="&lt;init&gt;" desc="(Lorg/apache/calcite/rel/metadata/RelMetadataQuery;Lorg/apache/calcite/rel/type/RelDataType;Lcom/google/common/collect/ImmutableList;)V" line="61"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/util/List;" line="63"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/relnode/ColumnRowType" sourcefilename="ColumnRowType.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="43"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;Ljava/util/List;)V" line="46"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getColumnByIndex" desc="(I)Lorg/apache/kylin/metadata/model/TblColRef;" line="52"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getColumnByIndexNullable" desc="(I)Lorg/apache/kylin/metadata/model/TblColRef;" line="56"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getColumnByName" desc="(Ljava/lang/String;)Lorg/apache/kylin/metadata/model/TblColRef;" line="63"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIndexByName" desc="(Ljava/lang/String;)I" line="67"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceColumnByIndex" desc="(ILorg/apache/kylin/metadata/model/TblColRef;Lorg/apache/kylin/metadata/expression/TupleExpression;)Lorg/apache/kylin/common/util/Pair;" line="77"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTupleExpressionByIndex" desc="(I)Lorg/apache/kylin/metadata/expression/TupleExpression;" line="86"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSourceColumns" desc="()Ljava/util/List;" line="97"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllColumns" desc="()Ljava/util/List;" line="108"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()I" line="112"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="117"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="164" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="35" covered="0"/><counter type="COMPLEXITY" missed="23" covered="0"/><counter type="METHOD" missed="12" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/relnode/OLAPSortRel" sourcefilename="OLAPSortRel.java"><method name="&lt;init&gt;" desc="(Lorg/apache/calcite/plan/RelOptCluster;Lorg/apache/calcite/plan/RelTraitSet;Lorg/apache/calcite/rel/RelNode;Lorg/apache/calcite/rel/RelCollation;Lorg/apache/calcite/rex/RexNode;Lorg/apache/calcite/rex/RexNode;)V" line="53"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="(Lorg/apache/calcite/plan/RelTraitSet;Lorg/apache/calcite/rel/RelNode;Lorg/apache/calcite/rel/RelCollation;Lorg/apache/calcite/rex/RexNode;Lorg/apache/calcite/rex/RexNode;)Lorg/apache/kylin/query/relnode/OLAPSortRel;" line="61"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeSelfCost" desc="(Lorg/apache/calcite/plan/RelOptPlanner;Lorg/apache/calcite/rel/metadata/RelMetadataQuery;)Lorg/apache/calcite/plan/RelOptCost;" line="66"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="implementOLAP" desc="(Lorg/apache/kylin/query/relnode/OLAPRel$OLAPImplementor;)V" line="71"><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="buildColumnRowType" desc="()Lorg/apache/kylin/query/relnode/ColumnRowType;" line="89"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="implementRewrite" desc="(Lorg/apache/kylin/query/relnode/OLAPRel$RewriteImplementor;)V" line="96"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOrderEnum" desc="(Lorg/apache/calcite/rel/RelFieldCollation$Direction;)Lorg/apache/kylin/metadata/realization/SQLDigest$OrderEnum;" line="108"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findMeasure" desc="(Lorg/apache/kylin/metadata/model/TblColRef;)Lorg/apache/kylin/metadata/model/MeasureDesc;" line="117"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="implementEnumerable" desc="(Ljava/util/List;)Lorg/apache/calcite/adapter/enumerable/EnumerableRel;" line="127"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContext" desc="()Lorg/apache/kylin/query/relnode/OLAPContext;" line="134"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getColumnRowType" desc="()Lorg/apache/kylin/query/relnode/ColumnRowType;" line="139"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasSubQuery" desc="()Z" line="144"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceTraitSet" desc="(Lorg/apache/calcite/plan/RelTrait;)Lorg/apache/calcite/plan/RelTraitSet;" line="150"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="explainTerms" desc="(Lorg/apache/calcite/rel/RelWriter;)Lorg/apache/calcite/rel/RelWriter;" line="157"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="234" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="48" covered="0"/><counter type="COMPLEXITY" missed="22" covered="0"/><counter type="METHOD" missed="14" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/relnode/OLAPValuesRel" sourcefilename="OLAPValuesRel.java"><method name="&lt;init&gt;" desc="(Lorg/apache/calcite/plan/RelOptCluster;Lorg/apache/calcite/rel/type/RelDataType;Lcom/google/common/collect/ImmutableList;Lorg/apache/calcite/plan/RelTraitSet;)V" line="53"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="create" desc="(Lorg/apache/calcite/plan/RelOptCluster;Lorg/apache/calcite/rel/type/RelDataType;Lcom/google/common/collect/ImmutableList;)Lorg/apache/kylin/query/relnode/OLAPValuesRel;" line="59"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeSelfCost" desc="(Lorg/apache/calcite/plan/RelOptPlanner;Lorg/apache/calcite/rel/metadata/RelMetadataQuery;)Lorg/apache/calcite/plan/RelOptCost;" line="75"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="(Lorg/apache/calcite/plan/RelTraitSet;Ljava/util/List;)Lorg/apache/calcite/rel/RelNode;" line="81"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContext" desc="()Lorg/apache/kylin/query/relnode/OLAPContext;" line="87"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getColumnRowType" desc="()Lorg/apache/kylin/query/relnode/ColumnRowType;" line="92"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="buildColumnRowType" desc="()Lorg/apache/kylin/query/relnode/ColumnRowType;" line="96"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasSubQuery" desc="()Z" line="105"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceTraitSet" desc="(Lorg/apache/calcite/plan/RelTrait;)Lorg/apache/calcite/plan/RelTraitSet;" line="110"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="implementOLAP" desc="(Lorg/apache/kylin/query/relnode/OLAPRel$OLAPImplementor;)V" line="117"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="implementRewrite" desc="(Lorg/apache/kylin/query/relnode/OLAPRel$RewriteImplementor;)V" line="125"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="implementEnumerable" desc="(Ljava/util/List;)Lorg/apache/calcite/adapter/enumerable/EnumerableRel;" line="129"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="142" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="28" covered="0"/><counter type="COMPLEXITY" missed="17" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/relnode/OLAPWindowRel" sourcefilename="OLAPWindowRel.java"><method name="&lt;init&gt;" desc="(Lorg/apache/calcite/plan/RelOptCluster;Lorg/apache/calcite/plan/RelTraitSet;Lorg/apache/calcite/rel/RelNode;Ljava/util/List;Lorg/apache/calcite/rel/type/RelDataType;Ljava/util/List;)V" line="54"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="(Lorg/apache/calcite/plan/RelTraitSet;Ljava/util/List;)Lorg/apache/calcite/rel/core/Window;" line="61"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeSelfCost" desc="(Lorg/apache/calcite/plan/RelOptPlanner;Lorg/apache/calcite/rel/metadata/RelMetadataQuery;)Lorg/apache/calcite/plan/RelOptCost;" line="67"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="explainTerms" desc="(Lorg/apache/calcite/rel/RelWriter;)Lorg/apache/calcite/rel/RelWriter;" line="73"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="implementOLAP" desc="(Lorg/apache/kylin/query/relnode/OLAPRel$OLAPImplementor;)V" line="81"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="buildColumnRowType" desc="()Lorg/apache/kylin/query/relnode/ColumnRowType;" line="90"><counter type="INSTRUCTION" missed="117" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="implementRewrite" desc="(Lorg/apache/kylin/query/relnode/OLAPRel$RewriteImplementor;)V" line="118"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="implementEnumerable" desc="(Ljava/util/List;)Lorg/apache/calcite/adapter/enumerable/EnumerableRel;" line="125"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContext" desc="()Lorg/apache/kylin/query/relnode/OLAPContext;" line="136"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getColumnRowType" desc="()Lorg/apache/kylin/query/relnode/ColumnRowType;" line="141"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasSubQuery" desc="()Z" line="146"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceTraitSet" desc="(Lorg/apache/calcite/plan/RelTrait;)Lorg/apache/calcite/plan/RelTraitSet;" line="156"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$buildColumnRowType$0" desc="(Lorg/apache/kylin/query/relnode/ColumnRowType;Ljava/lang/Integer;)Z" line="107"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="352" covered="0"/><counter type="BRANCH" missed="32" covered="0"/><counter type="LINE" missed="56" covered="0"/><counter type="COMPLEXITY" missed="30" covered="0"/><counter type="METHOD" missed="14" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/relnode/OLAPToEnumerableConverter" sourcefilename="OLAPToEnumerableConverter.java"><method name="&lt;init&gt;" desc="(Lorg/apache/calcite/plan/RelOptCluster;Lorg/apache/calcite/plan/RelTraitSet;Lorg/apache/calcite/rel/RelNode;)V" line="66"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="(Lorg/apache/calcite/plan/RelTraitSet;Ljava/util/List;)Lorg/apache/calcite/rel/RelNode;" line="71"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeSelfCost" desc="(Lorg/apache/calcite/plan/RelOptPlanner;Lorg/apache/calcite/rel/metadata/RelMetadataQuery;)Lorg/apache/calcite/plan/RelOptCost;" line="77"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="implement" desc="(Lorg/apache/calcite/adapter/enumerable/EnumerableRelImplementor;Lorg/apache/calcite/adapter/enumerable/EnumerableRel$Prefer;)Lorg/apache/calcite/adapter/enumerable/EnumerableRel$Result;" line="82"><counter type="INSTRUCTION" missed="206" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="49" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="listContextsHavingScan" desc="()Ljava/util/List;" line="160"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doAccessControl" desc="(Ljava/util/List;)V" line="171"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$implement$1" desc="(Lorg/apache/kylin/query/relnode/OLAPContext;)Ljava/lang/String;" line="114"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$implement$0" desc="(Lorg/apache/kylin/query/relnode/OLAPContext;)Z" line="113"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="61"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="290" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="67" covered="0"/><counter type="COMPLEXITY" missed="21" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/relnode/OLAPRel$RewriteImplementor" sourcefilename="OLAPRel.java"><method name="&lt;init&gt;" desc="()V" line="169"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitChild" desc="(Lorg/apache/calcite/rel/RelNode;Lorg/apache/calcite/rel/RelNode;)V" line="173"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParentContext" desc="()Lorg/apache/kylin/query/relnode/OLAPContext;" line="182"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="needRewrite" desc="(Lorg/apache/kylin/query/relnode/OLAPContext;)Z" line="186"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/relnode/OLAPUnionRel" sourcefilename="OLAPUnionRel.java"><method name="&lt;init&gt;" desc="(Lorg/apache/calcite/plan/RelOptCluster;Lorg/apache/calcite/plan/RelTraitSet;Ljava/util/List;Z)V" line="52"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="(Lorg/apache/calcite/plan/RelTraitSet;Ljava/util/List;Z)Lorg/apache/calcite/rel/core/SetOp;" line="61"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeSelfCost" desc="(Lorg/apache/calcite/plan/RelOptPlanner;Lorg/apache/calcite/rel/metadata/RelMetadataQuery;)Lorg/apache/calcite/plan/RelOptCost;" line="66"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="explainTerms" desc="(Lorg/apache/calcite/rel/RelWriter;)Lorg/apache/calcite/rel/RelWriter;" line="71"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="implementOLAP" desc="(Lorg/apache/kylin/query/relnode/OLAPRel$OLAPImplementor;)V" line="80"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="buildColumnRowType" desc="()Lorg/apache/kylin/query/relnode/ColumnRowType;" line="97"><counter type="INSTRUCTION" missed="85" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="implementRewrite" desc="(Lorg/apache/kylin/query/relnode/OLAPRel$RewriteImplementor;)V" line="121"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="implementEnumerable" desc="(Ljava/util/List;)Lorg/apache/calcite/adapter/enumerable/EnumerableRel;" line="131"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContext" desc="()Lorg/apache/kylin/query/relnode/OLAPContext;" line="143"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getColumnRowType" desc="()Lorg/apache/kylin/query/relnode/ColumnRowType;" line="148"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasSubQuery" desc="()Z" line="153"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceTraitSet" desc="(Lorg/apache/calcite/plan/RelTrait;)Lorg/apache/calcite/plan/RelTraitSet;" line="163"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="320" covered="0"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="61" covered="0"/><counter type="COMPLEXITY" missed="27" covered="0"/><counter type="METHOD" missed="12" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/relnode/OLAPFilterRel" sourcefilename="OLAPFilterRel.java"><method name="&lt;init&gt;" desc="(Lorg/apache/calcite/plan/RelOptCluster;Lorg/apache/calcite/plan/RelTraitSet;Lorg/apache/calcite/rel/RelNode;Lorg/apache/calcite/rex/RexNode;)V" line="58"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeSelfCost" desc="(Lorg/apache/calcite/plan/RelOptPlanner;Lorg/apache/calcite/rel/metadata/RelMetadataQuery;)Lorg/apache/calcite/plan/RelOptCost;" line="69"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="(Lorg/apache/calcite/plan/RelTraitSet;Lorg/apache/calcite/rel/RelNode;Lorg/apache/calcite/rex/RexNode;)Lorg/apache/calcite/rel/core/Filter;" line="74"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="implementOLAP" desc="(Lorg/apache/kylin/query/relnode/OLAPRel$OLAPImplementor;)V" line="79"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="buildColumnRowType" desc="()Lorg/apache/kylin/query/relnode/ColumnRowType;" line="99"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="translateFilter" desc="(Lorg/apache/kylin/query/relnode/OLAPContext;)V" line="105"><counter type="INSTRUCTION" missed="85" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="and" desc="(Lorg/apache/kylin/metadata/filter/TupleFilter;Lorg/apache/kylin/metadata/filter/TupleFilter;)Lorg/apache/kylin/metadata/filter/TupleFilter;" line="131"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="implementEnumerable" desc="(Ljava/util/List;)Lorg/apache/calcite/adapter/enumerable/EnumerableRel;" line="155"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="implementRewrite" desc="(Lorg/apache/kylin/query/relnode/OLAPRel$RewriteImplementor;)V" line="168"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContext" desc="()Lorg/apache/kylin/query/relnode/OLAPContext;" line="176"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getColumnRowType" desc="()Lorg/apache/kylin/query/relnode/ColumnRowType;" line="181"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasSubQuery" desc="()Z" line="186"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceTraitSet" desc="(Lorg/apache/calcite/plan/RelTrait;)Lorg/apache/calcite/plan/RelTraitSet;" line="192"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="explainTerms" desc="(Lorg/apache/calcite/rel/RelWriter;)Lorg/apache/calcite/rel/RelWriter;" line="199"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="337" covered="0"/><counter type="BRANCH" missed="32" covered="0"/><counter type="LINE" missed="75" covered="0"/><counter type="COMPLEXITY" missed="30" covered="0"/><counter type="METHOD" missed="14" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/relnode/OLAPNonEquiJoinRel" sourcefilename="OLAPNonEquiJoinRel.java"><method name="&lt;init&gt;" desc="(Lorg/apache/calcite/plan/RelOptCluster;Lorg/apache/calcite/plan/RelTraitSet;Lorg/apache/calcite/rel/RelNode;Lorg/apache/calcite/rel/RelNode;Lorg/apache/calcite/rex/RexNode;Ljava/util/Set;Lorg/apache/calcite/rel/core/JoinRelType;)V" line="61"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContext" desc="()Lorg/apache/kylin/query/relnode/OLAPContext;" line="67"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getColumnRowType" desc="()Lorg/apache/kylin/query/relnode/ColumnRowType;" line="72"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasSubQuery" desc="()Z" line="77"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceTraitSet" desc="(Lorg/apache/calcite/plan/RelTrait;)Lorg/apache/calcite/plan/RelTraitSet;" line="82"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isParentMerelyPermutation" desc="(Lorg/apache/kylin/query/relnode/OLAPRel$OLAPImplementor;)Z" line="88"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="implementOLAP" desc="(Lorg/apache/kylin/query/relnode/OLAPRel$OLAPImplementor;)V" line="97"><counter type="INSTRUCTION" missed="91" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="implementRewrite" desc="(Lorg/apache/kylin/query/relnode/OLAPRel$RewriteImplementor;)V" line="136"><counter type="INSTRUCTION" missed="99" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="implementEnumerable" desc="(Ljava/util/List;)Lorg/apache/calcite/adapter/enumerable/EnumerableRel;" line="170"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="buildColumnRowType" desc="()Lorg/apache/kylin/query/relnode/ColumnRowType;" line="174"><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeSelfCost" desc="(Lorg/apache/calcite/plan/RelOptPlanner;Lorg/apache/calcite/rel/metadata/RelMetadataQuery;)Lorg/apache/calcite/plan/RelOptCost;" line="193"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="estimateRowCount" desc="(Lorg/apache/calcite/rel/metadata/RelMetadataQuery;)D" line="198"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="(Lorg/apache/calcite/plan/RelTraitSet;Lorg/apache/calcite/rex/RexNode;Lorg/apache/calcite/rel/RelNode;Lorg/apache/calcite/rel/RelNode;Lorg/apache/calcite/rel/core/JoinRelType;Z)Lorg/apache/calcite/adapter/enumerable/EnumerableThetaJoin;" line="204"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="collectJoinColumns" desc="(Lorg/apache/calcite/rex/RexNode;)Ljava/util/Collection;" line="211"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCollectJoinColumns" desc="(Lorg/apache/calcite/rex/RexNode;Ljava/util/Set;)V" line="217"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$doCollectJoinColumns$0" desc="(Ljava/util/Set;Lorg/apache/calcite/rex/RexNode;)V" line="218"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="381" covered="0"/><counter type="BRANCH" missed="28" covered="0"/><counter type="LINE" missed="81" covered="0"/><counter type="COMPLEXITY" missed="30" covered="0"/><counter type="METHOD" missed="16" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/relnode/KylinAggregateCall" sourcefilename="KylinAggregateCall.java"><method name="&lt;init&gt;" desc="(Lorg/apache/calcite/rel/core/AggregateCall;Lorg/apache/kylin/metadata/model/FunctionDesc;)V" line="31"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSum0" desc="()Z" line="36"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFunc" desc="()Lorg/apache/kylin/metadata/model/FunctionDesc;" line="40"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isHllCountDistinctFunc" desc="()Z" line="44"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isBitmapCountDistinctFunc" desc="()Z" line="51"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isIntersectCountFunc" desc="()Z" line="60"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isIntersectValueFunc" desc="()Z" line="69"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="111" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="27" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/relnode/OLAPJoinRel" sourcefilename="OLAPJoinRel.java"><method name="&lt;init&gt;" desc="(Lorg/apache/calcite/plan/RelOptCluster;Lorg/apache/calcite/plan/RelTraitSet;Lorg/apache/calcite/rel/RelNode;Lorg/apache/calcite/rel/RelNode;Lorg/apache/calcite/rex/RexNode;Lorg/apache/calcite/util/ImmutableIntList;Lorg/apache/calcite/util/ImmutableIntList;Ljava/util/Set;Lorg/apache/calcite/rel/core/JoinRelType;)V" line="84"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="(Lorg/apache/calcite/plan/RelTraitSet;Lorg/apache/calcite/rex/RexNode;Lorg/apache/calcite/rel/RelNode;Lorg/apache/calcite/rel/RelNode;Lorg/apache/calcite/rel/core/JoinRelType;Z)Lorg/apache/calcite/adapter/enumerable/EnumerableJoin;" line="94"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeSelfCost" desc="(Lorg/apache/calcite/plan/RelOptPlanner;Lorg/apache/calcite/rel/metadata/RelMetadataQuery;)Lorg/apache/calcite/plan/RelOptCost;" line="107"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="estimateRowCount" desc="(Lorg/apache/calcite/rel/metadata/RelMetadataQuery;)D" line="112"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isParentMerelyPermutation" desc="(Lorg/apache/kylin/query/relnode/OLAPRel$OLAPImplementor;)Z" line="117"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="implementOLAP" desc="(Lorg/apache/kylin/query/relnode/OLAPRel$OLAPImplementor;)V" line="127"><counter type="INSTRUCTION" missed="216" covered="0"/><counter type="BRANCH" missed="40" covered="0"/><counter type="LINE" missed="47" covered="0"/><counter type="COMPLEXITY" missed="21" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="buildColumnRowType" desc="()Lorg/apache/kylin/query/relnode/ColumnRowType;" line="210"><counter type="INSTRUCTION" missed="62" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="buildJoin" desc="(Lorg/apache/calcite/rex/RexCall;)Lorg/apache/kylin/metadata/model/JoinDesc;" line="230"><counter type="INSTRUCTION" missed="96" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="translateJoinColumn" desc="(Lorg/apache/calcite/rex/RexNode;Lcom/google/common/collect/Multimap;)V" line="256"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="translateJoinColumn" desc="(Lorg/apache/calcite/rex/RexCall;Lcom/google/common/collect/Multimap;)V" line="262"><counter type="INSTRUCTION" missed="72" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="implementEnumerable" desc="(Ljava/util/List;)Lorg/apache/calcite/adapter/enumerable/EnumerableRel;" line="303"><counter type="INSTRUCTION" missed="67" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="implement" desc="(Lorg/apache/calcite/adapter/enumerable/EnumerableRelImplementor;Lorg/apache/calcite/adapter/enumerable/EnumerableRel$Prefer;)Lorg/apache/calcite/adapter/enumerable/EnumerableRel$Result;" line="318"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getColumnRowType" desc="()Lorg/apache/kylin/query/relnode/ColumnRowType;" line="329"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="implementRewrite" desc="(Lorg/apache/kylin/query/relnode/OLAPRel$RewriteImplementor;)V" line="334"><counter type="INSTRUCTION" missed="183" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="36" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isRuntimeJoin" desc="()Z" line="390"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContext" desc="()Lorg/apache/kylin/query/relnode/OLAPContext;" line="398"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasSubQuery" desc="()Z" line="403"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceTraitSet" desc="(Lorg/apache/calcite/plan/RelTrait;)Lorg/apache/calcite/plan/RelTraitSet;" line="408"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="explainTerms" desc="(Lorg/apache/calcite/rel/RelWriter;)Lorg/apache/calcite/rel/RelWriter;" line="415"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="71"><counter type="INSTRUCTION" missed="62" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="976" covered="0"/><counter type="BRANCH" missed="88" covered="0"/><counter type="LINE" missed="181" covered="0"/><counter type="COMPLEXITY" missed="64" covered="0"/><counter type="METHOD" missed="20" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="OLAPProjectRel.java"><line nr="84" mi="10" ci="0" mb="0" cb="0"/><line nr="86" mi="10" ci="0" mb="0" cb="0"/><line nr="88" mi="8" ci="0" mb="0" cb="0"/><line nr="89" mi="8" ci="0" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="0" cb="0"/><line nr="106" mi="7" ci="0" mb="0" cb="0"/><line nr="107" mi="8" ci="0" mb="2" cb="0"/><line nr="108" mi="8" ci="0" mb="2" cb="0"/><line nr="109" mi="6" ci="0" mb="0" cb="0"/><line nr="110" mi="3" ci="0" mb="0" cb="0"/><line nr="111" mi="3" ci="0" mb="0" cb="0"/><line nr="112" mi="4" ci="0" mb="0" cb="0"/><line nr="113" mi="10" ci="0" mb="2" cb="0"/><line nr="114" mi="8" ci="0" mb="0" cb="0"/><line nr="115" mi="1" ci="0" mb="0" cb="0"/><line nr="116" mi="1" ci="0" mb="0" cb="0"/><line nr="120" mi="3" ci="0" mb="0" cb="0"/><line nr="125" mi="3" ci="0" mb="0" cb="0"/><line nr="137" mi="5" ci="0" mb="0" cb="0"/><line nr="138" mi="7" ci="0" mb="0" cb="0"/><line nr="139" mi="12" ci="0" mb="2" cb="0"/><line nr="140" mi="11" ci="0" mb="0" cb="0"/><line nr="141" mi="8" ci="0" mb="0" cb="0"/><line nr="146" mi="10" ci="0" mb="0" cb="0"/><line nr="151" mi="7" ci="0" mb="4" cb="0"/><line nr="152" mi="3" ci="0" mb="0" cb="0"/><line nr="155" mi="3" ci="0" mb="0" cb="0"/><line nr="156" mi="5" ci="0" mb="0" cb="0"/><line nr="158" mi="4" ci="0" mb="0" cb="0"/><line nr="159" mi="5" ci="0" mb="0" cb="0"/><line nr="160" mi="5" ci="0" mb="0" cb="0"/><line nr="161" mi="5" ci="0" mb="0" cb="0"/><line nr="163" mi="4" ci="0" mb="0" cb="0"/><line nr="164" mi="3" ci="0" mb="0" cb="0"/><line nr="165" mi="3" ci="0" mb="2" cb="0"/><line nr="166" mi="3" ci="0" mb="0" cb="0"/><line nr="167" mi="11" ci="0" mb="2" cb="0"/><line nr="168" mi="6" ci="0" mb="2" cb="0"/><line nr="169" mi="3" ci="0" mb="0" cb="0"/><line nr="170" mi="3" ci="0" mb="0" cb="0"/><line nr="171" mi="1" ci="0" mb="0" cb="0"/><line nr="173" mi="1" ci="0" mb="0" cb="0"/><line nr="175" mi="1" ci="0" mb="0" cb="0"/><line nr="178" mi="2" ci="0" mb="0" cb="0"/><line nr="179" mi="2" ci="0" mb="0" cb="0"/><line nr="181" mi="4" ci="0" mb="0" cb="0"/><line nr="182" mi="3" ci="0" mb="0" cb="0"/><line nr="183" mi="10" ci="0" mb="4" cb="0"/><line nr="184" mi="6" ci="0" mb="0" cb="0"/><line nr="185" mi="9" ci="0" mb="2" cb="0"/><line nr="186" mi="6" ci="0" mb="0" cb="0"/><line nr="187" mi="7" ci="0" mb="0" cb="0"/><line nr="188" mi="3" ci="0" mb="0" cb="0"/><line nr="190" mi="5" ci="0" mb="0" cb="0"/><line nr="191" mi="7" ci="0" mb="0" cb="0"/><line nr="192" mi="9" ci="0" mb="6" cb="0"/><line nr="193" mi="3" ci="0" mb="0" cb="0"/><line nr="195" mi="3" ci="0" mb="0" cb="0"/><line nr="196" mi="3" ci="0" mb="2" cb="0"/><line nr="197" mi="7" ci="0" mb="2" cb="0"/><line nr="198" mi="3" ci="0" mb="0" cb="0"/><line nr="201" mi="6" ci="0" mb="0" cb="0"/><line nr="203" mi="7" ci="0" mb="4" cb="0"/><line nr="204" mi="4" ci="0" mb="0" cb="0"/><line nr="205" mi="5" ci="0" mb="0" cb="0"/><line nr="207" mi="3" ci="0" mb="2" cb="0"/><line nr="208" mi="2" ci="0" mb="0" cb="0"/><line nr="210" mi="4" ci="0" mb="0" cb="0"/><line nr="211" mi="8" ci="0" mb="0" cb="0"/><line nr="213" mi="1" ci="0" mb="0" cb="0"/><line nr="214" mi="4" ci="0" mb="0" cb="0"/><line nr="217" mi="4" ci="0" mb="0" cb="0"/><line nr="218" mi="4" ci="0" mb="0" cb="0"/><line nr="220" mi="6" ci="0" mb="0" cb="0"/><line nr="225" mi="3" ci="0" mb="2" cb="0"/><line nr="226" mi="4" ci="0" mb="0" cb="0"/><line nr="227" mi="3" ci="0" mb="2" cb="0"/><line nr="228" mi="4" ci="0" mb="0" cb="0"/><line nr="229" mi="9" ci="0" mb="2" cb="0"/><line nr="230" mi="3" ci="0" mb="2" cb="0"/><line nr="231" mi="4" ci="0" mb="0" cb="0"/><line nr="232" mi="9" ci="0" mb="2" cb="0"/><line nr="233" mi="6" ci="0" mb="4" cb="0"/><line nr="234" mi="3" ci="0" mb="0" cb="0"/><line nr="235" mi="3" ci="0" mb="0" cb="0"/><line nr="236" mi="4" ci="0" mb="2" cb="0"/><line nr="237" mi="4" ci="0" mb="0" cb="0"/><line nr="240" mi="6" ci="0" mb="0" cb="0"/><line nr="245" mi="4" ci="0" mb="2" cb="0"/><line nr="247" mi="4" ci="0" mb="0" cb="0"/><line nr="248" mi="7" ci="0" mb="0" cb="0"/><line nr="249" mi="7" ci="0" mb="0" cb="0"/><line nr="250" mi="6" ci="0" mb="0" cb="0"/><line nr="251" mi="12" ci="0" mb="0" cb="0"/><line nr="255" mi="4" ci="0" mb="0" cb="0"/><line nr="256" mi="10" ci="0" mb="0" cb="0"/><line nr="257" mi="2" ci="0" mb="0" cb="0"/><line nr="258" mi="12" ci="0" mb="0" cb="0"/><line nr="265" mi="3" ci="0" mb="0" cb="0"/><line nr="270" mi="5" ci="0" mb="0" cb="0"/><line nr="272" mi="3" ci="0" mb="0" cb="0"/><line nr="275" mi="15" ci="0" mb="8" cb="0"/><line nr="276" mi="2" ci="0" mb="2" cb="0"/><line nr="277" mi="4" ci="0" mb="0" cb="0"/><line nr="278" mi="1" ci="0" mb="0" cb="0"/><line nr="281" mi="2" ci="0" mb="0" cb="0"/><line nr="282" mi="2" ci="0" mb="0" cb="0"/><line nr="283" mi="3" ci="0" mb="0" cb="0"/><line nr="284" mi="3" ci="0" mb="0" cb="0"/><line nr="286" mi="5" ci="0" mb="0" cb="0"/><line nr="289" mi="5" ci="0" mb="0" cb="0"/><line nr="290" mi="13" ci="0" mb="2" cb="0"/><line nr="291" mi="4" ci="0" mb="0" cb="0"/><line nr="292" mi="5" ci="0" mb="0" cb="0"/><line nr="293" mi="2" ci="0" mb="2" cb="0"/><line nr="294" mi="4" ci="0" mb="0" cb="0"/><line nr="295" mi="2" ci="0" mb="2" cb="0"/><line nr="297" mi="4" ci="0" mb="0" cb="0"/><line nr="298" mi="8" ci="0" mb="0" cb="0"/><line nr="299" mi="4" ci="0" mb="0" cb="0"/><line nr="301" mi="8" ci="0" mb="0" cb="0"/><line nr="302" mi="8" ci="0" mb="0" cb="0"/><line nr="303" mi="4" ci="0" mb="0" cb="0"/><line nr="306" mi="1" ci="0" mb="0" cb="0"/><line nr="309" mi="4" ci="0" mb="2" cb="0"/><line nr="310" mi="4" ci="0" mb="0" cb="0"/><line nr="311" mi="11" ci="0" mb="2" cb="0"/><line nr="312" mi="3" ci="0" mb="0" cb="0"/><line nr="313" mi="5" ci="0" mb="0" cb="0"/><line nr="314" mi="2" ci="0" mb="2" cb="0"/><line nr="315" mi="4" ci="0" mb="0" cb="0"/><line nr="316" mi="2" ci="0" mb="2" cb="0"/><line nr="318" mi="5" ci="0" mb="0" cb="0"/><line nr="319" mi="7" ci="0" mb="0" cb="0"/><line nr="321" mi="8" ci="0" mb="0" cb="0"/><line nr="322" mi="8" ci="0" mb="0" cb="0"/><line nr="324" mi="10" ci="0" mb="0" cb="0"/><line nr="327" mi="1" ci="0" mb="0" cb="0"/><line nr="330" mi="6" ci="0" mb="4" cb="0"/><line nr="331" mi="4" ci="0" mb="0" cb="0"/><line nr="332" mi="5" ci="0" mb="0" cb="0"/><line nr="333" mi="12" ci="0" mb="2" cb="0"/><line nr="334" mi="6" ci="0" mb="0" cb="0"/><line nr="335" mi="6" ci="0" mb="0" cb="0"/><line nr="336" mi="6" ci="0" mb="0" cb="0"/><line nr="337" mi="1" ci="0" mb="0" cb="0"/><line nr="340" mi="4" ci="0" mb="0" cb="0"/><line nr="341" mi="3" ci="0" mb="0" cb="0"/><line nr="344" mi="5" ci="0" mb="0" cb="0"/><line nr="345" mi="4" ci="0" mb="0" cb="0"/><line nr="346" mi="4" ci="0" mb="0" cb="0"/><line nr="347" mi="7" ci="0" mb="0" cb="0"/><line nr="351" mi="4" ci="0" mb="0" cb="0"/><line nr="352" mi="2" ci="0" mb="0" cb="0"/><line nr="353" mi="3" ci="0" mb="0" cb="0"/><line nr="354" mi="1" ci="0" mb="0" cb="0"/><line nr="358" mi="3" ci="0" mb="0" cb="0"/><line nr="363" mi="4" ci="0" mb="0" cb="0"/><line nr="364" mi="3" ci="0" mb="0" cb="0"/><line nr="369" mi="3" ci="0" mb="0" cb="0"/><line nr="370" mi="6" ci="0" mb="0" cb="0"/><line nr="371" mi="2" ci="0" mb="0" cb="0"/><line nr="375" mi="3" ci="0" mb="0" cb="0"/><line nr="380" mi="17" ci="0" mb="2" cb="0"/><line nr="381" mi="9" ci="0" mb="0" cb="0"/><line nr="389" mi="3" ci="0" mb="2" cb="0"/><line nr="390" mi="7" ci="0" mb="0" cb="0"/><line nr="391" mi="4" ci="0" mb="0" cb="0"/><line nr="392" mi="2" ci="0" mb="0" cb="0"/><line nr="393" mi="2" ci="0" mb="0" cb="0"/><line nr="394" mi="3" ci="0" mb="2" cb="0"/><line nr="395" mi="4" ci="0" mb="0" cb="0"/><line nr="396" mi="11" ci="0" mb="2" cb="0"/><line nr="397" mi="5" ci="0" mb="2" cb="0"/><line nr="398" mi="5" ci="0" mb="0" cb="0"/><line nr="399" mi="4" ci="0" mb="0" cb="0"/><line nr="400" mi="4" ci="0" mb="0" cb="0"/><line nr="402" mi="1" ci="0" mb="0" cb="0"/><line nr="404" mi="4" ci="0" mb="2" cb="0"/><line nr="405" mi="10" ci="0" mb="2" cb="0"/><line nr="406" mi="2" ci="0" mb="0" cb="0"/><line nr="407" mi="3" ci="0" mb="0" cb="0"/><line nr="408" mi="4" ci="0" mb="0" cb="0"/><line nr="409" mi="1" ci="0" mb="0" cb="0"/><line nr="411" mi="5" ci="0" mb="4" cb="0"/><line nr="412" mi="10" ci="0" mb="2" cb="0"/><line nr="413" mi="6" ci="0" mb="0" cb="0"/><line nr="414" mi="3" ci="0" mb="2" cb="0"/><line nr="415" mi="10" ci="0" mb="0" cb="0"/><line nr="417" mi="3" ci="0" mb="2" cb="0"/><line nr="418" mi="9" ci="0" mb="0" cb="0"/><line nr="423" mi="6" ci="0" mb="0" cb="0"/><line nr="427" mi="1" ci="0" mb="0" cb="0"/><line nr="431" mi="4" ci="0" mb="2" cb="0"/><line nr="432" mi="4" ci="0" mb="0" cb="0"/><line nr="433" mi="2" ci="0" mb="0" cb="0"/><line nr="434" mi="2" ci="0" mb="0" cb="0"/><line nr="435" mi="4" ci="0" mb="0" cb="0"/><line nr="436" mi="3" ci="0" mb="2" cb="0"/><line nr="437" mi="10" ci="0" mb="2" cb="0"/><line nr="438" mi="3" ci="0" mb="2" cb="0"/><line nr="439" mi="3" ci="0" mb="0" cb="0"/><line nr="440" mi="4" ci="0" mb="2" cb="0"/><line nr="441" mi="2" ci="0" mb="0" cb="0"/><line nr="442" mi="1" ci="0" mb="0" cb="0"/><line nr="444" mi="5" ci="0" mb="0" cb="0"/><line nr="445" mi="2" ci="0" mb="0" cb="0"/><line nr="448" mi="2" ci="0" mb="2" cb="0"/><line nr="449" mi="4" ci="0" mb="0" cb="0"/><line nr="451" mi="2" ci="0" mb="0" cb="0"/><line nr="452" mi="1" ci="0" mb="0" cb="0"/><line nr="453" mi="2" ci="0" mb="2" cb="0"/><line nr="454" mi="10" ci="0" mb="0" cb="0"/><line nr="455" mi="7" ci="0" mb="0" cb="0"/><line nr="459" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1059" covered="0"/><counter type="BRANCH" missed="126" covered="0"/><counter type="LINE" missed="217" covered="0"/><counter type="COMPLEXITY" missed="81" covered="0"/><counter type="METHOD" missed="18" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="OLAPContext.java"><line nr="70" mi="4" ci="0" mb="0" cb="0"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="0" cb="0"/><line nr="76" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="2" cb="0"/><line nr="84" mi="4" ci="0" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="87" mi="9" ci="0" mb="0" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="91" mi="4" ci="0" mb="0" cb="0"/><line nr="92" mi="7" ci="0" mb="2" cb="0"/><line nr="96" mi="4" ci="0" mb="0" cb="0"/><line nr="97" mi="6" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="1" ci="0" mb="0" cb="0"/><line nr="104" mi="2" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="0" cb="0"/><line nr="106" mi="6" ci="0" mb="0" cb="0"/><line nr="107" mi="3" ci="0" mb="0" cb="0"/><line nr="108" mi="3" ci="0" mb="0" cb="0"/><line nr="109" mi="4" ci="0" mb="0" cb="0"/><line nr="110" mi="2" ci="0" mb="2" cb="0"/><line nr="111" mi="5" ci="0" mb="0" cb="0"/><line nr="112" mi="2" ci="0" mb="2" cb="0"/><line nr="113" mi="5" ci="0" mb="0" cb="0"/><line nr="115" mi="5" ci="0" mb="0" cb="0"/><line nr="116" mi="3" ci="0" mb="2" cb="0"/><line nr="117" mi="4" ci="0" mb="0" cb="0"/><line nr="119" mi="1" ci="0" mb="0" cb="0"/><line nr="125" mi="3" ci="0" mb="0" cb="0"/><line nr="126" mi="3" ci="0" mb="0" cb="0"/><line nr="127" mi="5" ci="0" mb="0" cb="0"/><line nr="128" mi="5" ci="0" mb="0" cb="0"/><line nr="129" mi="5" ci="0" mb="0" cb="0"/><line nr="130" mi="3" ci="0" mb="0" cb="0"/><line nr="131" mi="3" ci="0" mb="0" cb="0"/><line nr="132" mi="3" ci="0" mb="0" cb="0"/><line nr="133" mi="3" ci="0" mb="0" cb="0"/><line nr="134" mi="3" ci="0" mb="0" cb="0"/><line nr="135" mi="3" ci="0" mb="0" cb="0"/><line nr="136" mi="3" ci="0" mb="0" cb="0"/><line nr="137" mi="3" ci="0" mb="0" cb="0"/><line nr="138" mi="3" ci="0" mb="0" cb="0"/><line nr="139" mi="3" ci="0" mb="0" cb="0"/><line nr="140" mi="3" ci="0" mb="0" cb="0"/><line nr="141" mi="8" ci="0" mb="2" cb="0"/><line nr="142" mi="3" ci="0" mb="0" cb="0"/><line nr="149" mi="5" ci="0" mb="0" cb="0"/><line nr="150" mi="5" ci="0" mb="0" cb="0"/><line nr="151" mi="5" ci="0" mb="0" cb="0"/><line nr="152" mi="5" ci="0" mb="0" cb="0"/><line nr="153" mi="5" ci="0" mb="0" cb="0"/><line nr="154" mi="5" ci="0" mb="0" cb="0"/><line nr="155" mi="5" ci="0" mb="0" cb="0"/><line nr="156" mi="5" ci="0" mb="0" cb="0"/><line nr="159" mi="5" ci="0" mb="0" cb="0"/><line nr="161" mi="3" ci="0" mb="0" cb="0"/><line nr="166" mi="5" ci="0" mb="0" cb="0"/><line nr="169" mi="5" ci="0" mb="0" cb="0"/><line nr="171" mi="5" ci="0" mb="0" cb="0"/><line nr="174" mi="3" ci="0" mb="0" cb="0"/><line nr="176" mi="5" ci="0" mb="0" cb="0"/><line nr="179" mi="16" ci="0" mb="6" cb="0"/><line nr="185" mi="3" ci="0" mb="2" cb="0"/><line nr="186" mi="4" ci="0" mb="0" cb="0"/><line nr="187" mi="12" ci="0" mb="2" cb="0"/><line nr="188" mi="5" ci="0" mb="0" cb="0"/><line nr="189" mi="1" ci="0" mb="0" cb="0"/><line nr="190" mi="4" ci="0" mb="0" cb="0"/><line nr="191" mi="2" ci="0" mb="0" cb="0"/><line nr="192" mi="11" ci="0" mb="2" cb="0"/><line nr="193" mi="3" ci="0" mb="2" cb="0"/><line nr="194" mi="3" ci="0" mb="0" cb="0"/><line nr="195" mi="5" ci="0" mb="0" cb="0"/><line nr="196" mi="5" ci="0" mb="0" cb="0"/><line nr="197" mi="4" ci="0" mb="0" cb="0"/><line nr="199" mi="1" ci="0" mb="0" cb="0"/><line nr="200" mi="47" ci="0" mb="0" cb="0"/><line nr="208" mi="3" ci="0" mb="0" cb="0"/><line nr="212" mi="13" ci="0" mb="4" cb="0"/><line nr="216" mi="12" ci="0" mb="4" cb="0"/><line nr="220" mi="3" ci="0" mb="0" cb="0"/><line nr="221" mi="1" ci="0" mb="0" cb="0"/><line nr="224" mi="11" ci="0" mb="2" cb="0"/><line nr="225" mi="6" ci="0" mb="2" cb="0"/><line nr="226" mi="2" ci="0" mb="0" cb="0"/><line nr="228" mi="1" ci="0" mb="0" cb="0"/><line nr="230" mi="2" ci="0" mb="0" cb="0"/><line nr="234" mi="4" ci="0" mb="2" cb="0"/><line nr="235" mi="2" ci="0" mb="0" cb="0"/><line nr="237" mi="4" ci="0" mb="0" cb="0"/><line nr="238" mi="4" ci="0" mb="0" cb="0"/><line nr="239" mi="5" ci="0" mb="0" cb="0"/><line nr="240" mi="6" ci="0" mb="0" cb="0"/><line nr="242" mi="10" ci="0" mb="2" cb="0"/><line nr="243" mi="3" ci="0" mb="0" cb="0"/><line nr="244" mi="6" ci="0" mb="0" cb="0"/><line nr="247" mi="4" ci="0" mb="0" cb="0"/><line nr="248" mi="5" ci="0" mb="2" cb="0"/><line nr="249" mi="2" ci="0" mb="0" cb="0"/><line nr="250" mi="2" ci="0" mb="0" cb="0"/><line nr="254" mi="11" ci="0" mb="2" cb="0"/><line nr="255" mi="5" ci="0" mb="2" cb="0"/><line nr="256" mi="2" ci="0" mb="0" cb="0"/><line nr="257" mi="2" ci="0" mb="0" cb="0"/><line nr="259" mi="1" ci="0" mb="0" cb="0"/><line nr="260" mi="2" ci="0" mb="0" cb="0"/><line nr="261" mi="1" ci="0" mb="0" cb="0"/><line nr="262" mi="2" ci="0" mb="0" cb="0"/><line nr="266" mi="4" ci="0" mb="0" cb="0"/><line nr="267" mi="3" ci="0" mb="0" cb="0"/><line nr="268" mi="8" ci="0" mb="2" cb="0"/><line nr="269" mi="5" ci="0" mb="0" cb="0"/><line nr="270" mi="8" ci="0" mb="2" cb="0"/><line nr="271" mi="6" ci="0" mb="0" cb="0"/><line nr="273" mi="3" ci="0" mb="0" cb="0"/><line nr="274" mi="1" ci="0" mb="0" cb="0"/><line nr="277" mi="2" ci="0" mb="2" cb="0"/><line nr="278" mi="5" ci="0" mb="0" cb="0"/><line nr="279" mi="5" ci="0" mb="0" cb="0"/><line nr="281" mi="1" ci="0" mb="0" cb="0"/><line nr="284" mi="3" ci="0" mb="2" cb="0"/><line nr="285" mi="1" ci="0" mb="0" cb="0"/><line nr="287" mi="11" ci="0" mb="2" cb="0"/><line nr="288" mi="4" ci="0" mb="0" cb="0"/><line nr="289" mi="1" ci="0" mb="0" cb="0"/><line nr="290" mi="3" ci="0" mb="0" cb="0"/><line nr="291" mi="1" ci="0" mb="0" cb="0"/><line nr="294" mi="3" ci="0" mb="2" cb="0"/><line nr="295" mi="1" ci="0" mb="0" cb="0"/><line nr="297" mi="11" ci="0" mb="2" cb="0"/><line nr="298" mi="2" ci="0" mb="0" cb="0"/><line nr="299" mi="1" ci="0" mb="0" cb="0"/><line nr="300" mi="3" ci="0" mb="0" cb="0"/><line nr="301" mi="1" ci="0" mb="0" cb="0"/><line nr="304" mi="5" ci="0" mb="0" cb="0"/><line nr="305" mi="1" ci="0" mb="0" cb="0"/><line nr="308" mi="2" ci="0" mb="2" cb="0"/><line nr="309" mi="1" ci="0" mb="0" cb="0"/><line nr="312" mi="11" ci="0" mb="2" cb="0"/><line nr="313" mi="4" ci="0" mb="0" cb="0"/><line nr="314" mi="1" ci="0" mb="0" cb="0"/><line nr="316" mi="5" ci="0" mb="4" cb="0"/><line nr="317" mi="3" ci="0" mb="0" cb="0"/><line nr="318" mi="12" ci="0" mb="2" cb="0"/><line nr="319" mi="4" ci="0" mb="0" cb="0"/><line nr="320" mi="4" ci="0" mb="0" cb="0"/><line nr="321" mi="2" ci="0" mb="2" cb="0"/><line nr="322" mi="3" ci="0" mb="0" cb="0"/><line nr="323" mi="5" ci="0" mb="0" cb="0"/><line nr="324" mi="3" ci="0" mb="0" cb="0"/><line nr="325" mi="4" ci="0" mb="0" cb="0"/><line nr="328" mi="1" ci="0" mb="0" cb="0"/><line nr="330" mi="1" ci="0" mb="0" cb="0"/><line nr="333" mi="3" ci="0" mb="0" cb="0"/><line nr="335" mi="3" ci="0" mb="2" cb="0"/><line nr="336" mi="2" ci="0" mb="0" cb="0"/><line nr="339" mi="4" ci="0" mb="2" cb="0"/><line nr="340" mi="4" ci="0" mb="0" cb="0"/><line nr="342" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="694" covered="0"/><counter type="BRANCH" missed="78" covered="0"/><counter type="LINE" missed="162" covered="0"/><counter type="COMPLEXITY" missed="61" covered="0"/><counter type="METHOD" missed="22" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="OLAPAggregateRel.java"><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="95" mi="4" ci="0" mb="0" cb="0"/><line nr="98" mi="5" ci="0" mb="0" cb="0"/><line nr="99" mi="5" ci="0" mb="0" cb="0"/><line nr="100" mi="5" ci="0" mb="0" cb="0"/><line nr="101" mi="5" ci="0" mb="0" cb="0"/><line nr="102" mi="5" ci="0" mb="0" cb="0"/><line nr="103" mi="5" ci="0" mb="0" cb="0"/><line nr="104" mi="5" ci="0" mb="0" cb="0"/><line nr="106" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="11" ci="0" mb="2" cb="0"/><line nr="108" mi="9" ci="0" mb="0" cb="0"/><line nr="109" mi="1" ci="0" mb="0" cb="0"/><line nr="111" mi="2" ci="0" mb="0" cb="0"/><line nr="112" mi="11" ci="0" mb="2" cb="0"/><line nr="114" mi="6" ci="0" mb="0" cb="0"/><line nr="115" mi="11" ci="0" mb="0" cb="0"/><line nr="116" mi="1" ci="0" mb="0" cb="0"/><line nr="117" mi="1" ci="0" mb="0" cb="0"/><line nr="118" mi="5" ci="0" mb="0" cb="0"/><line nr="119" mi="1" ci="0" mb="0" cb="0"/><line nr="120" mi="1" ci="0" mb="0" cb="0"/><line nr="121" mi="1" ci="0" mb="0" cb="0"/><line nr="135" mi="9" ci="0" mb="0" cb="0"/><line nr="136" mi="8" ci="0" mb="2" cb="0"/><line nr="137" mi="3" ci="0" mb="0" cb="0"/><line nr="138" mi="3" ci="0" mb="0" cb="0"/><line nr="139" mi="4" ci="0" mb="0" cb="0"/><line nr="140" mi="1" ci="0" mb="0" cb="0"/><line nr="143" mi="4" ci="0" mb="0" cb="0"/><line nr="144" mi="3" ci="0" mb="2" cb="0"/><line nr="145" mi="9" ci="0" mb="0" cb="0"/><line nr="147" mi="2" ci="0" mb="0" cb="0"/><line nr="151" mi="3" ci="0" mb="0" cb="0"/><line nr="152" mi="5" ci="0" mb="0" cb="0"/><line nr="153" mi="2" ci="0" mb="2" cb="0"/><line nr="154" mi="12" ci="0" mb="0" cb="0"/><line nr="156" mi="2" ci="0" mb="0" cb="0"/><line nr="163" mi="12" ci="0" mb="0" cb="0"/><line nr="164" mi="1" ci="0" mb="0" cb="0"/><line nr="165" mi="6" ci="0" mb="0" cb="0"/><line nr="176" mi="4" ci="0" mb="2" cb="0"/><line nr="177" mi="8" ci="0" mb="0" cb="0"/><line nr="179" mi="14" ci="0" mb="0" cb="0"/><line nr="180" mi="6" ci="0" mb="0" cb="0"/><line nr="182" mi="2" ci="0" mb="0" cb="0"/><line nr="187" mi="3" ci="0" mb="0" cb="0"/><line nr="188" mi="5" ci="0" mb="0" cb="0"/><line nr="190" mi="4" ci="0" mb="0" cb="0"/><line nr="191" mi="4" ci="0" mb="0" cb="0"/><line nr="192" mi="5" ci="0" mb="0" cb="0"/><line nr="195" mi="3" ci="0" mb="2" cb="0"/><line nr="196" mi="4" ci="0" mb="0" cb="0"/><line nr="197" mi="7" ci="0" mb="0" cb="0"/><line nr="198" mi="5" ci="0" mb="0" cb="0"/><line nr="199" mi="11" ci="0" mb="0" cb="0"/><line nr="200" mi="4" ci="0" mb="0" cb="0"/><line nr="202" mi="4" ci="0" mb="2" cb="0"/><line nr="203" mi="5" ci="0" mb="0" cb="0"/><line nr="206" mi="4" ci="0" mb="0" cb="0"/><line nr="207" mi="11" ci="0" mb="2" cb="0"/><line nr="209" mi="3" ci="0" mb="2" cb="0"/><line nr="210" mi="5" ci="0" mb="0" cb="0"/><line nr="212" mi="1" ci="0" mb="0" cb="0"/><line nr="214" mi="1" ci="0" mb="0" cb="0"/><line nr="217" mi="2" ci="0" mb="0" cb="0"/><line nr="218" mi="2" ci="0" mb="0" cb="0"/><line nr="220" mi="5" ci="0" mb="0" cb="0"/><line nr="221" mi="7" ci="0" mb="0" cb="0"/><line nr="222" mi="5" ci="0" mb="0" cb="0"/><line nr="225" mi="3" ci="0" mb="2" cb="0"/><line nr="226" mi="2" ci="0" mb="0" cb="0"/><line nr="227" mi="11" ci="0" mb="2" cb="0"/><line nr="228" mi="10" ci="0" mb="0" cb="0"/><line nr="229" mi="2" ci="0" mb="0" cb="0"/><line nr="230" mi="2" ci="0" mb="0" cb="0"/><line nr="231" mi="4" ci="0" mb="2" cb="0"/><line nr="232" mi="13" ci="0" mb="0" cb="0"/><line nr="234" mi="4" ci="0" mb="0" cb="0"/><line nr="235" mi="4" ci="0" mb="0" cb="0"/><line nr="236" mi="4" ci="0" mb="0" cb="0"/><line nr="237" mi="1" ci="0" mb="0" cb="0"/><line nr="240" mi="9" ci="0" mb="2" cb="0"/><line nr="241" mi="6" ci="0" mb="0" cb="0"/><line nr="243" mi="2" ci="0" mb="2" cb="0"/><line nr="244" mi="4" ci="0" mb="0" cb="0"/><line nr="246" mi="6" ci="0" mb="0" cb="0"/><line nr="247" mi="7" ci="0" mb="0" cb="0"/><line nr="248" mi="10" ci="0" mb="0" cb="0"/><line nr="249" mi="10" ci="0" mb="0" cb="0"/><line nr="251" mi="4" ci="0" mb="0" cb="0"/><line nr="252" mi="13" ci="0" mb="0" cb="0"/><line nr="253" mi="4" ci="0" mb="0" cb="0"/><line nr="255" mi="5" ci="0" mb="0" cb="0"/><line nr="260" mi="3" ci="0" mb="2" cb="0"/><line nr="261" mi="3" ci="0" mb="0" cb="0"/><line nr="262" mi="6" ci="0" mb="0" cb="0"/><line nr="263" mi="1" ci="0" mb="0" cb="0"/><line nr="264" mi="12" ci="0" mb="0" cb="0"/><line nr="266" mi="2" ci="0" mb="0" cb="0"/><line nr="270" mi="5" ci="0" mb="0" cb="0"/><line nr="271" mi="3" ci="0" mb="0" cb="0"/><line nr="272" mi="15" ci="0" mb="2" cb="0"/><line nr="273" mi="4" ci="0" mb="0" cb="0"/><line nr="276" mi="6" ci="0" mb="2" cb="0"/><line nr="277" mi="7" ci="0" mb="4" cb="0"/><line nr="278" mi="4" ci="0" mb="0" cb="0"/><line nr="281" mi="4" ci="0" mb="0" cb="0"/><line nr="282" mi="3" ci="0" mb="2" cb="0"/><line nr="283" mi="8" ci="0" mb="0" cb="0"/><line nr="284" mi="7" ci="0" mb="4" cb="0"/><line nr="285" mi="3" ci="0" mb="0" cb="0"/><line nr="288" mi="7" ci="0" mb="2" cb="0"/><line nr="291" mi="7" ci="0" mb="4" cb="0"/><line nr="292" mi="2" ci="0" mb="0" cb="0"/><line nr="296" mi="2" ci="0" mb="2" cb="0"/><line nr="297" mi="12" ci="0" mb="2" cb="0"/><line nr="298" mi="5" ci="0" mb="2" cb="0"/><line nr="299" mi="2" ci="0" mb="0" cb="0"/><line nr="300" mi="1" ci="0" mb="0" cb="0"/><line nr="302" mi="1" ci="0" mb="0" cb="0"/><line nr="305" mi="2" ci="0" mb="2" cb="0"/><line nr="306" mi="5" ci="0" mb="0" cb="0"/><line nr="307" mi="8" ci="0" mb="0" cb="0"/><line nr="309" mi="7" ci="0" mb="0" cb="0"/><line nr="310" mi="7" ci="0" mb="0" cb="0"/><line nr="311" mi="6" ci="0" mb="0" cb="0"/><line nr="313" mi="1" ci="0" mb="0" cb="0"/><line nr="314" mi="3" ci="0" mb="0" cb="0"/><line nr="316" mi="3" ci="0" mb="2" cb="0"/><line nr="317" mi="4" ci="0" mb="0" cb="0"/><line nr="319" mi="5" ci="0" mb="0" cb="0"/><line nr="322" mi="1" ci="0" mb="0" cb="0"/><line nr="325" mi="5" ci="0" mb="0" cb="0"/><line nr="326" mi="3" ci="0" mb="0" cb="0"/><line nr="327" mi="3" ci="0" mb="0" cb="0"/><line nr="328" mi="9" ci="0" mb="2" cb="0"/><line nr="329" mi="6" ci="0" mb="0" cb="0"/><line nr="330" mi="2" ci="0" mb="0" cb="0"/><line nr="331" mi="3" ci="0" mb="0" cb="0"/><line nr="333" mi="3" ci="0" mb="2" cb="0"/><line nr="334" mi="2" ci="0" mb="0" cb="0"/><line nr="335" mi="3" ci="0" mb="0" cb="0"/><line nr="336" mi="4" ci="0" mb="0" cb="0"/><line nr="337" mi="4" ci="0" mb="2" cb="0"/><line nr="338" mi="6" ci="0" mb="0" cb="0"/><line nr="339" mi="2" ci="0" mb="2" cb="0"/><line nr="340" mi="3" ci="0" mb="0" cb="0"/><line nr="342" mi="4" ci="0" mb="0" cb="0"/><line nr="345" mi="14" ci="0" mb="2" cb="0"/><line nr="346" mi="5" ci="0" mb="0" cb="0"/><line nr="347" mi="4" ci="0" mb="0" cb="0"/><line nr="348" mi="1" ci="0" mb="0" cb="0"/><line nr="349" mi="3" ci="0" mb="2" cb="0"/><line nr="350" mi="7" ci="0" mb="0" cb="0"/><line nr="354" mi="14" ci="0" mb="8" cb="0"/><line nr="355" mi="6" ci="0" mb="0" cb="0"/><line nr="356" mi="4" ci="0" mb="0" cb="0"/><line nr="357" mi="5" ci="0" mb="2" cb="0"/><line nr="358" mi="3" ci="0" mb="2" cb="0"/><line nr="360" mi="6" ci="0" mb="4" cb="0"/><line nr="361" mi="5" ci="0" mb="0" cb="0"/><line nr="362" mi="5" ci="0" mb="0" cb="0"/><line nr="363" mi="4" ci="0" mb="0" cb="0"/><line nr="364" mi="6" ci="0" mb="0" cb="0"/><line nr="365" mi="5" ci="0" mb="0" cb="0"/><line nr="366" mi="1" ci="0" mb="0" cb="0"/><line nr="368" mi="7" ci="0" mb="4" cb="0"/><line nr="370" mi="3" ci="0" mb="2" cb="0"/><line nr="371" mi="4" ci="0" mb="0" cb="0"/><line nr="372" mi="5" ci="0" mb="2" cb="0"/><line nr="373" mi="4" ci="0" mb="0" cb="0"/><line nr="375" mi="5" ci="0" mb="0" cb="0"/><line nr="378" mi="8" ci="0" mb="0" cb="0"/><line nr="379" mi="4" ci="0" mb="0" cb="0"/><line nr="381" mi="6" ci="0" mb="0" cb="0"/><line nr="383" mi="5" ci="0" mb="0" cb="0"/><line nr="384" mi="6" ci="0" mb="0" cb="0"/><line nr="385" mi="7" ci="0" mb="0" cb="0"/><line nr="387" mi="8" ci="0" mb="0" cb="0"/><line nr="389" mi="5" ci="0" mb="0" cb="0"/><line nr="390" mi="1" ci="0" mb="0" cb="0"/><line nr="395" mi="3" ci="0" mb="0" cb="0"/><line nr="396" mi="5" ci="0" mb="0" cb="0"/><line nr="397" mi="5" ci="0" mb="0" cb="0"/><line nr="399" mi="1" ci="0" mb="0" cb="0"/><line nr="402" mi="9" ci="0" mb="2" cb="0"/><line nr="403" mi="9" ci="0" mb="4" cb="0"/><line nr="409" mi="3" ci="0" mb="2" cb="0"/><line nr="410" mi="2" ci="0" mb="0" cb="0"/><line nr="411" mi="2" ci="0" mb="0" cb="0"/><line nr="414" mi="5" ci="0" mb="0" cb="0"/><line nr="416" mi="3" ci="0" mb="0" cb="0"/><line nr="419" mi="3" ci="0" mb="2" cb="0"/><line nr="421" mi="6" ci="0" mb="0" cb="0"/><line nr="422" mi="9" ci="0" mb="2" cb="0"/><line nr="423" mi="16" ci="0" mb="2" cb="0"/><line nr="424" mi="3" ci="0" mb="0" cb="0"/><line nr="425" mi="4" ci="0" mb="2" cb="0"/><line nr="426" mi="5" ci="0" mb="0" cb="0"/><line nr="427" mi="1" ci="0" mb="0" cb="0"/><line nr="430" mi="7" ci="0" mb="0" cb="0"/><line nr="434" mi="6" ci="0" mb="4" cb="0"/><line nr="435" mi="3" ci="0" mb="2" cb="0"/><line nr="436" mi="5" ci="0" mb="0" cb="0"/><line nr="440" mi="4" ci="0" mb="2" cb="0"/><line nr="442" mi="3" ci="0" mb="2" cb="0"/><line nr="443" mi="7" ci="0" mb="0" cb="0"/><line nr="446" mi="10" ci="0" mb="0" cb="0"/><line nr="449" mi="5" ci="0" mb="0" cb="0"/><line nr="450" mi="8" ci="0" mb="0" cb="0"/><line nr="455" mi="4" ci="0" mb="0" cb="0"/><line nr="456" mi="4" ci="0" mb="0" cb="0"/><line nr="458" mi="3" ci="0" mb="0" cb="0"/><line nr="459" mi="1" ci="0" mb="0" cb="0"/><line nr="462" mi="5" ci="0" mb="0" cb="0"/><line nr="464" mi="3" ci="0" mb="0" cb="0"/><line nr="465" mi="2" ci="0" mb="0" cb="0"/><line nr="466" mi="11" ci="0" mb="2" cb="0"/><line nr="467" mi="5" ci="0" mb="0" cb="0"/><line nr="468" mi="4" ci="0" mb="0" cb="0"/><line nr="469" mi="1" ci="0" mb="0" cb="0"/><line nr="470" mi="6" ci="0" mb="0" cb="0"/><line nr="474" mi="3" ci="0" mb="2" cb="0"/><line nr="476" mi="5" ci="0" mb="0" cb="0"/><line nr="477" mi="2" ci="0" mb="0" cb="0"/><line nr="478" mi="11" ci="0" mb="2" cb="0"/><line nr="479" mi="3" ci="0" mb="2" cb="0"/><line nr="480" mi="3" ci="0" mb="0" cb="0"/><line nr="481" mi="3" ci="0" mb="0" cb="0"/><line nr="482" mi="4" ci="0" mb="0" cb="0"/><line nr="483" mi="11" ci="0" mb="2" cb="0"/><line nr="484" mi="11" ci="0" mb="0" cb="0"/><line nr="485" mi="1" ci="0" mb="0" cb="0"/><line nr="486" mi="3" ci="0" mb="0" cb="0"/><line nr="487" mi="4" ci="0" mb="0" cb="0"/><line nr="488" mi="1" ci="0" mb="0" cb="0"/><line nr="489" mi="7" ci="0" mb="0" cb="0"/><line nr="491" mi="1" ci="0" mb="0" cb="0"/><line nr="492" mi="3" ci="0" mb="0" cb="0"/><line nr="493" mi="5" ci="0" mb="0" cb="0"/><line nr="494" mi="4" ci="0" mb="0" cb="0"/><line nr="495" mi="6" ci="0" mb="0" cb="0"/><line nr="499" mi="1" ci="0" mb="0" cb="0"/><line nr="502" mi="10" ci="0" mb="2" cb="0"/><line nr="503" mi="5" ci="0" mb="2" cb="0"/><line nr="504" mi="3" ci="0" mb="0" cb="0"/><line nr="506" mi="1" ci="0" mb="0" cb="0"/><line nr="509" mi="3" ci="0" mb="2" cb="0"/><line nr="510" mi="4" ci="0" mb="0" cb="0"/><line nr="511" mi="2" ci="0" mb="2" cb="0"/><line nr="512" mi="2" ci="0" mb="0" cb="0"/><line nr="515" mi="2" ci="0" mb="0" cb="0"/><line nr="519" mi="10" ci="0" mb="2" cb="0"/><line nr="520" mi="4" ci="0" mb="2" cb="0"/><line nr="521" mi="3" ci="0" mb="0" cb="0"/><line nr="523" mi="1" ci="0" mb="0" cb="0"/><line nr="524" mi="2" ci="0" mb="0" cb="0"/><line nr="528" mi="5" ci="0" mb="0" cb="0"/><line nr="529" mi="4" ci="0" mb="0" cb="0"/><line nr="530" mi="9" ci="0" mb="2" cb="0"/><line nr="531" mi="6" ci="0" mb="0" cb="0"/><line nr="533" mi="3" ci="0" mb="2" cb="0"/><line nr="534" mi="5" ci="0" mb="0" cb="0"/><line nr="535" mi="1" ci="0" mb="0" cb="0"/><line nr="538" mi="3" ci="0" mb="2" cb="0"/><line nr="539" mi="3" ci="0" mb="0" cb="0"/><line nr="540" mi="6" ci="0" mb="0" cb="0"/><line nr="542" mi="7" ci="0" mb="0" cb="0"/><line nr="544" mi="4" ci="0" mb="0" cb="0"/><line nr="545" mi="6" ci="0" mb="0" cb="0"/><line nr="548" mi="6" ci="0" mb="0" cb="0"/><line nr="549" mi="4" ci="0" mb="2" cb="0"/><line nr="550" mi="11" ci="0" mb="2" cb="0"/><line nr="551" mi="5" ci="0" mb="0" cb="0"/><line nr="552" mi="8" ci="0" mb="4" cb="0"/><line nr="553" mi="6" ci="0" mb="0" cb="0"/><line nr="555" mi="1" ci="0" mb="0" cb="0"/><line nr="558" mi="1" ci="0" mb="0" cb="0"/><line nr="561" mi="10" ci="0" mb="2" cb="0"/><line nr="562" mi="8" ci="0" mb="4" cb="0"/><line nr="563" mi="6" ci="0" mb="0" cb="0"/><line nr="564" mi="1" ci="0" mb="0" cb="0"/><line nr="565" mi="1" ci="0" mb="0" cb="0"/><line nr="568" mi="12" ci="0" mb="4" cb="0"/><line nr="574" mi="3" ci="0" mb="0" cb="0"/><line nr="575" mi="3" ci="0" mb="0" cb="0"/><line nr="576" mi="3" ci="0" mb="0" cb="0"/><line nr="578" mi="4" ci="0" mb="0" cb="0"/><line nr="579" mi="3" ci="0" mb="2" cb="0"/><line nr="580" mi="3" ci="0" mb="0" cb="0"/><line nr="581" mi="6" ci="0" mb="4" cb="0"/><line nr="582" mi="9" ci="0" mb="0" cb="0"/><line nr="586" mi="4" ci="0" mb="0" cb="0"/><line nr="587" mi="6" ci="0" mb="4" cb="0"/><line nr="588" mi="8" ci="0" mb="0" cb="0"/><line nr="590" mi="3" ci="0" mb="2" cb="0"/><line nr="591" mi="9" ci="0" mb="0" cb="0"/><line nr="592" mi="3" ci="0" mb="2" cb="0"/><line nr="593" mi="7" ci="0" mb="0" cb="0"/><line nr="596" mi="7" ci="0" mb="0" cb="0"/><line nr="601" mi="9" ci="0" mb="0" cb="0"/><line nr="603" mi="2" ci="0" mb="0" cb="0"/><line nr="610" mi="3" ci="0" mb="0" cb="0"/><line nr="611" mi="17" ci="0" mb="2" cb="0"/><line nr="612" mi="5" ci="0" mb="2" cb="0"/><line nr="613" mi="8" ci="0" mb="0" cb="0"/><line nr="616" mi="5" ci="0" mb="0" cb="0"/><line nr="620" mi="4" ci="0" mb="0" cb="0"/><line nr="621" mi="10" ci="0" mb="0" cb="0"/><line nr="622" mi="3" ci="0" mb="0" cb="0"/><line nr="623" mi="4" ci="0" mb="0" cb="0"/><line nr="624" mi="4" ci="0" mb="0" cb="0"/><line nr="625" mi="11" ci="0" mb="2" cb="0"/><line nr="626" mi="4" ci="0" mb="0" cb="0"/><line nr="627" mi="4" ci="0" mb="0" cb="0"/><line nr="628" mi="8" ci="0" mb="0" cb="0"/><line nr="629" mi="1" ci="0" mb="0" cb="0"/><line nr="630" mi="7" ci="0" mb="0" cb="0"/><line nr="631" mi="8" ci="0" mb="0" cb="0"/><line nr="638" mi="10" ci="0" mb="0" cb="0"/><line nr="639" mi="11" ci="0" mb="0" cb="0"/><line nr="640" mi="1" ci="0" mb="0" cb="0"/><line nr="641" mi="6" ci="0" mb="0" cb="0"/><line nr="647" mi="3" ci="0" mb="0" cb="0"/><line nr="652" mi="3" ci="0" mb="0" cb="0"/><line nr="658" mi="4" ci="0" mb="0" cb="0"/><line nr="659" mi="3" ci="0" mb="0" cb="0"/><line nr="664" mi="3" ci="0" mb="0" cb="0"/><line nr="665" mi="6" ci="0" mb="0" cb="0"/><line nr="666" mi="2" ci="0" mb="0" cb="0"/><line nr="670" mi="3" ci="0" mb="0" cb="0"/><line nr="675" mi="17" ci="0" mb="2" cb="0"/><line nr="676" mi="9" ci="0" mb="0" cb="0"/><line nr="680" mi="3" ci="0" mb="0" cb="0"/><line nr="681" mi="5" ci="0" mb="0" cb="0"/><line nr="682" mi="6" ci="0" mb="0" cb="0"/><line nr="683" mi="12" ci="0" mb="0" cb="0"/><line nr="685" mi="5" ci="0" mb="0" cb="0"/><line nr="686" mi="6" ci="0" mb="0" cb="0"/><line nr="687" mi="13" ci="0" mb="0" cb="0"/><line nr="688" mi="2" ci="0" mb="0" cb="0"/><line nr="692" mi="3" ci="0" mb="0" cb="0"/><line nr="696" mi="3" ci="0" mb="0" cb="0"/><line nr="697" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1729" covered="0"/><counter type="BRANCH" missed="192" covered="0"/><counter type="LINE" missed="345" covered="0"/><counter type="COMPLEXITY" missed="129" covered="0"/><counter type="METHOD" missed="33" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="OLAPToEnumerableConverter.java"><line nr="61" mi="4" ci="0" mb="0" cb="0"/><line nr="66" mi="6" ci="0" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="10" ci="0" mb="0" cb="0"/><line nr="77" mi="7" ci="0" mb="0" cb="0"/><line nr="82" mi="3" ci="0" mb="2" cb="0"/><line nr="83" mi="6" ci="0" mb="0" cb="0"/><line nr="84" mi="3" ci="0" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="88" mi="3" ci="0" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="5" ci="0" mb="0" cb="0"/><line nr="94" mi="3" ci="0" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="2" cb="0"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="10" ci="0" mb="2" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="101" mi="1" ci="0" mb="0" cb="0"/><line nr="104" mi="3" ci="0" mb="2" cb="0"/><line nr="105" mi="6" ci="0" mb="0" cb="0"/><line nr="106" mi="3" ci="0" mb="0" cb="0"/><line nr="107" mi="3" ci="0" mb="0" cb="0"/><line nr="110" mi="2" ci="0" mb="0" cb="0"/><line nr="112" mi="5" ci="0" mb="0" cb="0"/><line nr="113" mi="9" ci="0" mb="2" cb="0"/><line nr="114" mi="5" ci="0" mb="0" cb="0"/><line nr="115" mi="3" ci="0" mb="0" cb="0"/><line nr="117" mi="3" ci="0" mb="0" cb="0"/><line nr="120" mi="4" ci="0" mb="0" cb="0"/><line nr="121" mi="5" ci="0" mb="0" cb="0"/><line nr="123" mi="7" ci="0" mb="0" cb="0"/><line nr="124" mi="1" ci="0" mb="0" cb="0"/><line nr="125" mi="3" ci="0" mb="2" cb="0"/><line nr="126" mi="4" ci="0" mb="0" cb="0"/><line nr="127" mi="4" ci="0" mb="0" cb="0"/><line nr="128" mi="4" ci="0" mb="0" cb="0"/><line nr="129" mi="4" ci="0" mb="2" cb="0"/><line nr="130" mi="11" ci="0" mb="0" cb="0"/><line nr="131" mi="3" ci="0" mb="0" cb="0"/><line nr="132" mi="5" ci="0" mb="0" cb="0"/><line nr="133" mi="1" ci="0" mb="0" cb="0"/><line nr="134" mi="11" ci="0" mb="0" cb="0"/><line nr="135" mi="3" ci="0" mb="0" cb="0"/><line nr="136" mi="5" ci="0" mb="0" cb="0"/><line nr="138" mi="6" ci="0" mb="0" cb="0"/><line nr="141" mi="5" ci="0" mb="0" cb="0"/><line nr="142" mi="6" ci="0" mb="0" cb="0"/><line nr="143" mi="4" ci="0" mb="0" cb="0"/><line nr="145" mi="3" ci="0" mb="2" cb="0"/><line nr="146" mi="6" ci="0" mb="0" cb="0"/><line nr="147" mi="3" ci="0" mb="0" cb="0"/><line nr="148" mi="3" ci="0" mb="0" cb="0"/><line nr="149" mi="8" ci="0" mb="0" cb="0"/><line nr="152" mi="7" ci="0" mb="0" cb="0"/><line nr="160" mi="3" ci="0" mb="0" cb="0"/><line nr="161" mi="3" ci="0" mb="0" cb="0"/><line nr="162" mi="7" ci="0" mb="2" cb="0"/><line nr="163" mi="3" ci="0" mb="0" cb="0"/><line nr="164" mi="3" ci="0" mb="2" cb="0"/><line nr="165" mi="4" ci="0" mb="0" cb="0"/><line nr="167" mi="2" ci="0" mb="0" cb="0"/><line nr="171" mi="2" ci="0" mb="0" cb="0"/><line nr="172" mi="3" ci="0" mb="0" cb="0"/><line nr="173" mi="6" ci="0" mb="4" cb="0"/><line nr="174" mi="4" ci="0" mb="0" cb="0"/><line nr="175" mi="4" ci="0" mb="0" cb="0"/><line nr="177" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="290" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="67" covered="0"/><counter type="COMPLEXITY" missed="21" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="OLAPNonEquiJoinRel.java"><line nr="61" mi="9" ci="0" mb="0" cb="0"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="3" ci="0" mb="0" cb="0"/><line nr="83" mi="6" ci="0" mb="0" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="4" ci="0" mb="2" cb="0"/><line nr="89" mi="5" ci="0" mb="0" cb="0"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="97" mi="5" ci="0" mb="2" cb="0"/><line nr="98" mi="5" ci="0" mb="2" cb="0"/><line nr="99" mi="2" ci="0" mb="2" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="4" ci="0" mb="0" cb="0"/><line nr="105" mi="9" ci="0" mb="2" cb="0"/><line nr="106" mi="4" ci="0" mb="0" cb="0"/><line nr="107" mi="3" ci="0" mb="0" cb="0"/><line nr="110" mi="3" ci="0" mb="0" cb="0"/><line nr="111" mi="3" ci="0" mb="0" cb="0"/><line nr="112" mi="5" ci="0" mb="0" cb="0"/><line nr="113" mi="5" ci="0" mb="2" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="118" mi="3" ci="0" mb="0" cb="0"/><line nr="119" mi="3" ci="0" mb="0" cb="0"/><line nr="120" mi="5" ci="0" mb="0" cb="0"/><line nr="121" mi="5" ci="0" mb="2" cb="0"/><line nr="122" mi="2" ci="0" mb="0" cb="0"/><line nr="125" mi="4" ci="0" mb="0" cb="0"/><line nr="127" mi="3" ci="0" mb="2" cb="0"/><line nr="128" mi="4" ci="0" mb="0" cb="0"/><line nr="131" mi="9" ci="0" mb="0" cb="0"/><line nr="132" mi="1" ci="0" mb="0" cb="0"/><line nr="136" mi="5" ci="0" mb="0" cb="0"/><line nr="137" mi="5" ci="0" mb="0" cb="0"/><line nr="139" mi="4" ci="0" mb="0" cb="0"/><line nr="140" mi="3" ci="0" mb="2" cb="0"/><line nr="143" mi="4" ci="0" mb="0" cb="0"/><line nr="144" mi="3" ci="0" mb="2" cb="0"/><line nr="145" mi="5" ci="0" mb="0" cb="0"/><line nr="146" mi="2" ci="0" mb="0" cb="0"/><line nr="147" mi="5" ci="0" mb="0" cb="0"/><line nr="148" mi="11" ci="0" mb="2" cb="0"/><line nr="149" mi="5" ci="0" mb="0" cb="0"/><line nr="151" mi="9" ci="0" mb="0" cb="0"/><line nr="152" mi="4" ci="0" mb="0" cb="0"/><line nr="154" mi="4" ci="0" mb="0" cb="0"/><line nr="155" mi="1" ci="0" mb="0" cb="0"/><line nr="158" mi="5" ci="0" mb="0" cb="0"/><line nr="159" mi="6" ci="0" mb="0" cb="0"/><line nr="160" mi="4" ci="0" mb="0" cb="0"/><line nr="161" mi="7" ci="0" mb="0" cb="0"/><line nr="163" mi="6" ci="0" mb="0" cb="0"/><line nr="166" mi="1" ci="0" mb="0" cb="0"/><line nr="170" mi="19" ci="0" mb="0" cb="0"/><line nr="174" mi="4" ci="0" mb="0" cb="0"/><line nr="176" mi="4" ci="0" mb="0" cb="0"/><line nr="177" mi="3" ci="0" mb="0" cb="0"/><line nr="178" mi="5" ci="0" mb="0" cb="0"/><line nr="180" mi="4" ci="0" mb="0" cb="0"/><line nr="181" mi="3" ci="0" mb="0" cb="0"/><line nr="182" mi="5" ci="0" mb="0" cb="0"/><line nr="184" mi="6" ci="0" mb="2" cb="0"/><line nr="185" mi="9" ci="0" mb="0" cb="0"/><line nr="186" mi="10" ci="0" mb="0" cb="0"/><line nr="188" mi="5" ci="0" mb="0" cb="0"/><line nr="193" mi="7" ci="0" mb="0" cb="0"/><line nr="198" mi="6" ci="0" mb="0" cb="0"/><line nr="204" mi="13" ci="0" mb="0" cb="0"/><line nr="205" mi="1" ci="0" mb="0" cb="0"/><line nr="206" mi="5" ci="0" mb="0" cb="0"/><line nr="211" mi="2" ci="0" mb="0" cb="0"/><line nr="212" mi="4" ci="0" mb="0" cb="0"/><line nr="213" mi="2" ci="0" mb="0" cb="0"/><line nr="217" mi="3" ci="0" mb="2" cb="0"/><line nr="218" mi="13" ci="0" mb="0" cb="0"/><line nr="219" mi="3" ci="0" mb="2" cb="0"/><line nr="220" mi="9" ci="0" mb="0" cb="0"/><line nr="222" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="381" covered="0"/><counter type="BRANCH" missed="28" covered="0"/><counter type="LINE" missed="81" covered="0"/><counter type="COMPLEXITY" missed="30" covered="0"/><counter type="METHOD" missed="16" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="OLAPWindowRel.java"><line nr="48" mi="8" ci="0" mb="2" cb="0"/><line nr="54" mi="8" ci="0" mb="0" cb="0"/><line nr="55" mi="8" ci="0" mb="2" cb="0"/><line nr="56" mi="9" ci="0" mb="2" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="10" ci="0" mb="4" cb="0"/><line nr="62" mi="17" ci="0" mb="0" cb="0"/><line nr="67" mi="7" ci="0" mb="0" cb="0"/><line nr="73" mi="16" ci="0" mb="2" cb="0"/><line nr="74" mi="15" ci="0" mb="0" cb="0"/><line nr="75" mi="11" ci="0" mb="2" cb="0"/><line nr="76" mi="6" ci="0" mb="2" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="5" ci="0" mb="0" cb="0"/><line nr="84" mi="4" ci="0" mb="0" cb="0"/><line nr="85" mi="4" ci="0" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="1" ci="0" mb="0" cb="0"/><line nr="90" mi="5" ci="0" mb="0" cb="0"/><line nr="91" mi="3" ci="0" mb="0" cb="0"/><line nr="93" mi="4" ci="0" mb="0" cb="0"/><line nr="95" mi="5" ci="0" mb="0" cb="0"/><line nr="98" mi="11" ci="0" mb="2" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="100" mi="16" ci="0" mb="0" cb="0"/><line nr="101" mi="11" ci="0" mb="0" cb="0"/><line nr="102" mi="7" ci="0" mb="0" cb="0"/><line nr="103" mi="12" ci="0" mb="2" cb="0"/><line nr="104" mi="5" ci="0" mb="0" cb="0"/><line nr="106" mi="4" ci="0" mb="0" cb="0"/><line nr="107" mi="20" ci="0" mb="2" cb="0"/><line nr="108" mi="7" ci="0" mb="0" cb="0"/><line nr="109" mi="3" ci="0" mb="0" cb="0"/><line nr="110" mi="4" ci="0" mb="0" cb="0"/><line nr="111" mi="1" ci="0" mb="0" cb="0"/><line nr="112" mi="1" ci="0" mb="0" cb="0"/><line nr="113" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="11" ci="0" mb="2" cb="0"/><line nr="119" mi="4" ci="0" mb="0" cb="0"/><line nr="120" mi="1" ci="0" mb="0" cb="0"/><line nr="121" mi="1" ci="0" mb="0" cb="0"/><line nr="125" mi="10" ci="0" mb="2" cb="0"/><line nr="126" mi="3" ci="0" mb="2" cb="0"/><line nr="127" mi="5" ci="0" mb="0" cb="0"/><line nr="129" mi="1" ci="0" mb="0" cb="0"/><line nr="130" mi="16" ci="0" mb="0" cb="0"/><line nr="136" mi="3" ci="0" mb="0" cb="0"/><line nr="141" mi="3" ci="0" mb="0" cb="0"/><line nr="146" mi="11" ci="0" mb="2" cb="0"/><line nr="147" mi="4" ci="0" mb="2" cb="0"/><line nr="148" mi="2" ci="0" mb="0" cb="0"/><line nr="150" mi="1" ci="0" mb="0" cb="0"/><line nr="151" mi="2" ci="0" mb="0" cb="0"/><line nr="156" mi="3" ci="0" mb="0" cb="0"/><line nr="157" mi="6" ci="0" mb="0" cb="0"/><line nr="158" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="352" covered="0"/><counter type="BRANCH" missed="32" covered="0"/><counter type="LINE" missed="56" covered="0"/><counter type="COMPLEXITY" missed="30" covered="0"/><counter type="METHOD" missed="14" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="KylinAggregateCall.java"><line nr="31" mi="12" ci="0" mb="0" cb="0"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="1" ci="0" mb="0" cb="0"/><line nr="36" mi="6" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="5" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="2" cb="0"/><line nr="46" mi="4" ci="0" mb="0" cb="0"/><line nr="47" mi="5" ci="0" mb="2" cb="0"/><line nr="51" mi="5" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="2" cb="0"/><line nr="53" mi="4" ci="0" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="2" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="5" ci="0" mb="2" cb="0"/><line nr="60" mi="5" ci="0" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="2" cb="0"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="2" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="5" ci="0" mb="2" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="2" cb="0"/><line nr="71" mi="4" ci="0" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="2" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="74" mi="5" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="111" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="27" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="OLAPAuthentication.java"><line nr="27" mi="2" ci="0" mb="0" cb="0"/><line nr="29" mi="6" ci="0" mb="0" cb="0"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="3" ci="0" mb="2" cb="0"/><line nr="34" mi="5" ci="0" mb="0" cb="0"/><line nr="35" mi="8" ci="0" mb="2" cb="0"/><line nr="36" mi="7" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="OLAPFilterRel.java"><line nr="58" mi="9" ci="0" mb="2" cb="0"/><line nr="61" mi="6" ci="0" mb="0" cb="0"/><line nr="62" mi="8" ci="0" mb="2" cb="0"/><line nr="63" mi="9" ci="0" mb="2" cb="0"/><line nr="64" mi="4" ci="0" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="7" ci="0" mb="0" cb="0"/><line nr="74" mi="9" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="5" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="2" cb="0"/><line nr="87" mi="5" ci="0" mb="0" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="6" ci="0" mb="0" cb="0"/><line nr="92" mi="6" ci="0" mb="0" cb="0"/><line nr="93" mi="4" ci="0" mb="2" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><line nr="99" mi="4" ci="0" mb="0" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="2" cb="0"/><line nr="106" mi="1" ci="0" mb="0" cb="0"/><line nr="109" mi="6" ci="0" mb="0" cb="0"/><line nr="110" mi="8" ci="0" mb="0" cb="0"/><line nr="111" mi="10" ci="0" mb="4" cb="0"/><line nr="112" mi="4" ci="0" mb="0" cb="0"/><line nr="113" mi="6" ci="0" mb="0" cb="0"/><line nr="116" mi="6" ci="0" mb="0" cb="0"/><line nr="118" mi="2" ci="0" mb="0" cb="0"/><line nr="119" mi="3" ci="0" mb="0" cb="0"/><line nr="120" mi="10" ci="0" mb="2" cb="0"/><line nr="121" mi="7" ci="0" mb="4" cb="0"/><line nr="122" mi="5" ci="0" mb="0" cb="0"/><line nr="123" mi="5" ci="0" mb="0" cb="0"/><line nr="125" mi="1" ci="0" mb="0" cb="0"/><line nr="127" mi="7" ci="0" mb="0" cb="0"/><line nr="128" mi="1" ci="0" mb="0" cb="0"/><line nr="131" mi="2" ci="0" mb="2" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="2" ci="0" mb="2" cb="0"/><line nr="134" mi="2" ci="0" mb="0" cb="0"/><line nr="136" mi="4" ci="0" mb="2" cb="0"/><line nr="137" mi="3" ci="0" mb="0" cb="0"/><line nr="138" mi="2" ci="0" mb="0" cb="0"/><line nr="141" mi="4" ci="0" mb="2" cb="0"/><line nr="142" mi="3" ci="0" mb="0" cb="0"/><line nr="143" mi="2" ci="0" mb="0" cb="0"/><line nr="146" mi="5" ci="0" mb="0" cb="0"/><line nr="147" mi="3" ci="0" mb="0" cb="0"/><line nr="148" mi="3" ci="0" mb="0" cb="0"/><line nr="149" mi="2" ci="0" mb="0" cb="0"/><line nr="155" mi="4" ci="0" mb="0" cb="0"/><line nr="156" mi="4" ci="0" mb="0" cb="0"/><line nr="157" mi="6" ci="0" mb="0" cb="0"/><line nr="158" mi="2" ci="0" mb="0" cb="0"/><line nr="159" mi="4" ci="0" mb="0" cb="0"/><line nr="160" mi="3" ci="0" mb="0" cb="0"/><line nr="162" mi="10" ci="0" mb="0" cb="0"/><line nr="163" mi="4" ci="0" mb="0" cb="0"/><line nr="168" mi="5" ci="0" mb="0" cb="0"/><line nr="170" mi="4" ci="0" mb="0" cb="0"/><line nr="171" mi="4" ci="0" mb="0" cb="0"/><line nr="172" mi="1" ci="0" mb="0" cb="0"/><line nr="176" mi="3" ci="0" mb="0" cb="0"/><line nr="181" mi="3" ci="0" mb="0" cb="0"/><line nr="186" mi="4" ci="0" mb="0" cb="0"/><line nr="187" mi="3" ci="0" mb="0" cb="0"/><line nr="192" mi="3" ci="0" mb="0" cb="0"/><line nr="193" mi="6" ci="0" mb="0" cb="0"/><line nr="194" mi="2" ci="0" mb="0" cb="0"/><line nr="199" mi="17" ci="0" mb="2" cb="0"/><line nr="200" mi="9" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="337" covered="0"/><counter type="BRANCH" missed="32" covered="0"/><counter type="LINE" missed="75" covered="0"/><counter type="COMPLEXITY" missed="30" covered="0"/><counter type="METHOD" missed="14" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="KylinEnumerableUnion.java"><line nr="52" mi="6" ci="0" mb="0" cb="0"/><line nr="54" mi="15" ci="0" mb="0" cb="0"/><line nr="55" mi="7" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="2" cb="0"/><line nr="60" mi="11" ci="0" mb="0" cb="0"/><line nr="63" mi="18" ci="0" mb="2" cb="0"/><line nr="64" mi="13" ci="0" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="4" ci="0" mb="0" cb="0"/><line nr="71" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="12" ci="0" mb="2" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><line nr="74" mi="8" ci="0" mb="0" cb="0"/><line nr="75" mi="12" ci="0" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="2" ci="0" mb="2" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="83" mi="12" ci="0" mb="2" cb="0"/><line nr="85" mi="1" ci="0" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="3" ci="0" mb="0" cb="0"/><line nr="92" mi="1" ci="0" mb="0" cb="0"/><line nr="93" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="155" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="27" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="OLAPUnionRel.java"><line nr="52" mi="6" ci="0" mb="0" cb="0"/><line nr="53" mi="8" ci="0" mb="2" cb="0"/><line nr="54" mi="10" ci="0" mb="2" cb="0"/><line nr="55" mi="9" ci="0" mb="2" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="9" ci="0" mb="0" cb="0"/><line nr="66" mi="7" ci="0" mb="0" cb="0"/><line nr="71" mi="7" ci="0" mb="2" cb="0"/><line nr="73" mi="16" ci="0" mb="2" cb="0"/><line nr="74" mi="13" ci="0" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="2" ci="0" mb="0" cb="0"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><line nr="82" mi="11" ci="0" mb="2" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="8" ci="0" mb="0" cb="0"/><line nr="85" mi="5" ci="0" mb="2" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="1" ci="0" mb="0" cb="0"/><line nr="97" mi="6" ci="0" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="11" ci="0" mb="2" cb="0"/><line nr="102" mi="7" ci="0" mb="0" cb="0"/><line nr="103" mi="1" ci="0" mb="0" cb="0"/><line nr="105" mi="11" ci="0" mb="2" cb="0"/><line nr="106" mi="3" ci="0" mb="0" cb="0"/><line nr="107" mi="4" ci="0" mb="0" cb="0"/><line nr="108" mi="4" ci="0" mb="0" cb="0"/><line nr="109" mi="10" ci="0" mb="2" cb="0"/><line nr="110" mi="7" ci="0" mb="0" cb="0"/><line nr="111" mi="1" ci="0" mb="0" cb="0"/><line nr="112" mi="7" ci="0" mb="0" cb="0"/><line nr="113" mi="1" ci="0" mb="0" cb="0"/><line nr="115" mi="6" ci="0" mb="0" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="11" ci="0" mb="2" cb="0"/><line nr="122" mi="4" ci="0" mb="0" cb="0"/><line nr="123" mi="1" ci="0" mb="0" cb="0"/><line nr="125" mi="4" ci="0" mb="0" cb="0"/><line nr="126" mi="4" ci="0" mb="0" cb="0"/><line nr="127" mi="1" ci="0" mb="0" cb="0"/><line nr="131" mi="6" ci="0" mb="0" cb="0"/><line nr="132" mi="10" ci="0" mb="2" cb="0"/><line nr="133" mi="3" ci="0" mb="2" cb="0"/><line nr="134" mi="5" ci="0" mb="0" cb="0"/><line nr="136" mi="4" ci="0" mb="0" cb="0"/><line nr="137" mi="1" ci="0" mb="0" cb="0"/><line nr="138" mi="13" ci="0" mb="0" cb="0"/><line nr="143" mi="3" ci="0" mb="0" cb="0"/><line nr="148" mi="3" ci="0" mb="0" cb="0"/><line nr="153" mi="11" ci="0" mb="2" cb="0"/><line nr="154" mi="4" ci="0" mb="2" cb="0"/><line nr="155" mi="2" ci="0" mb="0" cb="0"/><line nr="157" mi="1" ci="0" mb="0" cb="0"/><line nr="158" mi="2" ci="0" mb="0" cb="0"/><line nr="163" mi="3" ci="0" mb="0" cb="0"/><line nr="164" mi="6" ci="0" mb="0" cb="0"/><line nr="165" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="320" covered="0"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="61" covered="0"/><counter type="COMPLEXITY" missed="27" covered="0"/><counter type="METHOD" missed="12" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="OLAPSortRel.java"><line nr="53" mi="8" ci="0" mb="0" cb="0"/><line nr="54" mi="8" ci="0" mb="2" cb="0"/><line nr="55" mi="9" ci="0" mb="2" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="11" ci="0" mb="0" cb="0"/><line nr="66" mi="7" ci="0" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><line nr="75" mi="4" ci="0" mb="0" cb="0"/><line nr="77" mi="12" ci="0" mb="2" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="5" ci="0" mb="0" cb="0"/><line nr="80" mi="4" ci="0" mb="0" cb="0"/><line nr="81" mi="7" ci="0" mb="0" cb="0"/><line nr="82" mi="5" ci="0" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="85" mi="1" ci="0" mb="0" cb="0"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="90" mi="3" ci="0" mb="0" cb="0"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="96" mi="5" ci="0" mb="0" cb="0"/><line nr="100" mi="4" ci="0" mb="2" cb="0"/><line nr="101" mi="1" ci="0" mb="0" cb="0"/><line nr="103" mi="4" ci="0" mb="0" cb="0"/><line nr="104" mi="4" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="3" ci="0" mb="2" cb="0"/><line nr="109" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="13" ci="0" mb="2" cb="0"/><line nr="118" mi="7" ci="0" mb="2" cb="0"/><line nr="119" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="1" ci="0" mb="0" cb="0"/><line nr="122" mi="2" ci="0" mb="0" cb="0"/><line nr="127" mi="6" ci="0" mb="0" cb="0"/><line nr="128" mi="7" ci="0" mb="0" cb="0"/><line nr="129" mi="9" ci="0" mb="0" cb="0"/><line nr="134" mi="3" ci="0" mb="0" cb="0"/><line nr="139" mi="3" ci="0" mb="0" cb="0"/><line nr="144" mi="4" ci="0" mb="0" cb="0"/><line nr="145" mi="3" ci="0" mb="0" cb="0"/><line nr="150" mi="3" ci="0" mb="0" cb="0"/><line nr="151" mi="6" ci="0" mb="0" cb="0"/><line nr="152" mi="2" ci="0" mb="0" cb="0"/><line nr="157" mi="17" ci="0" mb="2" cb="0"/><line nr="158" mi="9" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="234" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="48" covered="0"/><counter type="COMPLEXITY" missed="22" covered="0"/><counter type="METHOD" missed="14" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="OLAPLimitRel.java"><line nr="50" mi="5" ci="0" mb="0" cb="0"/><line nr="51" mi="8" ci="0" mb="2" cb="0"/><line nr="52" mi="9" ci="0" mb="2" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="59" mi="14" ci="0" mb="0" cb="0"/><line nr="64" mi="7" ci="0" mb="0" cb="0"/><line nr="69" mi="16" ci="0" mb="2" cb="0"/><line nr="70" mi="19" ci="0" mb="2" cb="0"/><line nr="71" mi="11" ci="0" mb="2" cb="0"/><line nr="76" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="5" ci="0" mb="0" cb="0"/><line nr="79" mi="4" ci="0" mb="0" cb="0"/><line nr="80" mi="4" ci="0" mb="0" cb="0"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><line nr="86" mi="16" ci="0" mb="8" cb="0"/><line nr="88" mi="7" ci="0" mb="0" cb="0"/><line nr="89" mi="3" ci="0" mb="0" cb="0"/><line nr="90" mi="5" ci="0" mb="0" cb="0"/><line nr="92" mi="3" ci="0" mb="2" cb="0"/><line nr="93" mi="7" ci="0" mb="0" cb="0"/><line nr="94" mi="3" ci="0" mb="0" cb="0"/><line nr="95" mi="5" ci="0" mb="0" cb="0"/><line nr="98" mi="4" ci="0" mb="0" cb="0"/><line nr="99" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="4" ci="0" mb="0" cb="0"/><line nr="102" mi="1" ci="0" mb="0" cb="0"/><line nr="105" mi="4" ci="0" mb="0" cb="0"/><line nr="106" mi="3" ci="0" mb="0" cb="0"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="112" mi="5" ci="0" mb="0" cb="0"/><line nr="114" mi="4" ci="0" mb="0" cb="0"/><line nr="115" mi="4" ci="0" mb="0" cb="0"/><line nr="116" mi="1" ci="0" mb="0" cb="0"/><line nr="120" mi="4" ci="0" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="2" cb="0"/><line nr="122" mi="5" ci="0" mb="0" cb="0"/><line nr="124" mi="7" ci="0" mb="0" cb="0"/><line nr="129" mi="3" ci="0" mb="0" cb="0"/><line nr="134" mi="3" ci="0" mb="0" cb="0"/><line nr="139" mi="4" ci="0" mb="0" cb="0"/><line nr="140" mi="3" ci="0" mb="0" cb="0"/><line nr="145" mi="3" ci="0" mb="0" cb="0"/><line nr="146" mi="6" ci="0" mb="0" cb="0"/><line nr="147" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="241" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="46" covered="0"/><counter type="COMPLEXITY" missed="23" covered="0"/><counter type="METHOD" missed="12" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="OLAPJoinRel.java"><line nr="71" mi="7" ci="0" mb="2" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="84" mi="11" ci="0" mb="0" cb="0"/><line nr="85" mi="8" ci="0" mb="2" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="94" mi="6" ci="0" mb="0" cb="0"/><line nr="95" mi="9" ci="0" mb="4" cb="0"/><line nr="97" mi="18" ci="0" mb="0" cb="0"/><line nr="99" mi="1" ci="0" mb="0" cb="0"/><line nr="101" mi="5" ci="0" mb="0" cb="0"/><line nr="107" mi="7" ci="0" mb="0" cb="0"/><line nr="112" mi="6" ci="0" mb="0" cb="0"/><line nr="117" mi="4" ci="0" mb="2" cb="0"/><line nr="118" mi="5" ci="0" mb="0" cb="0"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="127" mi="8" ci="0" mb="4" cb="0"/><line nr="128" mi="2" ci="0" mb="0" cb="0"/><line nr="131" mi="4" ci="0" mb="0" cb="0"/><line nr="132" mi="6" ci="0" mb="0" cb="0"/><line nr="133" mi="9" ci="0" mb="2" cb="0"/><line nr="134" mi="4" ci="0" mb="0" cb="0"/><line nr="136" mi="2" ci="0" mb="0" cb="0"/><line nr="137" mi="2" ci="0" mb="0" cb="0"/><line nr="140" mi="3" ci="0" mb="0" cb="0"/><line nr="141" mi="5" ci="0" mb="0" cb="0"/><line nr="144" mi="10" ci="0" mb="4" cb="0"/><line nr="145" mi="3" ci="0" mb="0" cb="0"/><line nr="146" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="5" ci="0" mb="2" cb="0"/><line nr="149" mi="2" ci="0" mb="0" cb="0"/><line nr="153" mi="2" ci="0" mb="2" cb="0"/><line nr="155" mi="3" ci="0" mb="0" cb="0"/><line nr="158" mi="3" ci="0" mb="0" cb="0"/><line nr="159" mi="5" ci="0" mb="0" cb="0"/><line nr="160" mi="10" ci="0" mb="4" cb="0"/><line nr="161" mi="3" ci="0" mb="0" cb="0"/><line nr="162" mi="2" ci="0" mb="0" cb="0"/><line nr="165" mi="2" ci="0" mb="2" cb="0"/><line nr="166" mi="7" ci="0" mb="2" cb="0"/><line nr="167" mi="10" ci="0" mb="2" cb="0"/><line nr="170" mi="5" ci="0" mb="2" cb="0"/><line nr="171" mi="2" ci="0" mb="0" cb="0"/><line nr="175" mi="4" ci="0" mb="0" cb="0"/><line nr="177" mi="3" ci="0" mb="2" cb="0"/><line nr="178" mi="4" ci="0" mb="0" cb="0"/><line nr="181" mi="3" ci="0" mb="2" cb="0"/><line nr="185" mi="5" ci="0" mb="0" cb="0"/><line nr="187" mi="4" ci="0" mb="0" cb="0"/><line nr="188" mi="4" ci="0" mb="0" cb="0"/><line nr="190" mi="3" ci="0" mb="0" cb="0"/><line nr="191" mi="17" ci="0" mb="6" cb="0"/><line nr="193" mi="3" ci="0" mb="0" cb="0"/><line nr="195" mi="6" ci="0" mb="0" cb="0"/><line nr="196" mi="1" ci="0" mb="0" cb="0"/><line nr="198" mi="2" ci="0" mb="0" cb="0"/><line nr="199" mi="5" ci="0" mb="0" cb="0"/><line nr="201" mi="11" ci="0" mb="2" cb="0"/><line nr="202" mi="10" ci="0" mb="2" cb="0"/><line nr="203" mi="6" ci="0" mb="0" cb="0"/><line nr="204" mi="1" ci="0" mb="0" cb="0"/><line nr="205" mi="2" ci="0" mb="0" cb="0"/><line nr="207" mi="1" ci="0" mb="0" cb="0"/><line nr="210" mi="4" ci="0" mb="0" cb="0"/><line nr="212" mi="4" ci="0" mb="0" cb="0"/><line nr="213" mi="3" ci="0" mb="0" cb="0"/><line nr="214" mi="5" ci="0" mb="0" cb="0"/><line nr="216" mi="4" ci="0" mb="0" cb="0"/><line nr="218" mi="4" ci="0" mb="0" cb="0"/><line nr="219" mi="3" ci="0" mb="0" cb="0"/><line nr="220" mi="5" ci="0" mb="0" cb="0"/><line nr="222" mi="6" ci="0" mb="2" cb="0"/><line nr="223" mi="9" ci="0" mb="0" cb="0"/><line nr="224" mi="10" ci="0" mb="0" cb="0"/><line nr="226" mi="5" ci="0" mb="0" cb="0"/><line nr="230" mi="2" ci="0" mb="0" cb="0"/><line nr="231" mi="4" ci="0" mb="0" cb="0"/><line nr="233" mi="4" ci="0" mb="0" cb="0"/><line nr="234" mi="4" ci="0" mb="0" cb="0"/><line nr="235" mi="4" ci="0" mb="0" cb="0"/><line nr="236" mi="4" ci="0" mb="0" cb="0"/><line nr="237" mi="11" ci="0" mb="2" cb="0"/><line nr="238" mi="4" ci="0" mb="0" cb="0"/><line nr="239" mi="4" ci="0" mb="0" cb="0"/><line nr="240" mi="5" ci="0" mb="0" cb="0"/><line nr="241" mi="4" ci="0" mb="0" cb="0"/><line nr="242" mi="5" ci="0" mb="0" cb="0"/><line nr="243" mi="4" ci="0" mb="0" cb="0"/><line nr="244" mi="1" ci="0" mb="0" cb="0"/><line nr="246" mi="4" ci="0" mb="0" cb="0"/><line nr="247" mi="6" ci="0" mb="0" cb="0"/><line nr="248" mi="8" ci="0" mb="0" cb="0"/><line nr="249" mi="6" ci="0" mb="0" cb="0"/><line nr="250" mi="8" ci="0" mb="0" cb="0"/><line nr="251" mi="2" ci="0" mb="0" cb="0"/><line nr="252" mi="2" ci="0" mb="0" cb="0"/><line nr="256" mi="3" ci="0" mb="2" cb="0"/><line nr="257" mi="5" ci="0" mb="0" cb="0"/><line nr="259" mi="1" ci="0" mb="0" cb="0"/><line nr="262" mi="4" ci="0" mb="0" cb="0"/><line nr="263" mi="3" ci="0" mb="2" cb="0"/><line nr="264" mi="11" ci="0" mb="2" cb="0"/><line nr="265" mi="3" ci="0" mb="0" cb="0"/><line nr="266" mi="4" ci="0" mb="0" cb="0"/><line nr="267" mi="2" ci="0" mb="0" cb="0"/><line nr="268" mi="3" ci="0" mb="2" cb="0"/><line nr="269" mi="3" ci="0" mb="0" cb="0"/><line nr="270" mi="5" ci="0" mb="0" cb="0"/><line nr="271" mi="6" ci="0" mb="0" cb="0"/><line nr="272" mi="5" ci="0" mb="0" cb="0"/><line nr="273" mi="6" ci="0" mb="0" cb="0"/><line nr="275" mi="5" ci="0" mb="2" cb="0"/><line nr="276" mi="6" ci="0" mb="0" cb="0"/><line nr="278" mi="5" ci="0" mb="0" cb="0"/><line nr="280" mi="1" ci="0" mb="0" cb="0"/><line nr="286" mi="41" ci="0" mb="0" cb="0"/><line nr="295" mi="3" ci="0" mb="0" cb="0"/><line nr="296" mi="1" ci="0" mb="0" cb="0"/><line nr="297" mi="5" ci="0" mb="0" cb="0"/><line nr="298" mi="1" ci="0" mb="0" cb="0"/><line nr="299" mi="1" ci="0" mb="0" cb="0"/><line nr="303" mi="3" ci="0" mb="2" cb="0"/><line nr="305" mi="22" ci="0" mb="0" cb="0"/><line nr="306" mi="33" ci="0" mb="0" cb="0"/><line nr="307" mi="1" ci="0" mb="0" cb="0"/><line nr="308" mi="6" ci="0" mb="0" cb="0"/><line nr="311" mi="2" ci="0" mb="0" cb="0"/><line nr="318" mi="7" ci="0" mb="0" cb="0"/><line nr="320" mi="8" ci="0" mb="0" cb="0"/><line nr="321" mi="5" ci="0" mb="0" cb="0"/><line nr="322" mi="11" ci="0" mb="0" cb="0"/><line nr="323" mi="10" ci="0" mb="0" cb="0"/><line nr="324" mi="6" ci="0" mb="0" cb="0"/><line nr="329" mi="3" ci="0" mb="0" cb="0"/><line nr="334" mi="5" ci="0" mb="0" cb="0"/><line nr="335" mi="5" ci="0" mb="0" cb="0"/><line nr="337" mi="4" ci="0" mb="0" cb="0"/><line nr="339" mi="3" ci="0" mb="2" cb="0"/><line nr="340" mi="8" ci="0" mb="4" cb="0"/><line nr="342" mi="5" ci="0" mb="0" cb="0"/><line nr="343" mi="4" ci="0" mb="0" cb="0"/><line nr="344" mi="13" ci="0" mb="2" cb="0"/><line nr="345" mi="4" ci="0" mb="0" cb="0"/><line nr="346" mi="7" ci="0" mb="2" cb="0"/><line nr="347" mi="4" ci="0" mb="0" cb="0"/><line nr="348" mi="8" ci="0" mb="0" cb="0"/><line nr="349" mi="4" ci="0" mb="0" cb="0"/><line nr="351" mi="1" ci="0" mb="0" cb="0"/><line nr="354" mi="5" ci="0" mb="0" cb="0"/><line nr="355" mi="6" ci="0" mb="0" cb="0"/><line nr="356" mi="4" ci="0" mb="0" cb="0"/><line nr="357" mi="7" ci="0" mb="0" cb="0"/><line nr="360" mi="4" ci="0" mb="0" cb="0"/><line nr="364" mi="4" ci="0" mb="0" cb="0"/><line nr="365" mi="3" ci="0" mb="2" cb="0"/><line nr="366" mi="5" ci="0" mb="0" cb="0"/><line nr="367" mi="2" ci="0" mb="0" cb="0"/><line nr="368" mi="5" ci="0" mb="0" cb="0"/><line nr="369" mi="11" ci="0" mb="2" cb="0"/><line nr="370" mi="5" ci="0" mb="0" cb="0"/><line nr="372" mi="9" ci="0" mb="0" cb="0"/><line nr="373" mi="4" ci="0" mb="0" cb="0"/><line nr="375" mi="4" ci="0" mb="0" cb="0"/><line nr="376" mi="1" ci="0" mb="0" cb="0"/><line nr="379" mi="5" ci="0" mb="0" cb="0"/><line nr="380" mi="6" ci="0" mb="0" cb="0"/><line nr="381" mi="4" ci="0" mb="0" cb="0"/><line nr="382" mi="7" ci="0" mb="0" cb="0"/><line nr="384" mi="6" ci="0" mb="0" cb="0"/><line nr="387" mi="1" ci="0" mb="0" cb="0"/><line nr="390" mi="3" ci="0" mb="2" cb="0"/><line nr="391" mi="7" ci="0" mb="0" cb="0"/><line nr="393" mi="16" ci="0" mb="4" cb="0"/><line nr="398" mi="3" ci="0" mb="0" cb="0"/><line nr="403" mi="3" ci="0" mb="0" cb="0"/><line nr="408" mi="3" ci="0" mb="0" cb="0"/><line nr="409" mi="6" ci="0" mb="0" cb="0"/><line nr="410" mi="2" ci="0" mb="0" cb="0"/><line nr="415" mi="17" ci="0" mb="2" cb="0"/><line nr="416" mi="9" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="976" covered="0"/><counter type="BRANCH" missed="88" covered="0"/><counter type="LINE" missed="181" covered="0"/><counter type="COMPLEXITY" missed="64" covered="0"/><counter type="METHOD" missed="20" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="OLAPValuesRel.java"><line nr="49" mi="8" ci="0" mb="2" cb="0"/><line nr="53" mi="6" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="60" mi="10" ci="0" mb="0" cb="0"/><line nr="61" mi="19" ci="0" mb="0" cb="0"/><line nr="63" mi="8" ci="0" mb="0" cb="0"/><line nr="65" mi="11" ci="0" mb="0" cb="0"/><line nr="67" mi="6" ci="0" mb="0" cb="0"/><line nr="70" mi="8" ci="0" mb="0" cb="0"/><line nr="75" mi="7" ci="0" mb="0" cb="0"/><line nr="76" mi="8" ci="0" mb="0" cb="0"/><line nr="81" mi="9" ci="0" mb="4" cb="0"/><line nr="82" mi="8" ci="0" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="92" mi="3" ci="0" mb="0" cb="0"/><line nr="96" mi="5" ci="0" mb="0" cb="0"/><line nr="97" mi="12" ci="0" mb="2" cb="0"/><line nr="98" mi="7" ci="0" mb="0" cb="0"/><line nr="99" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="5" ci="0" mb="0" cb="0"/><line nr="105" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="3" ci="0" mb="0" cb="0"/><line nr="111" mi="6" ci="0" mb="0" cb="0"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="2" ci="0" mb="0" cb="0"/><line nr="118" mi="4" ci="0" mb="0" cb="0"/><line nr="120" mi="1" ci="0" mb="0" cb="0"/><line nr="125" mi="1" ci="0" mb="0" cb="0"/><line nr="129" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="177" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="30" covered="0"/><counter type="COMPLEXITY" missed="21" covered="0"/><counter type="METHOD" missed="17" covered="0"/><counter type="CLASS" missed="3" covered="0"/></sourcefile><sourcefile name="ColumnRowType.java"><line nr="43" mi="4" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="6" ci="0" mb="0" cb="0"/><line nr="56" mi="7" ci="0" mb="4" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="6" ci="0" mb="0" cb="0"/><line nr="63" mi="6" ci="0" mb="0" cb="0"/><line nr="67" mi="9" ci="0" mb="2" cb="0"/><line nr="68" mi="9" ci="0" mb="2" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="7" ci="0" mb="4" cb="0"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="7" ci="0" mb="0" cb="0"/><line nr="81" mi="7" ci="0" mb="0" cb="0"/><line nr="82" mi="6" ci="0" mb="0" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="2" cb="0"/><line nr="88" mi="6" ci="0" mb="0" cb="0"/><line nr="90" mi="5" ci="0" mb="4" cb="0"/><line nr="91" mi="7" ci="0" mb="0" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="2" cb="0"/><line nr="98" mi="4" ci="0" mb="0" cb="0"/><line nr="99" mi="9" ci="0" mb="2" cb="0"/><line nr="100" mi="6" ci="0" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="0" cb="0"/><line nr="104" mi="3" ci="0" mb="0" cb="0"/><line nr="108" mi="3" ci="0" mb="0" cb="0"/><line nr="112" mi="4" ci="0" mb="0" cb="0"/><line nr="117" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="164" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="35" covered="0"/><counter type="COMPLEXITY" missed="23" covered="0"/><counter type="METHOD" missed="12" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="OLAPRel.java"><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="7" ci="0" mb="0" cb="0"/><line nr="75" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="5" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="5" ci="0" mb="0" cb="0"/><line nr="80" mi="4" ci="0" mb="0" cb="0"/><line nr="83" mi="5" ci="0" mb="0" cb="0"/><line nr="84" mi="4" ci="0" mb="0" cb="0"/><line nr="85" mi="4" ci="0" mb="0" cb="0"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="5" ci="0" mb="0" cb="0"/><line nr="93" mi="3" ci="0" mb="0" cb="0"/><line nr="97" mi="4" ci="0" mb="2" cb="0"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="100" mi="5" ci="0" mb="0" cb="0"/><line nr="104" mi="4" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="11" ci="0" mb="0" cb="0"/><line nr="109" mi="4" ci="0" mb="2" cb="0"/><line nr="110" mi="6" ci="0" mb="0" cb="0"/><line nr="111" mi="3" ci="0" mb="0" cb="0"/><line nr="113" mi="5" ci="0" mb="0" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="3" ci="0" mb="0" cb="0"/><line nr="116" mi="1" ci="0" mb="0" cb="0"/><line nr="120" mi="3" ci="0" mb="0" cb="0"/><line nr="121" mi="1" ci="0" mb="0" cb="0"/><line nr="124" mi="3" ci="0" mb="0" cb="0"/><line nr="128" mi="5" ci="0" mb="0" cb="0"/><line nr="129" mi="2" ci="0" mb="2" cb="0"/><line nr="130" mi="4" ci="0" mb="0" cb="0"/><line nr="131" mi="1" ci="0" mb="0" cb="0"/><line nr="134" mi="5" ci="0" mb="0" cb="0"/><line nr="135" mi="2" ci="0" mb="2" cb="0"/><line nr="136" mi="4" ci="0" mb="0" cb="0"/><line nr="137" mi="1" ci="0" mb="0" cb="0"/><line nr="140" mi="5" ci="0" mb="0" cb="0"/><line nr="141" mi="2" ci="0" mb="2" cb="0"/><line nr="142" mi="4" ci="0" mb="0" cb="0"/><line nr="143" mi="1" ci="0" mb="0" cb="0"/><line nr="146" mi="8" ci="0" mb="0" cb="0"/><line nr="147" mi="2" ci="0" mb="2" cb="0"/><line nr="148" mi="4" ci="0" mb="0" cb="0"/><line nr="149" mi="1" ci="0" mb="0" cb="0"/><line nr="152" mi="3" ci="0" mb="2" cb="0"/><line nr="153" mi="3" ci="0" mb="0" cb="0"/><line nr="154" mi="3" ci="0" mb="2" cb="0"/><line nr="155" mi="8" ci="0" mb="0" cb="0"/><line nr="156" mi="2" ci="0" mb="0" cb="0"/><line nr="159" mi="2" ci="0" mb="0" cb="0"/><line nr="169" mi="3" ci="0" mb="0" cb="0"/><line nr="173" mi="3" ci="0" mb="2" cb="0"/><line nr="174" mi="3" ci="0" mb="0" cb="0"/><line nr="175" mi="4" ci="0" mb="0" cb="0"/><line nr="177" mi="3" ci="0" mb="0" cb="0"/><line nr="178" mi="3" ci="0" mb="0" cb="0"/><line nr="179" mi="1" ci="0" mb="0" cb="0"/><line nr="182" mi="3" ci="0" mb="0" cb="0"/><line nr="186" mi="3" ci="0" mb="2" cb="0"/><line nr="187" mi="2" ci="0" mb="0" cb="0"/><line nr="189" mi="3" ci="0" mb="2" cb="0"/><line nr="190" mi="2" ci="0" mb="0" cb="0"/><line nr="193" mi="6" ci="0" mb="0" cb="0"/><line nr="194" mi="6" ci="0" mb="2" cb="0"/><line nr="195" mi="2" ci="0" mb="0" cb="0"/><line nr="197" mi="2" ci="0" mb="0" cb="0"/><line nr="208" mi="3" ci="0" mb="0" cb="0"/><line nr="209" mi="8" ci="0" mb="2" cb="0"/><line nr="212" mi="7" ci="0" mb="0" cb="0"/><line nr="213" mi="1" ci="0" mb="0" cb="0"/><line nr="216" mi="2" ci="0" mb="0" cb="0"/><line nr="217" mi="3" ci="0" mb="0" cb="0"/><line nr="218" mi="2" ci="0" mb="2" cb="0"/><line nr="219" mi="4" ci="0" mb="0" cb="0"/><line nr="220" mi="10" ci="0" mb="2" cb="0"/><line nr="221" mi="7" ci="0" mb="0" cb="0"/><line nr="222" mi="1" ci="0" mb="0" cb="0"/><line nr="225" mi="4" ci="0" mb="0" cb="0"/><line nr="226" mi="7" ci="0" mb="0" cb="0"/><line nr="227" mi="2" ci="0" mb="0" cb="0"/><line nr="234" mi="3" ci="0" mb="2" cb="0"/><line nr="236" mi="3" ci="0" mb="2" cb="0"/><line nr="237" mi="5" ci="0" mb="0" cb="0"/><line nr="239" mi="6" ci="0" mb="0" cb="0"/><line nr="240" mi="12" ci="0" mb="0" cb="0"/><line nr="243" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="327" covered="0"/><counter type="BRANCH" missed="34" covered="0"/><counter type="LINE" missed="87" covered="0"/><counter type="COMPLEXITY" missed="39" covered="0"/><counter type="METHOD" missed="22" covered="0"/><counter type="CLASS" missed="4" covered="0"/></sourcefile><sourcefile name="OLAPTableScan.java"><line nr="110" mi="7" ci="0" mb="0" cb="0"/><line nr="111" mi="3" ci="0" mb="0" cb="0"/><line nr="112" mi="3" ci="0" mb="0" cb="0"/><line nr="113" mi="4" ci="0" mb="0" cb="0"/><line nr="114" mi="4" ci="0" mb="0" cb="0"/><line nr="115" mi="3" ci="0" mb="0" cb="0"/><line nr="116" mi="1" ci="0" mb="0" cb="0"/><line nr="119" mi="3" ci="0" mb="0" cb="0"/><line nr="123" mi="3" ci="0" mb="0" cb="0"/><line nr="127" mi="3" ci="0" mb="0" cb="0"/><line nr="131" mi="3" ci="0" mb="0" cb="0"/><line nr="136" mi="3" ci="0" mb="0" cb="0"/><line nr="140" mi="3" ci="0" mb="0" cb="0"/><line nr="141" mi="1" ci="0" mb="0" cb="0"/><line nr="145" mi="3" ci="0" mb="0" cb="0"/><line nr="146" mi="12" ci="0" mb="0" cb="0"/><line nr="152" mi="1" ci="0" mb="0" cb="0"/><line nr="155" mi="6" ci="0" mb="0" cb="0"/><line nr="157" mi="4" ci="0" mb="0" cb="0"/><line nr="158" mi="4" ci="0" mb="0" cb="0"/><line nr="159" mi="4" ci="0" mb="0" cb="0"/><line nr="160" mi="4" ci="0" mb="0" cb="0"/><line nr="161" mi="4" ci="0" mb="0" cb="0"/><line nr="162" mi="4" ci="0" mb="0" cb="0"/><line nr="163" mi="4" ci="0" mb="0" cb="0"/><line nr="164" mi="4" ci="0" mb="0" cb="0"/><line nr="165" mi="4" ci="0" mb="0" cb="0"/><line nr="166" mi="4" ci="0" mb="0" cb="0"/><line nr="168" mi="4" ci="0" mb="0" cb="0"/><line nr="171" mi="4" ci="0" mb="2" cb="0"/><line nr="172" mi="4" ci="0" mb="0" cb="0"/><line nr="173" mi="4" ci="0" mb="0" cb="0"/><line nr="174" mi="4" ci="0" mb="0" cb="0"/><line nr="175" mi="4" ci="0" mb="0" cb="0"/><line nr="182" mi="6" ci="0" mb="0" cb="0"/><line nr="183" mi="4" ci="0" mb="2" cb="0"/><line nr="184" mi="10" ci="0" mb="2" cb="0"/><line nr="185" mi="4" ci="0" mb="0" cb="0"/><line nr="186" mi="1" ci="0" mb="0" cb="0"/><line nr="189" mi="4" ci="0" mb="0" cb="0"/><line nr="190" mi="4" ci="0" mb="0" cb="0"/><line nr="193" mi="4" ci="0" mb="0" cb="0"/><line nr="194" mi="4" ci="0" mb="0" cb="0"/><line nr="195" mi="4" ci="0" mb="0" cb="0"/><line nr="198" mi="4" ci="0" mb="0" cb="0"/><line nr="199" mi="4" ci="0" mb="0" cb="0"/><line nr="200" mi="4" ci="0" mb="0" cb="0"/><line nr="201" mi="4" ci="0" mb="0" cb="0"/><line nr="202" mi="4" ci="0" mb="0" cb="0"/><line nr="203" mi="4" ci="0" mb="0" cb="0"/><line nr="204" mi="4" ci="0" mb="0" cb="0"/><line nr="205" mi="4" ci="0" mb="0" cb="0"/><line nr="206" mi="4" ci="0" mb="0" cb="0"/><line nr="207" mi="4" ci="0" mb="0" cb="0"/><line nr="208" mi="4" ci="0" mb="0" cb="0"/><line nr="209" mi="4" ci="0" mb="0" cb="0"/><line nr="211" mi="4" ci="0" mb="0" cb="0"/><line nr="214" mi="4" ci="0" mb="0" cb="0"/><line nr="238" mi="4" ci="0" mb="0" cb="0"/><line nr="239" mi="1" ci="0" mb="0" cb="0"/><line nr="242" mi="17" ci="0" mb="0" cb="0"/><line nr="246" mi="5" ci="0" mb="0" cb="0"/><line nr="247" mi="2" ci="0" mb="0" cb="0"/><line nr="250" mi="1" ci="0" mb="0" cb="0"/><line nr="253" mi="17" ci="0" mb="0" cb="0"/><line nr="257" mi="5" ci="0" mb="0" cb="0"/><line nr="258" mi="2" ci="0" mb="0" cb="0"/><line nr="261" mi="1" ci="0" mb="0" cb="0"/><line nr="264" mi="10" ci="0" mb="2" cb="0"/><line nr="265" mi="3" ci="0" mb="2" cb="0"/><line nr="266" mi="1" ci="0" mb="0" cb="0"/><line nr="268" mi="4" ci="0" mb="0" cb="0"/><line nr="269" mi="4" ci="0" mb="2" cb="0"/><line nr="270" mi="5" ci="0" mb="0" cb="0"/><line nr="272" mi="4" ci="0" mb="0" cb="0"/><line nr="273" mi="4" ci="0" mb="0" cb="0"/><line nr="275" mi="10" ci="0" mb="0" cb="0"/><line nr="276" mi="1" ci="0" mb="0" cb="0"/><line nr="277" mi="5" ci="0" mb="0" cb="0"/><line nr="278" mi="1" ci="0" mb="0" cb="0"/><line nr="279" mi="5" ci="0" mb="0" cb="0"/><line nr="280" mi="1" ci="0" mb="0" cb="0"/><line nr="281" mi="5" ci="0" mb="0" cb="0"/><line nr="282" mi="1" ci="0" mb="0" cb="0"/><line nr="283" mi="1" ci="0" mb="0" cb="0"/><line nr="284" mi="1" ci="0" mb="0" cb="0"/><line nr="288" mi="5" ci="0" mb="0" cb="0"/><line nr="289" mi="5" ci="0" mb="0" cb="0"/><line nr="290" mi="17" ci="0" mb="2" cb="0"/><line nr="291" mi="7" ci="0" mb="0" cb="0"/><line nr="293" mi="6" ci="0" mb="0" cb="0"/><line nr="298" mi="7" ci="0" mb="0" cb="0"/><line nr="304" mi="16" ci="0" mb="2" cb="0"/><line nr="305" mi="13" ci="0" mb="0" cb="0"/><line nr="306" mi="2" ci="0" mb="0" cb="0"/><line nr="311" mi="8" ci="0" mb="2" cb="0"/><line nr="314" mi="8" ci="0" mb="4" cb="0"/><line nr="315" mi="2" ci="0" mb="2" cb="0"/><line nr="316" mi="2" ci="0" mb="0" cb="0"/><line nr="319" mi="4" ci="0" mb="0" cb="0"/><line nr="320" mi="6" ci="0" mb="0" cb="0"/><line nr="321" mi="4" ci="0" mb="0" cb="0"/><line nr="323" mi="4" ci="0" mb="2" cb="0"/><line nr="324" mi="4" ci="0" mb="0" cb="0"/><line nr="325" mi="4" ci="0" mb="0" cb="0"/><line nr="326" mi="6" ci="0" mb="0" cb="0"/><line nr="329" mi="4" ci="0" mb="2" cb="0"/><line nr="330" mi="4" ci="0" mb="0" cb="0"/><line nr="333" mi="4" ci="0" mb="2" cb="0"/><line nr="335" mi="12" ci="0" mb="2" cb="0"/><line nr="336" mi="5" ci="0" mb="2" cb="0"/><line nr="337" mi="6" ci="0" mb="0" cb="0"/><line nr="339" mi="1" ci="0" mb="0" cb="0"/><line nr="341" mi="1" ci="0" mb="0" cb="0"/><line nr="352" mi="3" ci="0" mb="0" cb="0"/><line nr="353" mi="5" ci="0" mb="0" cb="0"/><line nr="355" mi="2" ci="0" mb="2" cb="0"/><line nr="356" mi="5" ci="0" mb="0" cb="0"/><line nr="357" mi="3" ci="0" mb="2" cb="0"/><line nr="358" mi="2" ci="0" mb="0" cb="0"/><line nr="361" mi="6" ci="0" mb="4" cb="0"/><line nr="362" mi="2" ci="0" mb="0" cb="0"/><line nr="365" mi="5" ci="0" mb="0" cb="0"/><line nr="366" mi="8" ci="0" mb="4" cb="0"/><line nr="368" mi="1" ci="0" mb="0" cb="0"/><line nr="370" mi="1" ci="0" mb="0" cb="0"/><line nr="371" mi="1" ci="0" mb="0" cb="0"/><line nr="373" mi="2" ci="0" mb="0" cb="0"/><line nr="377" mi="3" ci="0" mb="0" cb="0"/><line nr="381" mi="17" ci="0" mb="0" cb="0"/><line nr="382" mi="7" ci="0" mb="0" cb="0"/><line nr="384" mi="4" ci="0" mb="0" cb="0"/><line nr="385" mi="12" ci="0" mb="2" cb="0"/><line nr="386" mi="4" ci="0" mb="0" cb="0"/><line nr="387" mi="4" ci="0" mb="0" cb="0"/><line nr="388" mi="1" ci="0" mb="0" cb="0"/><line nr="390" mi="6" ci="0" mb="2" cb="0"/><line nr="391" mi="19" ci="0" mb="0" cb="0"/><line nr="393" mi="5" ci="0" mb="0" cb="0"/><line nr="397" mi="6" ci="0" mb="0" cb="0"/><line nr="402" mi="5" ci="0" mb="0" cb="0"/><line nr="406" mi="6" ci="0" mb="0" cb="0"/><line nr="407" mi="12" ci="0" mb="2" cb="0"/><line nr="408" mi="4" ci="0" mb="0" cb="0"/><line nr="409" mi="1" ci="0" mb="0" cb="0"/><line nr="411" mi="4" ci="0" mb="0" cb="0"/><line nr="412" mi="3" ci="0" mb="0" cb="0"/><line nr="413" mi="1" ci="0" mb="0" cb="0"/><line nr="416" mi="4" ci="0" mb="0" cb="0"/><line nr="417" mi="3" ci="0" mb="0" cb="0"/><line nr="419" mi="12" ci="0" mb="2" cb="0"/><line nr="420" mi="2" ci="0" mb="0" cb="0"/><line nr="421" mi="1" ci="0" mb="0" cb="0"/><line nr="422" mi="1" ci="0" mb="0" cb="0"/><line nr="427" mi="2" ci="0" mb="0" cb="0"/><line nr="433" mi="7" ci="0" mb="0" cb="0"/><line nr="434" mi="3" ci="0" mb="0" cb="0"/><line nr="436" mi="7" ci="0" mb="0" cb="0"/><line nr="437" mi="12" ci="0" mb="0" cb="0"/><line nr="438" mi="10" ci="0" mb="0" cb="0"/><line nr="439" mi="6" ci="0" mb="0" cb="0"/><line nr="444" mi="7" ci="0" mb="0" cb="0"/><line nr="445" mi="8" ci="0" mb="2" cb="0"/><line nr="446" mi="2" ci="0" mb="0" cb="0"/><line nr="447" mi="4" ci="0" mb="2" cb="0"/><line nr="448" mi="2" ci="0" mb="0" cb="0"/><line nr="450" mi="2" ci="0" mb="0" cb="0"/><line nr="457" mi="3" ci="0" mb="0" cb="0"/><line nr="462" mi="4" ci="0" mb="0" cb="0"/><line nr="463" mi="11" ci="0" mb="2" cb="0"/><line nr="464" mi="4" ci="0" mb="0" cb="0"/><line nr="465" mi="7" ci="0" mb="0" cb="0"/><line nr="466" mi="2" ci="0" mb="2" cb="0"/><line nr="467" mi="3" ci="0" mb="0" cb="0"/><line nr="468" mi="4" ci="0" mb="0" cb="0"/><line nr="470" mi="1" ci="0" mb="0" cb="0"/><line nr="472" mi="9" ci="0" mb="4" cb="0"/><line nr="473" mi="4" ci="0" mb="0" cb="0"/><line nr="474" mi="5" ci="0" mb="0" cb="0"/><line nr="475" mi="5" ci="0" mb="0" cb="0"/><line nr="476" mi="5" ci="0" mb="0" cb="0"/><line nr="477" mi="11" ci="0" mb="2" cb="0"/><line nr="478" mi="4" ci="0" mb="0" cb="0"/><line nr="480" mi="5" ci="0" mb="0" cb="0"/><line nr="481" mi="9" ci="0" mb="0" cb="0"/><line nr="482" mi="4" ci="0" mb="0" cb="0"/><line nr="483" mi="1" ci="0" mb="0" cb="0"/><line nr="486" mi="5" ci="0" mb="0" cb="0"/><line nr="487" mi="4" ci="0" mb="0" cb="0"/><line nr="488" mi="7" ci="0" mb="0" cb="0"/><line nr="490" mi="6" ci="0" mb="0" cb="0"/><line nr="492" mi="1" ci="0" mb="0" cb="0"/><line nr="496" mi="2" ci="0" mb="0" cb="0"/><line nr="501" mi="3" ci="0" mb="0" cb="0"/><line nr="502" mi="6" ci="0" mb="0" cb="0"/><line nr="503" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="921" covered="0"/><counter type="BRANCH" missed="68" covered="0"/><counter type="LINE" missed="196" covered="0"/><counter type="COMPLEXITY" missed="68" covered="0"/><counter type="METHOD" missed="34" covered="0"/><counter type="CLASS" missed="3" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="8509" covered="0"/><counter type="BRANCH" missed="836" covered="0"/><counter type="LINE" missed="1751" covered="0"/><counter type="COMPLEXITY" missed="701" covered="0"/><counter type="METHOD" missed="283" covered="0"/><counter type="CLASS" missed="25" covered="0"/></package><package name="org/apache/kylin/query/calcite"><class name="org/apache/kylin/query/calcite/KylinRelDataTypeSystem" sourcefilename="KylinRelDataTypeSystem.java"><method name="&lt;init&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deriveSumType" desc="(Lorg/apache/calcite/rel/type/RelDataTypeFactory;Lorg/apache/calcite/rel/type/RelDataType;)Lorg/apache/calcite/rel/type/RelDataType;" line="31"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="5" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMaxNumericPrecision" desc="()I" line="57"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="30" covered="5"/><counter type="BRANCH" missed="5" covered="0"/><counter type="LINE" missed="8" covered="2"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="KylinRelDataTypeSystem.java"><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="3" ci="0" mb="2" cb="0"/><line nr="32" mi="6" ci="0" mb="3" cb="0"/><line nr="36" mi="7" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="39" mi="7" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="30" covered="5"/><counter type="BRANCH" missed="5" covered="0"/><counter type="LINE" missed="8" covered="2"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="30" covered="5"/><counter type="BRANCH" missed="5" covered="0"/><counter type="LINE" missed="8" covered="2"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></package><package name="org/apache/kylin/query"><class name="org/apache/kylin/query/QueryConnection" sourcefilename="QueryConnection.java"><method name="&lt;init&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConnection" desc="(Ljava/lang/String;)Ljava/sql/Connection;" line="38"><counter type="INSTRUCTION" missed="3" covered="53"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="14"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="57"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="3" covered="15"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/kylin/query/QueryCli" sourcefilename="QueryCli.java"><method name="&lt;init&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V" line="47"><counter type="INSTRUCTION" missed="93" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="123" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="28" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="QueryConnection.java"><line nr="33" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="2"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="9" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="57"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="3" covered="15"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="QueryCli.java"><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="8" ci="0" mb="0" cb="0"/><line nr="39" mi="5" ci="0" mb="0" cb="0"/><line nr="42" mi="9" ci="0" mb="0" cb="0"/><line nr="43" mi="5" ci="0" mb="0" cb="0"/><line nr="47" mi="4" ci="0" mb="0" cb="0"/><line nr="48" mi="4" ci="0" mb="0" cb="0"/><line nr="49" mi="4" ci="0" mb="0" cb="0"/><line nr="51" mi="4" ci="0" mb="0" cb="0"/><line nr="52" mi="5" ci="0" mb="0" cb="0"/><line nr="53" mi="6" ci="0" mb="0" cb="0"/><line nr="54" mi="5" ci="0" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="3" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="4" ci="0" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="2" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="68" mi="9" ci="0" mb="2" cb="0"/><line nr="69" mi="20" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="123" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="28" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="129" covered="57"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="31" covered="15"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="1" covered="1"/></package><package name="org/apache/kylin/query/schema"><class name="org/apache/kylin/query/schema/OLAPSchema" sourcefilename="OLAPSchema.java"><method name="init" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Z)V" line="58"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTableMap" desc="()Ljava/util/Map;" line="72"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="buildTableMap" desc="()Ljava/util/Map;" line="76"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSchemaName" desc="()Ljava/lang/String;" line="94"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStorageUrl" desc="()Lorg/apache/kylin/common/StorageURL;" line="98"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasStarSchemaUrl" desc="()Z" line="102"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStarSchemaUrl" desc="()Ljava/lang/String;" line="106"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStarSchemaUser" desc="()Ljava/lang/String;" line="110"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStarSchemaPassword" desc="()Ljava/lang/String;" line="114"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetadataManager" desc="()Lorg/apache/kylin/metadata/model/DataModelManager;" line="118"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConfig" desc="()Lorg/apache/kylin/common/KylinConfig;" line="122"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProjectName" desc="()Ljava/lang/String;" line="126"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCubeManager" desc="()Lorg/apache/kylin/cube/CubeManager;" line="130"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProjectInstance" desc="()Lorg/apache/kylin/metadata/project/ProjectInstance;" line="134"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="98" covered="38"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="21" covered="12"/><counter type="COMPLEXITY" missed="17" covered="2"/><counter type="METHOD" missed="13" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/kylin/query/schema/OLAPTable$1" sourcefilename="OLAPTable.java"><method name="&lt;init&gt;" desc="(Lorg/apache/kylin/query/schema/OLAPTable;)V" line="229"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compare" desc="(Lorg/apache/kylin/metadata/model/ColumnDesc;Lorg/apache/kylin/metadata/model/ColumnDesc;)I" line="232"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/schema/OLAPTable$2" sourcefilename="OLAPTable.java"><method name="&lt;init&gt;" desc="(Lorg/apache/kylin/query/schema/OLAPTable;Lorg/apache/calcite/linq4j/QueryProvider;Lorg/apache/calcite/schema/SchemaPlus;Lorg/apache/calcite/schema/QueryableTable;Ljava/lang/String;)V" line="255"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enumerator" desc="()Lorg/apache/calcite/linq4j/Enumerator;" line="258"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/schema/OLAPSchemaFactory" sourcefilename="OLAPSchemaFactory.java"><method name="&lt;init&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Lorg/apache/calcite/schema/SchemaPlus;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/calcite/schema/Schema;" line="52"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exposeMore" desc="(Ljava/lang/String;)Z" line="60"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createTempOLAPJson" desc="(Ljava/lang/String;Lorg/apache/kylin/common/KylinConfig;)Ljava/io/File;" line="66"><counter type="INSTRUCTION" missed="19" covered="214"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="5" covered="43"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createOLAPSchemaFunctions" desc="(Ljava/util/Map;Ljava/lang/StringBuilder;)V" line="140"><counter type="INSTRUCTION" missed="0" covered="109"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="19" covered="354"/><counter type="BRANCH" missed="4" covered="16"/><counter type="LINE" missed="5" covered="72"/><counter type="COMPLEXITY" missed="4" covered="12"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/kylin/query/schema/OLAPTable" sourcefilename="OLAPTable.java"><method name="&lt;init&gt;" desc="(Lorg/apache/kylin/query/schema/OLAPSchema;Lorg/apache/kylin/metadata/model/TableDesc;Z)V" line="122"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSchema" desc="()Lorg/apache/kylin/query/schema/OLAPSchema;" line="130"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSourceTable" desc="()Lorg/apache/kylin/metadata/model/TableDesc;" line="134"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTableName" desc="()Ljava/lang/String;" line="138"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSourceColumns" desc="()Ljava/util/List;" line="142"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRowType" desc="(Lorg/apache/calcite/rel/type/RelDataTypeFactory;)Lorg/apache/calcite/rel/type/RelDataType;" line="150"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="deriveRowType" desc="(Lorg/apache/calcite/rel/type/RelDataTypeFactory;)Lorg/apache/calcite/rel/type/RelDataType;" line="160"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createSqlType" desc="(Lorg/apache/calcite/rel/type/RelDataTypeFactory;Lorg/apache/kylin/metadata/datatype/DataType;Z)Lorg/apache/calcite/rel/type/RelDataType;" line="170"><counter type="INSTRUCTION" missed="4" covered="109"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="1" covered="23"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="listSourceColumns" desc="()Ljava/util/List;" line="210"><counter type="INSTRUCTION" missed="75" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toRel" desc="(Lorg/apache/calcite/plan/RelOptTable$ToRelContext;Lorg/apache/calcite/plan/RelOptTable;)Lorg/apache/calcite/rel/RelNode;" line="240"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="identityList" desc="(I)[I" line="246"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asQueryable" desc="(Lorg/apache/calcite/linq4j/QueryProvider;Lorg/apache/calcite/schema/SchemaPlus;Ljava/lang/String;)Lorg/apache/calcite/linq4j/Queryable;" line="255"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStatistic" desc="()Lorg/apache/calcite/schema/Statistic;" line="266"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="272"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="executeOLAPQuery" desc="(Lorg/apache/calcite/DataContext;I)Lorg/apache/calcite/linq4j/Enumerable;" line="276"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="executeLookupTableQuery" desc="(Lorg/apache/calcite/DataContext;I)Lorg/apache/calcite/linq4j/Enumerable;" line="280"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="executeColumnDictionaryQuery" desc="(Lorg/apache/calcite/DataContext;I)Lorg/apache/calcite/linq4j/Enumerable;" line="284"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="executeHiveQuery" desc="(Lorg/apache/calcite/DataContext;I)Lorg/apache/calcite/linq4j/Enumerable;" line="288"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="69"><counter type="INSTRUCTION" missed="0" covered="174"/><counter type="LINE" missed="0" covered="37"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="256" covered="283"/><counter type="BRANCH" missed="14" covered="16"/><counter type="LINE" missed="55" covered="60"/><counter type="COMPLEXITY" missed="25" covered="9"/><counter type="METHOD" missed="17" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="OLAPSchema.java"><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="76" mi="4" ci="0" mb="0" cb="0"/><line nr="78" mi="9" ci="0" mb="0" cb="0"/><line nr="81" mi="10" ci="0" mb="2" cb="0"/><line nr="82" mi="6" ci="0" mb="2" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="84" mi="8" ci="0" mb="0" cb="0"/><line nr="85" mi="5" ci="0" mb="0" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="3" ci="0" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="11" ci="0" mb="4" cb="0"/><line nr="106" mi="3" ci="0" mb="0" cb="0"/><line nr="110" mi="3" ci="0" mb="0" cb="0"/><line nr="114" mi="3" ci="0" mb="0" cb="0"/><line nr="118" mi="4" ci="0" mb="0" cb="0"/><line nr="122" mi="3" ci="0" mb="0" cb="0"/><line nr="126" mi="3" ci="0" mb="0" cb="0"/><line nr="130" mi="4" ci="0" mb="0" cb="0"/><line nr="134" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="98" covered="38"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="21" covered="12"/><counter type="COMPLEXITY" missed="17" covered="2"/><counter type="METHOD" missed="13" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OLAPSchemaFactory.java"><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="8" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="11" mb="0" cb="2"/><line nr="78" mi="0" ci="6" mb="1" cb="1"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="6" mb="1" cb="1"/><line nr="84" mi="5" ci="0" mb="0" cb="0"/><line nr="85" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="13" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="11" mb="0" cb="2"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="13" mb="0" cb="0"/><line nr="104" mi="0" ci="13" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="13" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="5" mb="1" cb="1"/><line nr="112" mi="4" ci="0" mb="0" cb="0"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="5" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="2"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="5" mb="0" cb="0"/><line nr="127" mi="0" ci="10" mb="0" cb="0"/><line nr="128" mi="0" ci="5" mb="0" cb="0"/><line nr="131" mi="0" ci="2" mb="0" cb="0"/><line nr="133" mi="1" ci="0" mb="0" cb="0"/><line nr="134" mi="5" ci="0" mb="0" cb="0"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="1" cb="1"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="11" mb="0" cb="2"/><line nr="145" mi="0" ci="9" mb="0" cb="0"/><line nr="146" mi="0" ci="1" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="149" mi="0" ci="4" mb="0" cb="0"/><line nr="150" mi="0" ci="11" mb="0" cb="2"/><line nr="151" mi="0" ci="7" mb="0" cb="0"/><line nr="152" mi="0" ci="5" mb="0" cb="0"/><line nr="153" mi="0" ci="4" mb="0" cb="0"/><line nr="154" mi="0" ci="13" mb="0" cb="0"/><line nr="155" mi="0" ci="13" mb="0" cb="0"/><line nr="156" mi="0" ci="6" mb="0" cb="2"/><line nr="157" mi="0" ci="5" mb="0" cb="0"/><line nr="159" mi="0" ci="4" mb="0" cb="0"/><line nr="161" mi="0" ci="1" mb="0" cb="0"/><line nr="162" mi="0" ci="1" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="19" covered="354"/><counter type="BRANCH" missed="4" covered="16"/><counter type="LINE" missed="5" covered="72"/><counter type="COMPLEXITY" missed="4" covered="12"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OLAPTable.java"><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="101" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="0" cb="0"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="0" ci="1" mb="0" cb="0"/><line nr="122" mi="3" ci="0" mb="0" cb="0"/><line nr="123" mi="3" ci="0" mb="0" cb="0"/><line nr="124" mi="3" ci="0" mb="0" cb="0"/><line nr="125" mi="3" ci="0" mb="0" cb="0"/><line nr="126" mi="3" ci="0" mb="0" cb="0"/><line nr="127" mi="1" ci="0" mb="0" cb="0"/><line nr="130" mi="3" ci="0" mb="0" cb="0"/><line nr="134" mi="3" ci="0" mb="0" cb="0"/><line nr="138" mi="4" ci="0" mb="0" cb="0"/><line nr="142" mi="3" ci="0" mb="2" cb="0"/><line nr="143" mi="4" ci="0" mb="0" cb="0"/><line nr="145" mi="3" ci="0" mb="0" cb="0"/><line nr="150" mi="3" ci="0" mb="2" cb="0"/><line nr="152" mi="4" ci="0" mb="0" cb="0"/><line nr="153" mi="5" ci="0" mb="0" cb="0"/><line nr="155" mi="3" ci="0" mb="0" cb="0"/><line nr="160" mi="3" ci="0" mb="0" cb="0"/><line nr="161" mi="11" ci="0" mb="2" cb="0"/><line nr="162" mi="7" ci="0" mb="0" cb="0"/><line nr="163" mi="4" ci="0" mb="0" cb="0"/><line nr="164" mi="6" ci="0" mb="0" cb="0"/><line nr="165" mi="1" ci="0" mb="0" cb="0"/><line nr="166" mi="4" ci="0" mb="0" cb="0"/><line nr="170" mi="0" ci="6" mb="0" cb="0"/><line nr="171" mi="0" ci="2" mb="0" cb="2"/><line nr="172" mi="0" ci="11" mb="0" cb="2"/><line nr="173" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="6" mb="0" cb="2"/><line nr="175" mi="0" ci="5" mb="0" cb="0"/><line nr="176" mi="0" ci="1" mb="0" cb="0"/><line nr="178" mi="0" ci="1" mb="0" cb="0"/><line nr="181" mi="0" ci="2" mb="0" cb="2"/><line nr="182" mi="0" ci="12" mb="0" cb="0"/><line nr="184" mi="0" ci="3" mb="0" cb="0"/><line nr="185" mi="0" ci="3" mb="0" cb="0"/><line nr="188" mi="0" ci="3" mb="0" cb="2"/><line nr="189" mi="0" ci="7" mb="0" cb="0"/><line nr="190" mi="0" ci="9" mb="0" cb="0"/><line nr="192" mi="0" ci="5" mb="1" cb="3"/><line nr="193" mi="0" ci="7" mb="0" cb="0"/><line nr="194" mi="0" ci="2" mb="1" cb="1"/><line nr="195" mi="0" ci="6" mb="0" cb="0"/><line nr="197" mi="4" ci="0" mb="0" cb="0"/><line nr="200" mi="0" ci="2" mb="0" cb="2"/><line nr="201" mi="0" ci="6" mb="0" cb="0"/><line nr="203" mi="0" ci="5" mb="0" cb="0"/><line nr="206" mi="0" ci="2" mb="0" cb="0"/><line nr="210" mi="5" ci="0" mb="0" cb="0"/><line nr="212" mi="10" ci="0" mb="0" cb="0"/><line nr="214" mi="2" ci="0" mb="0" cb="0"/><line nr="215" mi="8" ci="0" mb="0" cb="0"/><line nr="216" mi="1" ci="0" mb="0" cb="0"/><line nr="217" mi="4" ci="0" mb="0" cb="0"/><line nr="218" mi="10" ci="0" mb="2" cb="0"/><line nr="220" mi="3" ci="0" mb="0" cb="0"/><line nr="221" mi="3" ci="0" mb="0" cb="0"/><line nr="222" mi="4" ci="0" mb="2" cb="0"/><line nr="223" mi="4" ci="0" mb="0" cb="0"/><line nr="224" mi="5" ci="0" mb="0" cb="0"/><line nr="225" mi="4" ci="0" mb="0" cb="0"/><line nr="227" mi="1" ci="0" mb="0" cb="0"/><line nr="229" mi="12" ci="0" mb="0" cb="0"/><line nr="232" mi="6" ci="0" mb="0" cb="0"/><line nr="235" mi="5" ci="0" mb="0" cb="0"/><line nr="240" mi="4" ci="0" mb="0" cb="0"/><line nr="241" mi="4" ci="0" mb="0" cb="0"/><line nr="242" mi="9" ci="0" mb="0" cb="0"/><line nr="246" mi="3" ci="0" mb="0" cb="0"/><line nr="247" mi="7" ci="0" mb="2" cb="0"/><line nr="248" mi="4" ci="0" mb="0" cb="0"/><line nr="250" mi="2" ci="0" mb="0" cb="0"/><line nr="255" mi="19" ci="0" mb="0" cb="0"/><line nr="258" mi="6" ci="0" mb="0" cb="0"/><line nr="259" mi="3" ci="0" mb="0" cb="0"/><line nr="266" mi="4" ci="0" mb="0" cb="0"/><line nr="267" mi="4" ci="0" mb="0" cb="0"/><line nr="272" mi="12" ci="0" mb="0" cb="0"/><line nr="276" mi="7" ci="0" mb="0" cb="0"/><line nr="280" mi="7" ci="0" mb="0" cb="0"/><line nr="284" mi="7" ci="0" mb="0" cb="0"/><line nr="288" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="287" covered="283"/><counter type="BRANCH" missed="14" covered="16"/><counter type="LINE" missed="58" covered="60"/><counter type="COMPLEXITY" missed="29" covered="9"/><counter type="METHOD" missed="21" covered="2"/><counter type="CLASS" missed="2" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="404" covered="675"/><counter type="BRANCH" missed="26" covered="32"/><counter type="LINE" missed="84" covered="144"/><counter type="COMPLEXITY" missed="50" covered="23"/><counter type="METHOD" missed="34" covered="10"/><counter type="CLASS" missed="2" covered="3"/></package><package name="org/apache/kylin/query/exec"><class name="org/apache/kylin/query/exec/SparderMethod" sourcefilename="SparderMethod.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)V" line="46"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lookup" desc="(Ljava/lang/reflect/Method;)Lorg/apache/kylin/query/exec/SparderMethod;" line="51"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="84" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="100" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/exec/SparkExec" sourcefilename="SparkExec.java"><method name="&lt;init&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="collectToEnumerable" desc="(Lorg/apache/calcite/DataContext;)Lorg/apache/calcite/linq4j/Enumerable;" line="34"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="collectToScalarEnumerable" desc="(Lorg/apache/calcite/DataContext;)Lorg/apache/calcite/linq4j/Enumerable;" line="55"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asyncResult" desc="(Lorg/apache/calcite/DataContext;)Lorg/apache/calcite/linq4j/Enumerable;" line="77"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="110" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="28" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/exec/QueryEngineFactory" sourcefilename="QueryEngineFactory.java"><method name="&lt;init&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeSCALA" desc="(Lorg/apache/calcite/DataContext;Lorg/apache/calcite/rel/RelNode;Lorg/apache/calcite/rel/type/RelDataType;)Lorg/apache/calcite/linq4j/Enumerable;" line="34"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compute" desc="(Lorg/apache/calcite/DataContext;Lorg/apache/calcite/rel/RelNode;Lorg/apache/calcite/rel/type/RelDataType;)Lorg/apache/calcite/linq4j/Enumerable;" line="45"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeAsync" desc="(Lorg/apache/calcite/DataContext;Lorg/apache/calcite/rel/RelNode;Lorg/apache/calcite/rel/type/RelDataType;)Lorg/apache/calcite/linq4j/Enumerable;" line="54"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="SparderMethod.java"><line nr="31" mi="15" ci="0" mb="0" cb="0"/><line nr="32" mi="14" ci="0" mb="0" cb="0"/><line nr="33" mi="14" ci="0" mb="0" cb="0"/><line nr="34" mi="14" ci="0" mb="0" cb="0"/><line nr="36" mi="4" ci="0" mb="0" cb="0"/><line nr="39" mi="16" ci="0" mb="2" cb="0"/><line nr="40" mi="6" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="4" ci="0" mb="0" cb="0"/><line nr="47" mi="6" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="100" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="SparkExec.java"><line nr="31" mi="3" ci="0" mb="0" cb="0"/><line nr="34" mi="2" ci="0" mb="2" cb="0"/><line nr="35" mi="2" ci="0" mb="0" cb="0"/><line nr="38" mi="4" ci="0" mb="0" cb="0"/><line nr="39" mi="4" ci="0" mb="0" cb="0"/><line nr="41" mi="5" ci="0" mb="0" cb="0"/><line nr="43" mi="7" ci="0" mb="4" cb="0"/><line nr="44" mi="5" ci="0" mb="0" cb="0"/><line nr="45" mi="8" ci="0" mb="0" cb="0"/><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="50" mi="5" ci="0" mb="0" cb="0"/><line nr="55" mi="2" ci="0" mb="2" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="4" ci="0" mb="0" cb="0"/><line nr="62" mi="5" ci="0" mb="0" cb="0"/><line nr="64" mi="7" ci="0" mb="4" cb="0"/><line nr="65" mi="5" ci="0" mb="0" cb="0"/><line nr="66" mi="8" ci="0" mb="0" cb="0"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="2" cb="0"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="4" ci="0" mb="0" cb="0"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><line nr="82" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="110" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="28" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="QueryEngineFactory.java"><line nr="28" mi="3" ci="0" mb="0" cb="0"/><line nr="29" mi="4" ci="0" mb="0" cb="0"/><line nr="34" mi="4" ci="0" mb="0" cb="0"/><line nr="35" mi="5" ci="0" mb="0" cb="0"/><line nr="36" mi="6" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="45" mi="4" ci="0" mb="0" cb="0"/><line nr="46" mi="5" ci="0" mb="0" cb="0"/><line nr="47" mi="6" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="258" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="53" covered="0"/><counter type="COMPLEXITY" missed="20" covered="0"/><counter type="METHOD" missed="12" covered="0"/><counter type="CLASS" missed="3" covered="0"/></package><package name="org/apache/kylin/query/security"><class name="org/apache/kylin/query/security/TableLevelACL" sourcefilename="TableLevelACL.java"><method name="&lt;init&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tableFilter" desc="(Ljava/util/List;Ljava/util/List;)V" line="32"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="columnFilter" desc="(Ljava/util/List;Ljava/util/List;)V" line="42"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllColWithTblAndSchema" desc="(Ljava/util/List;)Ljava/util/List;" line="53"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTableWithSchema" desc="(Ljava/util/List;)Ljava/util/Set;" line="65"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mockTableBlackList" desc="()Ljava/util/List;" line="76"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="151" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="32" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/security/QueryInterceptor" sourcefilename="QueryInterceptor.java"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="intercept" desc="(Ljava/util/List;)V" line="30"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="intercept" desc="(Ljava/util/List;Ljava/util/Collection;)V" line="38"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProject" desc="(Ljava/util/List;)Ljava/lang/String;" line="59"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUser" desc="(Ljava/util/List;)Ljava/lang/String;" line="63"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="71" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/security/AccessDeniedException" sourcefilename="AccessDeniedException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="23"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/security/QueryInterceptorUtil" sourcefilename="QueryInterceptorUtil.java"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getQueryInterceptors" desc="()Ljava/util/List;" line="42"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/security/QueryACLTestUtil" sourcefilename="QueryACLTestUtil.java"><method name="&lt;init&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setUser" desc="(Ljava/lang/String;)V" line="32"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mockQuery" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="38"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="TableLevelACL.java"><line nr="30" mi="3" ci="0" mb="0" cb="0"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="10" ci="0" mb="2" cb="0"/><line nr="34" mi="6" ci="0" mb="2" cb="0"/><line nr="36" mi="12" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="10" ci="0" mb="2" cb="0"/><line nr="44" mi="6" ci="0" mb="2" cb="0"/><line nr="46" mi="12" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="4" ci="0" mb="0" cb="0"/><line nr="54" mi="10" ci="0" mb="2" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="10" ci="0" mb="2" cb="0"/><line nr="57" mi="5" ci="0" mb="0" cb="0"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="4" ci="0" mb="0" cb="0"/><line nr="66" mi="10" ci="0" mb="2" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="10" ci="0" mb="2" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="70" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="4" ci="0" mb="0" cb="0"/><line nr="77" mi="4" ci="0" mb="0" cb="0"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="151" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="32" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="QueryACLTestUtil.java"><line nr="30" mi="3" ci="0" mb="0" cb="0"/><line nr="32" mi="4" ci="0" mb="0" cb="0"/><line nr="33" mi="5" ci="0" mb="0" cb="0"/><line nr="34" mi="2" ci="0" mb="0" cb="0"/><line nr="35" mi="1" ci="0" mb="0" cb="0"/><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="39" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="4" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="2" ci="0" mb="2" cb="0"/><line nr="48" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="2" ci="0" mb="2" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AccessDeniedException.java"><line nr="23" mi="12" ci="0" mb="0" cb="0"/><line nr="24" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="QueryInterceptorUtil.java"><line nr="27" mi="3" ci="0" mb="0" cb="0"/><line nr="28" mi="4" ci="0" mb="0" cb="0"/><line nr="30" mi="3" ci="0" mb="0" cb="0"/><line nr="31" mi="16" ci="0" mb="2" cb="0"/><line nr="33" mi="4" ci="0" mb="0" cb="0"/><line nr="34" mi="4" ci="0" mb="0" cb="0"/><line nr="35" mi="1" ci="0" mb="0" cb="0"/><line nr="36" mi="6" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="QueryInterceptor.java"><line nr="27" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="3" ci="0" mb="2" cb="0"/><line nr="31" mi="1" ci="0" mb="0" cb="0"/><line nr="33" mi="4" ci="0" mb="0" cb="0"/><line nr="34" mi="4" ci="0" mb="0" cb="0"/><line nr="35" mi="1" ci="0" mb="0" cb="0"/><line nr="38" mi="3" ci="0" mb="2" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="4" ci="0" mb="0" cb="0"/><line nr="43" mi="10" ci="0" mb="2" cb="0"/><line nr="44" mi="6" ci="0" mb="2" cb="0"/><line nr="45" mi="15" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="59" mi="7" ci="0" mb="0" cb="0"/><line nr="63" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="71" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="321" covered="0"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="78" covered="0"/><counter type="COMPLEXITY" missed="33" covered="0"/><counter type="METHOD" missed="18" covered="0"/><counter type="CLASS" missed="5" covered="0"/></package><package name="org/apache/kylin/query/util"><class name="org/apache/kylin/query/util/QueryInfoCollector" sourcefilename="QueryInfoCollector.java"><method name="current" desc="()Lorg/apache/kylin/query/util/QueryInfoCollector;" line="33"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reset" desc="()V" line="37"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCubeNames" desc="()Ljava/util/List;" line="45"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setCubeNames" desc="(Ljava/util/List;)V" line="49"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCubeNameString" desc="()Ljava/lang/String;" line="53"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/util/ParseException" sourcefilename="ParseException.java"><method name="&lt;init&gt;" desc="(Lorg/apache/kylin/query/util/Token;[[I[Ljava/lang/String;)V" line="34"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="56"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="initialise" desc="(Lorg/apache/kylin/query/util/Token;[[I[Ljava/lang/String;)Ljava/lang/String;" line="91"><counter type="INSTRUCTION" missed="38" covered="191"/><counter type="BRANCH" missed="5" covered="11"/><counter type="LINE" missed="4" covered="26"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add_escapes" desc="(Ljava/lang/String;)Ljava/lang/String;" line="142"><counter type="INSTRUCTION" missed="80" covered="24"/><counter type="BRANCH" missed="13" covered="3"/><counter type="LINE" missed="20" covered="6"/><counter type="COMPLEXITY" missed="11" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="135" covered="236"/><counter type="BRANCH" missed="18" covered="14"/><counter type="LINE" missed="28" covered="38"/><counter type="COMPLEXITY" missed="18" covered="7"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/kylin/query/util/PushDownUtil$FromTablesVisitor" sourcefilename="PushDownUtil.java"><method name="&lt;init&gt;" desc="()V" line="117"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTablesWithoutSchema" desc="()Ljava/util/List;" line="123"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lorg/apache/calcite/sql/SqlNodeList;)Lorg/apache/calcite/sql/SqlNode;" line="139"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lorg/apache/calcite/sql/SqlLiteral;)Lorg/apache/calcite/sql/SqlNode;" line="151"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lorg/apache/calcite/sql/SqlCall;)Lorg/apache/calcite/sql/SqlNode;" line="156"><counter type="INSTRUCTION" missed="0" covered="99"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lorg/apache/calcite/sql/SqlIdentifier;)Lorg/apache/calcite/sql/SqlNode;" line="191"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lorg/apache/calcite/sql/SqlDataTypeSpec;)Lorg/apache/calcite/sql/SqlNode;" line="199"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lorg/apache/calcite/sql/SqlDynamicParam;)Lorg/apache/calcite/sql/SqlNode;" line="204"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lorg/apache/calcite/sql/SqlIntervalQualifier;)Lorg/apache/calcite/sql/SqlNode;" line="209"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="201"/><counter type="BRANCH" missed="1" covered="23"/><counter type="LINE" missed="4" covered="50"/><counter type="COMPLEXITY" missed="5" covered="16"/><counter type="METHOD" missed="4" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/kylin/query/util/TempStatementUtil$ParserState" sourcefilename="TempStatementUtil.java"><method name="&lt;clinit&gt;" desc="()V" line="71"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/kylin/query/util/CommentParserTokenManager" sourcefilename="CommentParserTokenManager.java"><method name="setDebugStream" desc="(Ljava/io/PrintStream;)V" line="17"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jjStopStringLiteralDfa_0" desc="(IJ)I" line="20"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jjStartNfa_0" desc="(IJ)I" line="39"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jjStopAtPos" desc="(II)I" line="43"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjMoveStringLiteralDfa0_0" desc="()I" line="49"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjMoveStringLiteralDfa1_0" desc="(J)I" line="63"><counter type="INSTRUCTION" missed="13" covered="20"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjStartNfaWithStates_0" desc="(III)I" line="81"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjMoveNfa_0" desc="(II)I" line="95"><counter type="INSTRUCTION" missed="302" covered="329"/><counter type="BRANCH" missed="87" covered="65"/><counter type="LINE" missed="68" covered="86"/><counter type="COMPLEXITY" missed="59" covered="30"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjMoveStringLiteralDfa0_1" desc="()I" line="340"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjMoveStringLiteralDfa1_1" desc="(J)I" line="350"><counter type="INSTRUCTION" missed="5" covered="22"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjCanMove_0" desc="(IIIJJ)Z" line="370"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/kylin/query/util/SimpleCharStream;)V" line="15"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/kylin/query/util/SimpleCharStream;I)V" line="417"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ReInit" desc="(Lorg/apache/kylin/query/util/SimpleCharStream;)V" line="424"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ReInitRounds" desc="()V" line="432"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ReInit" desc="(Lorg/apache/kylin/query/util/SimpleCharStream;I)V" line="440"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="SwitchTo" desc="(I)V" line="447"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jjFillToken" desc="()Lorg/apache/kylin/query/util/Token;" line="461"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNextToken" desc="()Lorg/apache/kylin/query/util/Token;" line="488"><counter type="INSTRUCTION" missed="87" covered="141"/><counter type="BRANCH" missed="15" covered="16"/><counter type="LINE" missed="20" covered="32"/><counter type="COMPLEXITY" missed="10" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjCheckNAdd" desc="(I)V" line="576"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjAddStates" desc="(II)V" line="585"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jjCheckNAddTwoStates" desc="(II)V" line="590"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jjCheckNAddStates" desc="(II)V" line="597"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="87"><counter type="INSTRUCTION" missed="0" covered="192"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="574" covered="877"/><counter type="BRANCH" missed="128" covered="97"/><counter type="LINE" missed="137" covered="181"/><counter type="COMPLEXITY" missed="95" covered="55"/><counter type="METHOD" missed="11" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/kylin/query/util/CommentParserConstants" sourcefilename="CommentParserConstants.java"><method name="&lt;clinit&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/kylin/query/util/CommentParser" sourcefilename="CommentParser.java"><method name="main" desc="([Ljava/lang/String;)V" line="16"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="27"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Input" desc="()Ljava/lang/String;" line="33"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Expression" desc="()Ljava/lang/String;" line="51"><counter type="INSTRUCTION" missed="25" covered="36"/><counter type="BRANCH" missed="4" covered="5"/><counter type="LINE" missed="6" covered="11"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="RemainToken" desc="()Ljava/lang/String;" line="79"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="QuotedString" desc="()Ljava/lang/String;" line="87"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="DoubleQuoteString" desc="()Ljava/lang/String;" line="95"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="Any" desc="()Ljava/lang/String;" line="102"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_1" desc="(I)Z" line="109"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_6" desc="()Z" line="116"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_5" desc="()Z" line="121"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_4" desc="()Z" line="126"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_7" desc="()Z" line="131"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_10" desc="()Z" line="136"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_3" desc="()Z" line="141"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_1" desc="()Z" line="146"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_2" desc="()Z" line="152"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_8" desc="()Z" line="167"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_9" desc="()Z" line="172"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_la1_init_0" desc="()V" line="193"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;)V" line="201"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;Ljava/lang/String;)V" line="187"><counter type="INSTRUCTION" missed="97" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ReInit" desc="(Ljava/io/InputStream;)V" line="216"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ReInit" desc="(Ljava/io/InputStream;Ljava/lang/String;)V" line="220"><counter type="INSTRUCTION" missed="59" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/Reader;)V" line="187"><counter type="INSTRUCTION" missed="0" covered="89"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ReInit" desc="(Ljava/io/Reader;)V" line="242"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/kylin/query/util/CommentParserTokenManager;)V" line="187"><counter type="INSTRUCTION" missed="77" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ReInit" desc="(Lorg/apache/kylin/query/util/CommentParserTokenManager;)V" line="263"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_consume_token" desc="(I)Lorg/apache/kylin/query/util/Token;" line="273"><counter type="INSTRUCTION" missed="40" covered="47"/><counter type="BRANCH" missed="8" covered="4"/><counter type="LINE" missed="7" covered="9"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_scan_token" desc="(I)Z" line="298"><counter type="INSTRUCTION" missed="8" covered="79"/><counter type="BRANCH" missed="5" covered="13"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNextToken" desc="()Lorg/apache/kylin/query/util/Token;" line="321"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getToken" desc="(I)Lorg/apache/kylin/query/util/Token;" line="330"><counter type="INSTRUCTION" missed="16" covered="10"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_ntk" desc="()I" line="339"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_add_error_token" desc="(II)V" line="352"><counter type="INSTRUCTION" missed="11" covered="92"/><counter type="BRANCH" missed="5" covered="13"/><counter type="LINE" missed="3" covered="15"/><counter type="COMPLEXITY" missed="5" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generateParseException" desc="()Lorg/apache/kylin/query/util/ParseException;" line="378"><counter type="INSTRUCTION" missed="19" covered="96"/><counter type="BRANCH" missed="6" covered="10"/><counter type="LINE" missed="3" covered="19"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enable_tracing" desc="()V" line="412"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="disable_tracing" desc="()V" line="416"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_rescan_token" desc="()V" line="419"><counter type="INSTRUCTION" missed="1" covered="46"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_save" desc="(II)V" line="438"><counter type="INSTRUCTION" missed="15" covered="27"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="568" covered="761"/><counter type="BRANCH" missed="62" covered="85"/><counter type="LINE" missed="89" covered="156"/><counter type="COMPLEXITY" missed="55" covered="60"/><counter type="METHOD" missed="12" covered="28"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/kylin/query/util/PushDownUtil" sourcefilename="PushDownUtil.java"><method name="&lt;init&gt;" desc="()V" line="55"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tryPushDownSelectQuery" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/sql/SQLException;Z)Lorg/apache/kylin/common/util/Pair;" line="61"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tryPushDownNonSelectQuery" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Lorg/apache/kylin/common/util/Pair;" line="67"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="schemaCompletion" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="72"><counter type="INSTRUCTION" missed="4" covered="100"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="2" covered="17"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="53"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="37" covered="104"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="8" covered="18"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/kylin/query/util/DefaultQueryTransformer" sourcefilename="DefaultQueryTransformer.java"><method name="&lt;init&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transform" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="60"><counter type="INSTRUCTION" missed="99" covered="182"/><counter type="BRANCH" missed="7" covered="13"/><counter type="LINE" missed="5" covered="35"/><counter type="COMPLEXITY" missed="6" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="99" covered="226"/><counter type="BRANCH" missed="7" covered="13"/><counter type="LINE" missed="5" covered="47"/><counter type="COMPLEXITY" missed="6" covered="7"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/kylin/query/util/CommentParser$JJCalls" sourcefilename="CommentParser.java"><method name="&lt;init&gt;" desc="()V" line="446"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/kylin/query/util/KeywordDefaultDirtyHack" sourcefilename="KeywordDefaultDirtyHack.java"><method name="&lt;init&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transform" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="27"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/kylin/query/util/SimpleCharStream" sourcefilename="SimpleCharStream.java"><method name="setTabSize" desc="(I)V" line="35"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTabSize" desc="(I)I" line="36"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ExpandBuff" desc="(Z)V" line="41"><counter type="INSTRUCTION" missed="192" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="28" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="FillBuff" desc="()V" line="90"><counter type="INSTRUCTION" missed="59" covered="55"/><counter type="BRANCH" missed="11" covered="5"/><counter type="LINE" missed="12" covered="12"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="BeginToken" desc="()C" line="135"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="UpdateLineColumn" desc="(C)V" line="144"><counter type="INSTRUCTION" missed="0" covered="89"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readChar" desc="()C" line="185"><counter type="INSTRUCTION" missed="3" covered="48"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getColumn" desc="()I" line="211"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLine" desc="()I" line="221"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEndColumn" desc="()I" line="226"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEndLine" desc="()I" line="231"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBeginColumn" desc="()I" line="236"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBeginLine" desc="()I" line="241"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="backup" desc="(I)V" line="247"><counter type="INSTRUCTION" missed="7" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/Reader;III)V" line="18"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/Reader;II)V" line="270"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/Reader;)V" line="276"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ReInit" desc="(Ljava/io/Reader;III)V" line="283"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ReInit" desc="(Ljava/io/Reader;II)V" line="303"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ReInit" desc="(Ljava/io/Reader;)V" line="309"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;Ljava/lang/String;III)V" line="315"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;III)V" line="322"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;Ljava/lang/String;II)V" line="329"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;II)V" line="336"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;Ljava/lang/String;)V" line="342"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;)V" line="348"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ReInit" desc="(Ljava/io/InputStream;Ljava/lang/String;III)V" line="355"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ReInit" desc="(Ljava/io/InputStream;III)V" line="362"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ReInit" desc="(Ljava/io/InputStream;Ljava/lang/String;)V" line="368"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ReInit" desc="(Ljava/io/InputStream;)V" line="374"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ReInit" desc="(Ljava/io/InputStream;Ljava/lang/String;II)V" line="380"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ReInit" desc="(Ljava/io/InputStream;II)V" line="386"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="GetImage" desc="()Ljava/lang/String;" line="391"><counter type="INSTRUCTION" missed="29" covered="20"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="GetSuffix" desc="(I)[C" line="401"><counter type="INSTRUCTION" missed="59" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="Done" desc="()V" line="418"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="adjustBeginLineColumn" desc="(II)V" line="428"><counter type="INSTRUCTION" missed="159" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="730" covered="326"/><counter type="BRANCH" missed="38" covered="22"/><counter type="LINE" missed="121" covered="73"/><counter type="COMPLEXITY" missed="45" covered="22"/><counter type="METHOD" missed="24" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/kylin/query/util/QueryUtil" sourcefilename="QueryUtil.java"><method name="&lt;init&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="appendLimitOffsetToSql" desc="(Ljava/lang/String;II)Ljava/lang/String;" line="49"><counter type="INSTRUCTION" missed="0" covered="93"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="massageSql" desc="(Ljava/lang/String;Ljava/lang/String;IILjava/lang/String;)Ljava/lang/String;" line="75"><counter type="INSTRUCTION" missed="9" covered="122"/><counter type="BRANCH" missed="6" covered="18"/><counter type="LINE" missed="1" covered="29"/><counter type="COMPLEXITY" missed="6" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="massageSql" desc="(Ljava/lang/String;Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="125"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeCatalog" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="138"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initQueryTransformers" desc="()V" line="145"><counter type="INSTRUCTION" missed="7" covered="33"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="makeErrorMsgUserFriendly" desc="(Ljava/lang/Throwable;)Ljava/lang/String;" line="161"><counter type="INSTRUCTION" missed="29" covered="37"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="8" covered="9"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="makeErrorMsgUserFriendly" desc="(Ljava/lang/String;)Ljava/lang/String;" line="193"><counter type="INSTRUCTION" missed="39" covered="4"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="8" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSelectStatement" desc="(Ljava/lang/String;)Z" line="213"><counter type="INSTRUCTION" missed="4" covered="30"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeCommentInSql" desc="(Ljava/lang/String;)Ljava/lang/String;" line="225"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="110" covered="352"/><counter type="BRANCH" missed="20" covered="48"/><counter type="LINE" missed="25" covered="75"/><counter type="COMPLEXITY" missed="20" covered="25"/><counter type="METHOD" missed="2" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/kylin/query/util/PushDownExecutor" sourcefilename="PushDownExecutor.java"><method name="&lt;init&gt;" desc="()V" line="54"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="pushDownQuery" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/sql/SQLException;ZZ)Lorg/apache/kylin/common/util/Pair;" line="63"><counter type="INSTRUCTION" missed="71" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isExpectedCause" desc="(Ljava/sql/SQLException;)Z" line="90"><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="queryBySingleRunner" desc="(Lorg/apache/kylin/source/adhocquery/IPushDownRunner;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/sql/SQLException;ZZ)Lorg/apache/kylin/common/util/Pair;" line="127"><counter type="INSTRUCTION" missed="68" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="queryByMultiJdbcRunners" desc="(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/sql/SQLException;ZZ)Lorg/apache/kylin/common/util/Pair;" line="162"><counter type="INSTRUCTION" missed="59" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="53"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="266" covered="0"/><counter type="BRANCH" missed="50" covered="0"/><counter type="LINE" missed="66" covered="0"/><counter type="COMPLEXITY" missed="31" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/util/Token" sourcefilename="Token.java"><method name="getValue" desc="()Ljava/lang/Object;" line="72"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="78"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="85"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ILjava/lang/String;)V" line="92"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="102"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newToken" desc="(ILjava/lang/String;)Lorg/apache/kylin/query/util/Token;" line="119"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newToken" desc="(I)Lorg/apache/kylin/query/util/Token;" line="127"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="20"/><counter type="LINE" missed="5" covered="7"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/kylin/query/util/TempStatementUtil" sourcefilename="TempStatementUtil.java"><method name="&lt;init&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleTempStatement" desc="(Ljava/lang/String;Lorg/apache/kylin/common/KylinConfig;)Lorg/apache/kylin/common/util/Pair;" line="38"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="translateCreateToWith" desc="(Ljava/lang/String;Lorg/apache/kylin/common/KylinConfig;)V" line="61"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="translateCreateToWithInternal" desc="(Ljava/lang/String;)Lorg/apache/kylin/common/util/Pair;" line="76"><counter type="INSTRUCTION" missed="38" covered="150"/><counter type="BRANCH" missed="7" covered="16"/><counter type="LINE" missed="3" covered="33"/><counter type="COMPLEXITY" missed="7" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCreateTable" desc="(Ljava/lang/String;)Z" line="137"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDropTable" desc="(Ljava/lang/String;)Z" line="141"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isWith" desc="(Ljava/lang/String;)Z" line="145"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="appendWith" desc="(Ljava/lang/String;Lorg/apache/kylin/common/KylinConfig;)Ljava/lang/String;" line="149"><counter type="INSTRUCTION" missed="77" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="219" covered="150"/><counter type="BRANCH" missed="29" covered="16"/><counter type="LINE" missed="40" covered="33"/><counter type="COMPLEXITY" missed="25" covered="7"/><counter type="METHOD" missed="7" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/kylin/query/util/RexUtil" sourcefilename="RexUtil.java"><method name="&lt;init&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCompareResultType" desc="(Lorg/apache/calcite/rex/RexCall;)Lorg/apache/kylin/metadata/filter/CompareTupleFilter$CompareResultType;" line="36"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isConstant" desc="(Lorg/apache/calcite/rex/RexNode;)Z" line="50"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="71" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/util/TokenMgrError" sourcefilename="TokenMgrError.java"><method name="addEscapes" desc="(Ljava/lang/String;)Ljava/lang/String;" line="51"><counter type="INSTRUCTION" missed="104" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="LexicalError" desc="(ZIIILjava/lang/String;C)Ljava/lang/String;" line="108"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMessage" desc="()Ljava/lang/String;" line="125"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="133"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="138"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ZIIILjava/lang/String;CI)V" line="144"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="173" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="37" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/kylin/query/util/PushDownUtil$1" sourcefilename="PushDownUtil.java"><method name="&lt;init&gt;" desc="()V" line="93"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Lorg/apache/kylin/common/util/Pair;Lorg/apache/kylin/common/util/Pair;)I" line="96"><counter type="INSTRUCTION" missed="10" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="PushDownExecutor.java"><line nr="53" mi="4" ci="0" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="4" ci="0" mb="2" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="2" cb="0"/><line nr="68" mi="4" ci="0" mb="0" cb="0"/><line nr="69" mi="3" ci="0" mb="2" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="6" ci="0" mb="2" cb="0"/><line nr="75" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="4" ci="0" mb="0" cb="0"/><line nr="80" mi="8" ci="0" mb="4" cb="0"/><line nr="81" mi="6" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="0" cb="0"/><line nr="83" mi="10" ci="0" mb="0" cb="0"/><line nr="85" mi="10" ci="0" mb="0" cb="0"/><line nr="90" mi="6" ci="0" mb="2" cb="0"/><line nr="91" mi="3" ci="0" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="0" cb="0"/><line nr="97" mi="2" ci="0" mb="2" cb="0"/><line nr="98" mi="13" ci="0" mb="6" cb="0"/><line nr="101" mi="3" ci="0" mb="2" cb="0"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="103" mi="3" ci="0" mb="2" cb="0"/><line nr="104" mi="2" ci="0" mb="0" cb="0"/><line nr="106" mi="3" ci="0" mb="2" cb="0"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="3" ci="0" mb="2" cb="0"/><line nr="111" mi="2" ci="0" mb="0" cb="0"/><line nr="114" mi="3" ci="0" mb="2" cb="0"/><line nr="115" mi="4" ci="0" mb="0" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="127" mi="4" ci="0" mb="0" cb="0"/><line nr="131" mi="6" ci="0" mb="4" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="134" mi="4" ci="0" mb="0" cb="0"/><line nr="135" mi="1" ci="0" mb="0" cb="0"/><line nr="137" mi="5" ci="0" mb="0" cb="0"/><line nr="138" mi="1" ci="0" mb="0" cb="0"/><line nr="139" mi="4" ci="0" mb="2" cb="0"/><line nr="140" mi="4" ci="0" mb="0" cb="0"/><line nr="141" mi="2" ci="0" mb="0" cb="0"/><line nr="145" mi="9" ci="0" mb="0" cb="0"/><line nr="147" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="2" ci="0" mb="0" cb="0"/><line nr="150" mi="2" ci="0" mb="2" cb="0"/><line nr="151" mi="5" ci="0" mb="0" cb="0"/><line nr="153" mi="8" ci="0" mb="6" cb="0"/><line nr="154" mi="3" ci="0" mb="0" cb="0"/><line nr="156" mi="4" ci="0" mb="0" cb="0"/><line nr="162" mi="8" ci="0" mb="2" cb="0"/><line nr="163" mi="5" ci="0" mb="0" cb="0"/><line nr="164" mi="4" ci="0" mb="0" cb="0"/><line nr="165" mi="5" ci="0" mb="0" cb="0"/><line nr="168" mi="10" ci="0" mb="0" cb="0"/><line nr="170" mi="3" ci="0" mb="2" cb="0"/><line nr="171" mi="2" ci="0" mb="0" cb="0"/><line nr="173" mi="1" ci="0" mb="0" cb="0"/><line nr="174" mi="12" ci="0" mb="0" cb="0"/><line nr="175" mi="3" ci="0" mb="0" cb="0"/><line nr="176" mi="1" ci="0" mb="0" cb="0"/><line nr="179" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="266" covered="0"/><counter type="BRANCH" missed="50" covered="0"/><counter type="LINE" missed="66" covered="0"/><counter type="COMPLEXITY" missed="31" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="TokenMgrError.java"><line nr="51" mi="4" ci="0" mb="0" cb="0"/><line nr="53" mi="8" ci="0" mb="2" cb="0"/><line nr="54" mi="4" ci="0" mb="10" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="4" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="68" mi="4" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="4" ci="0" mb="0" cb="0"/><line nr="72" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="4" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="4" ci="0" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="10" ci="0" mb="4" cb="0"/><line nr="84" mi="11" ci="0" mb="0" cb="0"/><line nr="85" mi="18" ci="0" mb="0" cb="0"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><line nr="87" mi="4" ci="0" mb="0" cb="0"/><line nr="92" mi="3" ci="0" mb="0" cb="0"/><line nr="108" mi="24" ci="0" mb="2" cb="0"/><line nr="111" mi="16" ci="0" mb="0" cb="0"/><line nr="112" mi="5" ci="0" mb="0" cb="0"/><line nr="125" mi="3" ci="0" mb="0" cb="0"/><line nr="133" mi="2" ci="0" mb="0" cb="0"/><line nr="134" mi="1" ci="0" mb="0" cb="0"/><line nr="138" mi="3" ci="0" mb="0" cb="0"/><line nr="139" mi="3" ci="0" mb="0" cb="0"/><line nr="140" mi="1" ci="0" mb="0" cb="0"/><line nr="144" mi="10" ci="0" mb="0" cb="0"/><line nr="145" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="173" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="37" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="SimpleCharStream.java"><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="4" ci="0" mb="0" cb="0"/><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="6" ci="0" mb="0" cb="0"/><line nr="42" mi="6" ci="0" mb="0" cb="0"/><line nr="43" mi="6" ci="0" mb="0" cb="0"/><line nr="47" mi="2" ci="0" mb="2" cb="0"/><line nr="49" mi="12" ci="0" mb="0" cb="0"/><line nr="50" mi="12" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="12" ci="0" mb="0" cb="0"/><line nr="54" mi="12" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="12" ci="0" mb="0" cb="0"/><line nr="58" mi="12" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="14" ci="0" mb="0" cb="0"/><line nr="65" mi="12" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="12" ci="0" mb="0" cb="0"/><line nr="69" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="12" ci="0" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="74" mi="10" ci="0" mb="0" cb="0"/><line nr="77" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="6" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="6" ci="0" mb="0" cb="0"/><line nr="84" mi="4" ci="0" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="1" cb="1"/><line nr="92" mi="5" ci="0" mb="2" cb="0"/><line nr="94" mi="4" ci="0" mb="2" cb="0"/><line nr="96" mi="6" ci="0" mb="0" cb="0"/><line nr="97" mi="5" ci="0" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="2" cb="0"/><line nr="100" mi="7" ci="0" mb="0" cb="0"/><line nr="102" mi="4" ci="0" mb="0" cb="0"/><line nr="104" mi="5" ci="0" mb="2" cb="0"/><line nr="105" mi="5" ci="0" mb="0" cb="0"/><line nr="106" mi="7" ci="0" mb="2" cb="0"/><line nr="107" mi="4" ci="0" mb="0" cb="0"/><line nr="109" mi="4" ci="0" mb="0" cb="0"/><line nr="114" mi="0" ci="16" mb="0" cb="2"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="6" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="123" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="6" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="2"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><line nr="144" mi="0" ci="6" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="2"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="10" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="2"/><line nr="153" mi="0" ci="3" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="0" cb="2"/><line nr="156" mi="0" ci="4" mb="0" cb="0"/><line nr="159" mi="0" ci="9" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="4"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><line nr="166" mi="0" ci="1" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="0" cb="0"/><line nr="169" mi="0" ci="1" mb="0" cb="0"/><line nr="171" mi="0" ci="6" mb="0" cb="0"/><line nr="172" mi="0" ci="13" mb="0" cb="0"/><line nr="173" mi="0" ci="1" mb="0" cb="0"/><line nr="178" mi="0" ci="7" mb="0" cb="0"/><line nr="179" mi="0" ci="7" mb="0" cb="0"/><line nr="180" mi="0" ci="1" mb="0" cb="0"/><line nr="185" mi="0" ci="3" mb="0" cb="2"/><line nr="187" mi="0" ci="6" mb="0" cb="0"/><line nr="189" mi="0" ci="10" mb="1" cb="1"/><line nr="190" mi="3" ci="0" mb="0" cb="0"/><line nr="192" mi="0" ci="6" mb="0" cb="0"/><line nr="195" mi="0" ci="10" mb="0" cb="2"/><line nr="196" mi="0" ci="2" mb="0" cb="0"/><line nr="198" mi="0" ci="6" mb="0" cb="0"/><line nr="200" mi="0" ci="3" mb="0" cb="0"/><line nr="201" mi="0" ci="2" mb="0" cb="0"/><line nr="211" mi="6" ci="0" mb="0" cb="0"/><line nr="221" mi="6" ci="0" mb="0" cb="0"/><line nr="226" mi="0" ci="6" mb="0" cb="0"/><line nr="231" mi="0" ci="6" mb="0" cb="0"/><line nr="236" mi="0" ci="6" mb="0" cb="0"/><line nr="241" mi="0" ci="6" mb="0" cb="0"/><line nr="247" mi="0" ci="6" mb="0" cb="0"/><line nr="248" mi="0" ci="8" mb="1" cb="1"/><line nr="249" mi="7" ci="0" mb="0" cb="0"/><line nr="250" mi="0" ci="1" mb="0" cb="0"/><line nr="255" mi="0" ci="2" mb="0" cb="0"/><line nr="256" mi="0" ci="3" mb="0" cb="0"/><line nr="257" mi="0" ci="3" mb="0" cb="0"/><line nr="258" mi="0" ci="5" mb="0" cb="0"/><line nr="260" mi="0" ci="6" mb="0" cb="0"/><line nr="261" mi="0" ci="4" mb="0" cb="0"/><line nr="262" mi="0" ci="4" mb="0" cb="0"/><line nr="263" mi="0" ci="4" mb="0" cb="0"/><line nr="264" mi="0" ci="1" mb="0" cb="0"/><line nr="270" mi="0" ci="6" mb="0" cb="0"/><line nr="271" mi="0" ci="1" mb="0" cb="0"/><line nr="276" mi="6" ci="0" mb="0" cb="0"/><line nr="277" mi="1" ci="0" mb="0" cb="0"/><line nr="283" mi="3" ci="0" mb="0" cb="0"/><line nr="284" mi="3" ci="0" mb="0" cb="0"/><line nr="285" mi="5" ci="0" mb="0" cb="0"/><line nr="287" mi="8" ci="0" mb="4" cb="0"/><line nr="289" mi="6" ci="0" mb="0" cb="0"/><line nr="290" mi="4" ci="0" mb="0" cb="0"/><line nr="291" mi="4" ci="0" mb="0" cb="0"/><line nr="292" mi="4" ci="0" mb="0" cb="0"/><line nr="294" mi="6" ci="0" mb="0" cb="0"/><line nr="295" mi="9" ci="0" mb="0" cb="0"/><line nr="296" mi="3" ci="0" mb="0" cb="0"/><line nr="297" mi="1" ci="0" mb="0" cb="0"/><line nr="303" mi="6" ci="0" mb="0" cb="0"/><line nr="304" mi="1" ci="0" mb="0" cb="0"/><line nr="309" mi="6" ci="0" mb="0" cb="0"/><line nr="310" mi="1" ci="0" mb="0" cb="0"/><line nr="315" mi="17" ci="0" mb="2" cb="0"/><line nr="316" mi="1" ci="0" mb="0" cb="0"/><line nr="322" mi="9" ci="0" mb="0" cb="0"/><line nr="323" mi="1" ci="0" mb="0" cb="0"/><line nr="329" mi="7" ci="0" mb="0" cb="0"/><line nr="330" mi="1" ci="0" mb="0" cb="0"/><line nr="336" mi="6" ci="0" mb="0" cb="0"/><line nr="337" mi="1" ci="0" mb="0" cb="0"/><line nr="342" mi="7" ci="0" mb="0" cb="0"/><line nr="343" mi="1" ci="0" mb="0" cb="0"/><line nr="348" mi="6" ci="0" mb="0" cb="0"/><line nr="349" mi="1" ci="0" mb="0" cb="0"/><line nr="355" mi="17" ci="0" mb="2" cb="0"/><line nr="356" mi="1" ci="0" mb="0" cb="0"/><line nr="362" mi="9" ci="0" mb="0" cb="0"/><line nr="363" mi="1" ci="0" mb="0" cb="0"/><line nr="368" mi="7" ci="0" mb="0" cb="0"/><line nr="369" mi="1" ci="0" mb="0" cb="0"/><line nr="374" mi="6" ci="0" mb="0" cb="0"/><line nr="375" mi="1" ci="0" mb="0" cb="0"/><line nr="380" mi="7" ci="0" mb="0" cb="0"/><line nr="381" mi="1" ci="0" mb="0" cb="0"/><line nr="386" mi="6" ci="0" mb="0" cb="0"/><line nr="387" mi="1" ci="0" mb="0" cb="0"/><line nr="391" mi="0" ci="5" mb="1" cb="1"/><line nr="392" mi="0" ci="15" mb="0" cb="0"/><line nr="394" mi="29" ci="0" mb="0" cb="0"/><line nr="401" mi="3" ci="0" mb="0" cb="0"/><line nr="403" mi="6" ci="0" mb="2" cb="0"/><line nr="404" mi="13" ci="0" mb="0" cb="0"/><line nr="407" mi="20" ci="0" mb="0" cb="0"/><line nr="409" mi="15" ci="0" mb="0" cb="0"/><line nr="412" mi="2" ci="0" mb="0" cb="0"/><line nr="418" mi="3" ci="0" mb="0" cb="0"/><line nr="419" mi="3" ci="0" mb="0" cb="0"/><line nr="420" mi="3" ci="0" mb="0" cb="0"/><line nr="421" mi="1" ci="0" mb="0" cb="0"/><line nr="428" mi="3" ci="0" mb="0" cb="0"/><line nr="431" mi="5" ci="0" mb="2" cb="0"/><line nr="433" mi="12" ci="0" mb="0" cb="0"/><line nr="437" mi="14" ci="0" mb="0" cb="0"/><line nr="440" mi="6" ci="0" mb="0" cb="0"/><line nr="441" mi="4" ci="0" mb="0" cb="0"/><line nr="443" mi="23" ci="0" mb="4" cb="0"/><line nr="445" mi="5" ci="0" mb="0" cb="0"/><line nr="446" mi="12" ci="0" mb="0" cb="0"/><line nr="447" mi="7" ci="0" mb="0" cb="0"/><line nr="448" mi="2" ci="0" mb="0" cb="0"/><line nr="449" mi="2" ci="0" mb="0" cb="0"/><line nr="452" mi="3" ci="0" mb="2" cb="0"/><line nr="454" mi="6" ci="0" mb="0" cb="0"/><line nr="455" mi="7" ci="0" mb="0" cb="0"/><line nr="457" mi="4" ci="0" mb="2" cb="0"/><line nr="459" mi="18" ci="0" mb="2" cb="0"/><line nr="460" mi="7" ci="0" mb="0" cb="0"/><line nr="462" mi="6" ci="0" mb="0" cb="0"/><line nr="466" mi="6" ci="0" mb="0" cb="0"/><line nr="467" mi="6" ci="0" mb="0" cb="0"/><line nr="468" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="730" covered="326"/><counter type="BRANCH" missed="38" covered="22"/><counter type="LINE" missed="121" covered="73"/><counter type="COMPLEXITY" missed="45" covered="22"/><counter type="METHOD" missed="24" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CommentParserConstants.java"><line nr="32" mi="0" ci="48" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ParseException.java"><line nr="34" mi="0" ci="6" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="8" mb="0" cb="2"/><line nr="95" mi="0" ci="6" mb="1" cb="1"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="10" mb="0" cb="2"/><line nr="99" mi="0" ci="12" mb="0" cb="0"/><line nr="101" mi="0" ci="11" mb="1" cb="1"/><line nr="102" mi="4" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="6" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="7" mb="0" cb="2"/><line nr="109" mi="9" ci="2" mb="1" cb="1"/><line nr="110" mi="0" ci="3" mb="1" cb="1"/><line nr="111" mi="11" ci="0" mb="0" cb="0"/><line nr="112" mi="1" ci="0" mb="0" cb="0"/><line nr="114" mi="0" ci="14" mb="0" cb="0"/><line nr="115" mi="0" ci="9" mb="0" cb="0"/><line nr="116" mi="0" ci="11" mb="0" cb="0"/><line nr="117" mi="0" ci="9" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="19" mb="0" cb="0"/><line nr="121" mi="0" ci="11" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="1" cb="1"/><line nr="123" mi="0" ci="14" mb="0" cb="0"/><line nr="125" mi="13" ci="0" mb="0" cb="0"/><line nr="127" mi="0" ci="10" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="10" ci="5" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="0" ci="8" mb="0" cb="2"/><line nr="145" mi="0" ci="4" mb="9" cb="1"/><line nr="148" mi="1" ci="0" mb="0" cb="0"/><line nr="150" mi="4" ci="0" mb="0" cb="0"/><line nr="151" mi="1" ci="0" mb="0" cb="0"/><line nr="153" mi="4" ci="0" mb="0" cb="0"/><line nr="154" mi="1" ci="0" mb="0" cb="0"/><line nr="156" mi="4" ci="0" mb="0" cb="0"/><line nr="157" mi="1" ci="0" mb="0" cb="0"/><line nr="159" mi="4" ci="0" mb="0" cb="0"/><line nr="160" mi="1" ci="0" mb="0" cb="0"/><line nr="162" mi="4" ci="0" mb="0" cb="0"/><line nr="163" mi="1" ci="0" mb="0" cb="0"/><line nr="165" mi="0" ci="4" mb="0" cb="0"/><line nr="166" mi="0" ci="1" mb="0" cb="0"/><line nr="168" mi="4" ci="0" mb="0" cb="0"/><line nr="169" mi="1" ci="0" mb="0" cb="0"/><line nr="171" mi="4" ci="0" mb="0" cb="0"/><line nr="172" mi="1" ci="0" mb="0" cb="0"/><line nr="174" mi="10" ci="0" mb="4" cb="0"/><line nr="175" mi="11" ci="0" mb="0" cb="0"/><line nr="176" mi="18" ci="0" mb="0" cb="0"/><line nr="177" mi="1" ci="0" mb="0" cb="0"/><line nr="178" mi="4" ci="0" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="135" covered="236"/><counter type="BRANCH" missed="18" covered="14"/><counter type="LINE" missed="28" covered="38"/><counter type="COMPLEXITY" missed="18" covered="7"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="QueryUtil.java"><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="45" mi="5" ci="0" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="6" mb="0" cb="2"/><line nr="53" mi="0" ci="2" mb="1" cb="1"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="0" cb="4"/><line nr="58" mi="0" ci="17" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="4"/><line nr="61" mi="0" ci="17" mb="0" cb="0"/><line nr="62" mi="0" ci="6" mb="1" cb="3"/><line nr="63" mi="0" ci="16" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="9" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="1" cb="1"/><line nr="83" mi="9" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="13" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="1" cb="1"/><line nr="94" mi="0" ci="6" mb="1" cb="3"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="6" mb="1" cb="3"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="11" mb="2" cb="4"/><line nr="104" mi="0" ci="4" mb="0" cb="2"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="2"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="10" mb="0" cb="2"/><line nr="115" mi="0" ci="6" mb="0" cb="0"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="7" ci="0" mb="0" cb="0"/><line nr="126" mi="4" ci="0" mb="0" cb="0"/><line nr="127" mi="2" ci="0" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="1" cb="1"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="141" mi="0" ci="12" mb="0" cb="0"/><line nr="145" mi="0" ci="2" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="16" mb="0" cb="2"/><line nr="150" mi="0" ci="4" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="152" mi="1" ci="0" mb="0" cb="0"/><line nr="153" mi="6" ci="0" mb="0" cb="0"/><line nr="154" mi="0" ci="1" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="0" ci="2" mb="0" cb="2"/><line nr="166" mi="0" ci="6" mb="1" cb="1"/><line nr="167" mi="3" ci="0" mb="0" cb="0"/><line nr="168" mi="1" ci="0" mb="0" cb="0"/><line nr="171" mi="0" ci="6" mb="1" cb="1"/><line nr="172" mi="10" ci="0" mb="0" cb="0"/><line nr="173" mi="1" ci="0" mb="0" cb="0"/><line nr="176" mi="0" ci="6" mb="1" cb="1"/><line nr="177" mi="10" ci="0" mb="0" cb="0"/><line nr="178" mi="1" ci="0" mb="0" cb="0"/><line nr="182" mi="0" ci="5" mb="1" cb="1"/><line nr="183" mi="2" ci="0" mb="0" cb="0"/><line nr="184" mi="1" ci="0" mb="0" cb="0"/><line nr="186" mi="0" ci="4" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="0" cb="0"/><line nr="193" mi="0" ci="2" mb="1" cb="1"/><line nr="194" mi="0" ci="2" mb="0" cb="0"/><line nr="198" mi="5" ci="0" mb="0" cb="0"/><line nr="201" mi="3" ci="0" mb="0" cb="0"/><line nr="202" mi="4" ci="0" mb="0" cb="0"/><line nr="203" mi="3" ci="0" mb="2" cb="0"/><line nr="204" mi="19" ci="0" mb="0" cb="0"/><line nr="206" mi="2" ci="0" mb="0" cb="0"/><line nr="207" mi="1" ci="0" mb="0" cb="0"/><line nr="208" mi="2" ci="0" mb="0" cb="0"/><line nr="213" mi="0" ci="4" mb="0" cb="0"/><line nr="214" mi="0" ci="3" mb="0" cb="0"/><line nr="215" mi="0" ci="3" mb="0" cb="0"/><line nr="217" mi="4" ci="11" mb="3" cb="3"/><line nr="218" mi="0" ci="9" mb="1" cb="3"/><line nr="225" mi="0" ci="7" mb="0" cb="0"/><line nr="226" mi="0" ci="1" mb="0" cb="0"/><line nr="227" mi="0" ci="5" mb="0" cb="0"/><line nr="228" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="110" covered="352"/><counter type="BRANCH" missed="20" covered="48"/><counter type="LINE" missed="25" covered="75"/><counter type="COMPLEXITY" missed="20" covered="25"/><counter type="METHOD" missed="2" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TempStatementUtil.java"><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="3" ci="0" mb="2" cb="0"/><line nr="39" mi="7" ci="0" mb="0" cb="0"/><line nr="42" mi="3" ci="0" mb="2" cb="0"/><line nr="43" mi="7" ci="0" mb="0" cb="0"/><line nr="46" mi="3" ci="0" mb="2" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="50" mi="5" ci="0" mb="0" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="7" ci="0" mb="0" cb="0"/><line nr="55" mi="4" ci="0" mb="0" cb="0"/><line nr="57" mi="7" ci="0" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="0" cb="0"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="63" mi="4" ci="0" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="10" ci="0" mb="4" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="0" ci="24" mb="0" cb="0"/><line nr="72" mi="0" ci="30" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="1" cb="1"/><line nr="78" mi="0" ci="8" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="2"/><line nr="82" mi="0" ci="6" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="1" cb="1"/><line nr="84" mi="0" ci="6" mb="0" cb="0"/><line nr="86" mi="14" ci="0" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="8" mb="1" cb="1"/><line nr="95" mi="0" ci="3" mb="0" cb="2"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="7" mb="0" cb="2"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="0" ci="5" mb="1" cb="4"/><line nr="103" mi="0" ci="6" mb="1" cb="1"/><line nr="104" mi="12" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="6" mb="1" cb="1"/><line nr="114" mi="12" ci="0" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="6" mb="1" cb="1"/><line nr="121" mi="0" ci="13" mb="0" cb="0"/><line nr="122" mi="0" ci="19" mb="0" cb="0"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="0" ci="7" mb="0" cb="0"/><line nr="133" mi="0" ci="6" mb="0" cb="0"/><line nr="137" mi="7" ci="0" mb="0" cb="0"/><line nr="141" mi="7" ci="0" mb="0" cb="0"/><line nr="145" mi="7" ci="0" mb="0" cb="0"/><line nr="149" mi="6" ci="0" mb="4" cb="0"/><line nr="150" mi="2" ci="0" mb="0" cb="0"/><line nr="153" mi="4" ci="0" mb="0" cb="0"/><line nr="154" mi="4" ci="0" mb="0" cb="0"/><line nr="155" mi="4" ci="0" mb="0" cb="0"/><line nr="157" mi="3" ci="0" mb="0" cb="0"/><line nr="158" mi="16" ci="0" mb="2" cb="0"/><line nr="159" mi="8" ci="0" mb="4" cb="0"/><line nr="160" mi="4" ci="0" mb="0" cb="0"/><line nr="161" mi="4" ci="0" mb="2" cb="0"/><line nr="162" mi="5" ci="0" mb="0" cb="0"/><line nr="164" mi="4" ci="0" mb="0" cb="0"/><line nr="166" mi="8" ci="0" mb="0" cb="0"/><line nr="170" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="219" covered="204"/><counter type="BRANCH" missed="29" covered="16"/><counter type="LINE" missed="40" covered="35"/><counter type="COMPLEXITY" missed="25" covered="8"/><counter type="METHOD" missed="7" covered="2"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="DefaultQueryTransformer.java"><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="2"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="20" mb="0" cb="0"/><line nr="65" mi="0" ci="8" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="2"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="20" mb="0" cb="0"/><line nr="75" mi="0" ci="8" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="2"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="21" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="5" ci="3" mb="3" cb="1"/><line nr="94" mi="18" ci="0" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="1" cb="1"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="19" ci="0" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="1" cb="1"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="19" ci="0" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="1" cb="1"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="19" ci="0" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="1" cb="1"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="127" mi="19" ci="0" mb="0" cb="0"/><line nr="133" mi="0" ci="4" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="2"/><line nr="135" mi="0" ci="1" mb="0" cb="0"/><line nr="137" mi="0" ci="7" mb="0" cb="0"/><line nr="138" mi="0" ci="24" mb="0" cb="0"/><line nr="139" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="99" covered="226"/><counter type="BRANCH" missed="7" covered="13"/><counter type="LINE" missed="5" covered="47"/><counter type="COMPLEXITY" missed="6" covered="7"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CommentParserTokenManager.java"><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="4" ci="0" mb="0" cb="0"/><line nr="20" mi="2" ci="0" mb="2" cb="0"/><line nr="23" mi="6" ci="0" mb="2" cb="0"/><line nr="25" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="2" ci="0" mb="0" cb="0"/><line nr="28" mi="6" ci="0" mb="2" cb="0"/><line nr="29" mi="2" ci="0" mb="0" cb="0"/><line nr="30" mi="6" ci="0" mb="2" cb="0"/><line nr="31" mi="2" ci="0" mb="0" cb="0"/><line nr="32" mi="2" ci="0" mb="0" cb="0"/><line nr="34" mi="2" ci="0" mb="0" cb="0"/><line nr="39" mi="10" ci="0" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="4"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="5" ci="0" mb="0" cb="0"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="1" cb="1"/><line nr="71" mi="0" ci="6" mb="1" cb="1"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="5" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="6" mb="0" cb="0"/><line nr="85" mi="0" ci="7" mb="0" cb="0"/><line nr="87" mi="0" ci="19" mb="0" cb="0"/><line nr="90" mi="0" ci="19" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="9" mb="1" cb="1"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="2"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="0" ci="6" mb="7" cb="9"/><line nr="112" mi="0" ci="6" mb="0" cb="2"/><line nr="114" mi="0" ci="3" mb="1" cb="1"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="6" mb="1" cb="1"/><line nr="120" mi="0" ci="3" mb="1" cb="1"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="1" cb="1"/><line nr="124" mi="5" ci="0" mb="0" cb="0"/><line nr="125" mi="0" ci="4" mb="1" cb="1"/><line nr="126" mi="5" ci="0" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="2"/><line nr="128" mi="0" ci="12" mb="0" cb="0"/><line nr="131" mi="0" ci="6" mb="0" cb="2"/><line nr="132" mi="0" ci="5" mb="0" cb="0"/><line nr="133" mi="0" ci="4" mb="1" cb="1"/><line nr="135" mi="0" ci="3" mb="1" cb="1"/><line nr="136" mi="0" ci="2" mb="0" cb="0"/><line nr="138" mi="0" ci="6" mb="0" cb="2"/><line nr="140" mi="0" ci="3" mb="0" cb="2"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="2"/><line nr="145" mi="0" ci="12" mb="0" cb="0"/><line nr="148" mi="6" ci="0" mb="2" cb="0"/><line nr="149" mi="5" ci="0" mb="0" cb="0"/><line nr="150" mi="4" ci="0" mb="2" cb="0"/><line nr="152" mi="3" ci="0" mb="2" cb="0"/><line nr="153" mi="2" ci="0" mb="0" cb="0"/><line nr="155" mi="6" ci="0" mb="2" cb="0"/><line nr="157" mi="3" ci="0" mb="2" cb="0"/><line nr="158" mi="2" ci="0" mb="0" cb="0"/><line nr="159" mi="3" ci="0" mb="0" cb="0"/><line nr="161" mi="4" ci="0" mb="2" cb="0"/><line nr="162" mi="12" ci="0" mb="0" cb="0"/><line nr="165" mi="0" ci="4" mb="1" cb="1"/><line nr="166" mi="1" ci="0" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="1" cb="1"/><line nr="168" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="1" mb="0" cb="0"/><line nr="172" mi="0" ci="6" mb="0" cb="2"/><line nr="173" mi="0" ci="1" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="1" cb="1"/><line nr="175" mi="0" ci="2" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="0" cb="0"/><line nr="177" mi="0" ci="1" mb="0" cb="0"/><line nr="179" mi="9" ci="0" mb="4" cb="0"/><line nr="180" mi="3" ci="0" mb="0" cb="0"/><line nr="184" mi="0" ci="4" mb="1" cb="1"/><line nr="185" mi="5" ci="0" mb="0" cb="0"/><line nr="188" mi="0" ci="6" mb="0" cb="2"/><line nr="189" mi="0" ci="5" mb="0" cb="0"/><line nr="192" mi="0" ci="4" mb="0" cb="2"/><line nr="193" mi="0" ci="12" mb="0" cb="0"/><line nr="196" mi="0" ci="7" mb="1" cb="3"/><line nr="197" mi="0" ci="3" mb="0" cb="0"/><line nr="201" mi="4" ci="0" mb="2" cb="0"/><line nr="202" mi="5" ci="0" mb="0" cb="0"/><line nr="205" mi="6" ci="0" mb="2" cb="0"/><line nr="206" mi="5" ci="0" mb="0" cb="0"/><line nr="209" mi="4" ci="0" mb="2" cb="0"/><line nr="210" mi="12" ci="0" mb="0" cb="0"/><line nr="213" mi="7" ci="0" mb="4" cb="0"/><line nr="214" mi="3" ci="0" mb="0" cb="0"/><line nr="217" mi="0" ci="6" mb="0" cb="2"/><line nr="218" mi="0" ci="1" mb="0" cb="0"/><line nr="219" mi="0" ci="3" mb="0" cb="2"/><line nr="220" mi="0" ci="2" mb="0" cb="0"/><line nr="221" mi="0" ci="3" mb="0" cb="0"/><line nr="222" mi="0" ci="1" mb="0" cb="0"/><line nr="225" mi="0" ci="3" mb="0" cb="2"/><line nr="226" mi="0" ci="1" mb="0" cb="0"/><line nr="227" mi="0" ci="4" mb="1" cb="1"/><line nr="229" mi="0" ci="7" mb="0" cb="0"/><line nr="232" mi="0" ci="6" mb="2" cb="5"/><line nr="236" mi="0" ci="3" mb="1" cb="1"/><line nr="237" mi="0" ci="2" mb="0" cb="0"/><line nr="238" mi="0" ci="3" mb="0" cb="0"/><line nr="239" mi="0" ci="1" mb="0" cb="0"/><line nr="241" mi="0" ci="3" mb="1" cb="1"/><line nr="242" mi="0" ci="2" mb="0" cb="0"/><line nr="243" mi="0" ci="3" mb="0" cb="0"/><line nr="244" mi="0" ci="4" mb="0" cb="0"/><line nr="245" mi="0" ci="1" mb="0" cb="0"/><line nr="247" mi="3" ci="0" mb="2" cb="0"/><line nr="248" mi="2" ci="0" mb="0" cb="0"/><line nr="249" mi="3" ci="0" mb="0" cb="0"/><line nr="250" mi="4" ci="0" mb="0" cb="0"/><line nr="251" mi="1" ci="0" mb="0" cb="0"/><line nr="253" mi="0" ci="3" mb="1" cb="1"/><line nr="254" mi="0" ci="2" mb="0" cb="0"/><line nr="255" mi="0" ci="11" mb="0" cb="0"/><line nr="256" mi="0" ci="1" mb="0" cb="0"/><line nr="258" mi="0" ci="4" mb="0" cb="0"/><line nr="259" mi="0" ci="1" mb="0" cb="0"/><line nr="261" mi="4" ci="0" mb="0" cb="0"/><line nr="262" mi="1" ci="0" mb="0" cb="0"/><line nr="265" mi="0" ci="3" mb="0" cb="2"/><line nr="266" mi="0" ci="1" mb="0" cb="0"/><line nr="269" mi="5" ci="0" mb="0" cb="0"/><line nr="270" mi="4" ci="0" mb="0" cb="0"/><line nr="271" mi="6" ci="0" mb="0" cb="0"/><line nr="272" mi="7" ci="0" mb="0" cb="0"/><line nr="273" mi="7" ci="0" mb="0" cb="0"/><line nr="276" mi="6" ci="0" mb="7" cb="0"/><line nr="280" mi="7" ci="0" mb="2" cb="0"/><line nr="281" mi="1" ci="0" mb="0" cb="0"/><line nr="282" mi="3" ci="0" mb="2" cb="0"/><line nr="283" mi="2" ci="0" mb="0" cb="0"/><line nr="284" mi="3" ci="0" mb="0" cb="0"/><line nr="285" mi="1" ci="0" mb="0" cb="0"/><line nr="287" mi="7" ci="0" mb="2" cb="0"/><line nr="288" mi="4" ci="0" mb="0" cb="0"/><line nr="289" mi="7" ci="0" mb="2" cb="0"/><line nr="291" mi="3" ci="0" mb="2" cb="0"/><line nr="292" mi="2" ci="0" mb="0" cb="0"/><line nr="293" mi="4" ci="0" mb="0" cb="0"/><line nr="297" mi="7" ci="0" mb="2" cb="0"/><line nr="298" mi="4" ci="0" mb="0" cb="0"/><line nr="299" mi="7" ci="0" mb="2" cb="0"/><line nr="301" mi="3" ci="0" mb="2" cb="0"/><line nr="302" mi="2" ci="0" mb="0" cb="0"/><line nr="303" mi="4" ci="0" mb="0" cb="0"/><line nr="307" mi="7" ci="0" mb="2" cb="0"/><line nr="308" mi="1" ci="0" mb="0" cb="0"/><line nr="309" mi="3" ci="0" mb="2" cb="0"/><line nr="310" mi="2" ci="0" mb="0" cb="0"/><line nr="311" mi="11" ci="0" mb="0" cb="0"/><line nr="312" mi="1" ci="0" mb="0" cb="0"/><line nr="314" mi="7" ci="0" mb="2" cb="0"/><line nr="315" mi="5" ci="0" mb="0" cb="0"/><line nr="318" mi="7" ci="0" mb="2" cb="0"/><line nr="319" mi="5" ci="0" mb="0" cb="0"/><line nr="323" mi="3" ci="0" mb="2" cb="0"/><line nr="325" mi="0" ci="3" mb="0" cb="2"/><line nr="327" mi="0" ci="3" mb="0" cb="0"/><line nr="328" mi="0" ci="3" mb="0" cb="0"/><line nr="329" mi="0" ci="2" mb="0" cb="0"/><line nr="331" mi="0" ci="1" mb="0" cb="0"/><line nr="332" mi="0" ci="13" mb="0" cb="2"/><line nr="333" mi="0" ci="2" mb="0" cb="0"/><line nr="334" mi="0" ci="5" mb="0" cb="0"/><line nr="335" mi="0" ci="4" mb="0" cb="0"/><line nr="340" mi="0" ci="3" mb="0" cb="2"/><line nr="343" mi="0" ci="4" mb="0" cb="0"/><line nr="345" mi="0" ci="2" mb="0" cb="0"/><line nr="350" mi="0" ci="5" mb="0" cb="0"/><line nr="351" mi="1" ci="0" mb="0" cb="0"/><line nr="352" mi="2" ci="0" mb="0" cb="0"/><line nr="353" mi="0" ci="1" mb="0" cb="0"/><line nr="354" mi="0" ci="3" mb="0" cb="2"/><line nr="357" mi="0" ci="6" mb="1" cb="1"/><line nr="358" mi="0" ci="5" mb="0" cb="0"/><line nr="361" mi="0" ci="2" mb="0" cb="0"/><line nr="363" mi="2" ci="0" mb="0" cb="0"/><line nr="365" mi="0" ci="27" mb="0" cb="0"/><line nr="370" mi="2" ci="0" mb="2" cb="0"/><line nr="373" mi="12" ci="0" mb="2" cb="0"/><line nr="375" mi="8" ci="0" mb="2" cb="0"/><line nr="376" mi="2" ci="0" mb="0" cb="0"/><line nr="377" mi="2" ci="0" mb="0" cb="0"/><line nr="382" mi="0" ci="47" mb="0" cb="0"/><line nr="386" mi="0" ci="11" mb="0" cb="0"/><line nr="392" mi="0" ci="47" mb="0" cb="0"/><line nr="395" mi="0" ci="7" mb="0" cb="0"/><line nr="398" mi="0" ci="7" mb="0" cb="0"/><line nr="401" mi="0" ci="8" mb="0" cb="0"/><line nr="405" mi="0" ci="4" mb="0" cb="0"/><line nr="406" mi="0" ci="4" mb="0" cb="0"/><line nr="409" mi="0" ci="2" mb="0" cb="0"/><line nr="412" mi="0" ci="3" mb="0" cb="0"/><line nr="413" mi="0" ci="1" mb="0" cb="0"/><line nr="417" mi="3" ci="0" mb="0" cb="0"/><line nr="418" mi="3" ci="0" mb="0" cb="0"/><line nr="419" mi="1" ci="0" mb="0" cb="0"/><line nr="424" mi="6" ci="0" mb="0" cb="0"/><line nr="425" mi="4" ci="0" mb="0" cb="0"/><line nr="426" mi="3" ci="0" mb="0" cb="0"/><line nr="427" mi="2" ci="0" mb="0" cb="0"/><line nr="428" mi="1" ci="0" mb="0" cb="0"/><line nr="432" mi="3" ci="0" mb="0" cb="0"/><line nr="433" mi="5" ci="0" mb="2" cb="0"/><line nr="434" mi="6" ci="0" mb="0" cb="0"/><line nr="435" mi="1" ci="0" mb="0" cb="0"/><line nr="440" mi="3" ci="0" mb="0" cb="0"/><line nr="441" mi="3" ci="0" mb="0" cb="0"/><line nr="442" mi="1" ci="0" mb="0" cb="0"/><line nr="447" mi="5" ci="0" mb="4" cb="0"/><line nr="448" mi="15" ci="0" mb="0" cb="0"/><line nr="450" mi="3" ci="0" mb="0" cb="0"/><line nr="451" mi="1" ci="0" mb="0" cb="0"/><line nr="461" mi="0" ci="5" mb="0" cb="0"/><line nr="462" mi="0" ci="8" mb="0" cb="2"/><line nr="463" mi="0" ci="4" mb="0" cb="0"/><line nr="464" mi="0" ci="4" mb="0" cb="0"/><line nr="465" mi="0" ci="4" mb="0" cb="0"/><line nr="466" mi="0" ci="4" mb="0" cb="0"/><line nr="467" mi="0" ci="5" mb="0" cb="0"/><line nr="469" mi="0" ci="3" mb="0" cb="0"/><line nr="470" mi="0" ci="3" mb="0" cb="0"/><line nr="471" mi="0" ci="3" mb="0" cb="0"/><line nr="472" mi="0" ci="3" mb="0" cb="0"/><line nr="474" mi="0" ci="2" mb="0" cb="0"/><line nr="477" mi="0" ci="3" mb="0" cb="0"/><line nr="478" mi="0" ci="3" mb="0" cb="0"/><line nr="488" mi="0" ci="2" mb="0" cb="0"/><line nr="495" mi="0" ci="5" mb="0" cb="0"/><line nr="497" mi="0" ci="1" mb="0" cb="0"/><line nr="499" mi="0" ci="3" mb="0" cb="0"/><line nr="500" mi="0" ci="3" mb="0" cb="0"/><line nr="501" mi="0" ci="2" mb="0" cb="0"/><line nr="502" mi="0" ci="1" mb="0" cb="0"/><line nr="506" mi="0" ci="3" mb="1" cb="2"/><line nr="509" mi="0" ci="3" mb="0" cb="0"/><line nr="510" mi="0" ci="3" mb="0" cb="0"/><line nr="511" mi="0" ci="3" mb="0" cb="0"/><line nr="512" mi="0" ci="1" mb="0" cb="0"/><line nr="514" mi="0" ci="3" mb="0" cb="0"/><line nr="515" mi="0" ci="3" mb="0" cb="0"/><line nr="516" mi="0" ci="3" mb="0" cb="0"/><line nr="517" mi="0" ci="7" mb="1" cb="3"/><line nr="519" mi="0" ci="3" mb="0" cb="0"/><line nr="523" mi="0" ci="4" mb="1" cb="1"/><line nr="525" mi="0" ci="6" mb="0" cb="2"/><line nr="526" mi="0" ci="9" mb="0" cb="0"/><line nr="527" mi="0" ci="16" mb="0" cb="2"/><line nr="529" mi="0" ci="3" mb="0" cb="0"/><line nr="530" mi="0" ci="6" mb="1" cb="1"/><line nr="531" mi="6" ci="0" mb="0" cb="0"/><line nr="532" mi="0" ci="2" mb="0" cb="0"/><line nr="534" mi="0" ci="16" mb="0" cb="2"/><line nr="536" mi="0" ci="6" mb="0" cb="2"/><line nr="537" mi="0" ci="7" mb="0" cb="0"/><line nr="540" mi="0" ci="6" mb="1" cb="1"/><line nr="541" mi="6" ci="0" mb="0" cb="0"/><line nr="542" mi="0" ci="2" mb="0" cb="0"/><line nr="543" mi="0" ci="3" mb="0" cb="0"/><line nr="545" mi="0" ci="5" mb="0" cb="0"/><line nr="546" mi="0" ci="1" mb="0" cb="0"/><line nr="548" mi="1" ci="0" mb="0" cb="0"/><line nr="550" mi="4" ci="0" mb="0" cb="0"/><line nr="551" mi="4" ci="0" mb="0" cb="0"/><line nr="552" mi="2" ci="0" mb="0" cb="0"/><line nr="553" mi="2" ci="0" mb="0" cb="0"/><line nr="554" mi="8" ci="0" mb="0" cb="0"/><line nr="555" mi="1" ci="0" mb="0" cb="0"/><line nr="556" mi="2" ci="0" mb="0" cb="0"/><line nr="557" mi="9" ci="0" mb="2" cb="0"/><line nr="558" mi="8" ci="0" mb="4" cb="0"/><line nr="559" mi="1" ci="0" mb="0" cb="0"/><line nr="560" mi="3" ci="0" mb="0" cb="0"/><line nr="563" mi="1" ci="0" mb="0" cb="0"/><line nr="564" mi="1" ci="0" mb="0" cb="0"/><line nr="565" mi="2" ci="0" mb="2" cb="0"/><line nr="566" mi="4" ci="0" mb="0" cb="0"/><line nr="567" mi="9" ci="0" mb="2" cb="0"/><line nr="569" mi="13" ci="0" mb="0" cb="0"/><line nr="576" mi="0" ci="7" mb="1" cb="1"/><line nr="578" mi="0" ci="11" mb="0" cb="0"/><line nr="579" mi="0" ci="6" mb="0" cb="0"/><line nr="581" mi="0" ci="1" mb="0" cb="0"/><line nr="585" mi="13" ci="0" mb="0" cb="0"/><line nr="586" mi="4" ci="0" mb="2" cb="0"/><line nr="587" mi="1" ci="0" mb="0" cb="0"/><line nr="590" mi="3" ci="0" mb="0" cb="0"/><line nr="591" mi="3" ci="0" mb="0" cb="0"/><line nr="592" mi="1" ci="0" mb="0" cb="0"/><line nr="597" mi="0" ci="5" mb="0" cb="0"/><line nr="598" mi="0" ci="4" mb="0" cb="2"/><line nr="599" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="574" covered="877"/><counter type="BRANCH" missed="128" covered="97"/><counter type="LINE" missed="137" covered="181"/><counter type="COMPLEXITY" missed="95" covered="55"/><counter type="METHOD" missed="11" covered="13"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Token.java"><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="4" ci="0" mb="0" cb="0"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="6" mb="0" cb="0"/><line nr="127" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="20"/><counter type="LINE" missed="5" covered="7"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RexUtil.java"><line nr="31" mi="2" ci="0" mb="0" cb="0"/><line nr="32" mi="5" ci="0" mb="0" cb="0"/><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="10" ci="0" mb="6" cb="0"/><line nr="38" mi="9" ci="0" mb="2" cb="0"/><line nr="39" mi="2" ci="0" mb="0" cb="0"/><line nr="42" mi="12" ci="0" mb="4" cb="0"/><line nr="43" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="2" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="10" ci="0" mb="4" cb="0"/><line nr="55" mi="5" ci="0" mb="2" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="71" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="CommentParser.java"><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="3" ci="0" mb="0" cb="0"/><line nr="17" mi="6" ci="0" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="2" ci="0" mb="0" cb="0"/><line nr="20" mi="8" ci="0" mb="0" cb="0"/><line nr="21" mi="3" ci="0" mb="0" cb="0"/><line nr="22" mi="3" ci="0" mb="0" cb="0"/><line nr="23" mi="3" ci="0" mb="0" cb="0"/><line nr="24" mi="1" ci="0" mb="0" cb="0"/><line nr="27" mi="0" ci="6" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="5" mb="0" cb="2"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="1" cb="1"/><line nr="54" mi="5" ci="0" mb="0" cb="0"/><line nr="56" mi="2" ci="8" mb="3" cb="4"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="0" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="6" ci="0" mb="0" cb="0"/><line nr="71" mi="4" ci="0" mb="0" cb="0"/><line nr="72" mi="4" ci="0" mb="0" cb="0"/><line nr="74" mi="0" ci="9" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="13" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="4" ci="0" mb="0" cb="0"/><line nr="96" mi="13" ci="0" mb="0" cb="0"/><line nr="97" mi="5" ci="0" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="13" mb="0" cb="0"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="0" ci="10" mb="0" cb="0"/><line nr="110" mi="0" ci="9" mb="0" cb="2"/><line nr="111" mi="5" ci="0" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="2"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="5" mb="0" cb="2"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="0" ci="5" mb="1" cb="1"/><line nr="127" mi="2" ci="0" mb="0" cb="0"/><line nr="131" mi="0" ci="6" mb="0" cb="2"/><line nr="132" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="6" mb="0" cb="2"/><line nr="137" mi="0" ci="2" mb="0" cb="0"/><line nr="141" mi="0" ci="5" mb="0" cb="2"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="146" mi="0" ci="5" mb="0" cb="2"/><line nr="147" mi="0" ci="2" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="3" mb="0" cb="2"/><line nr="154" mi="0" ci="3" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="1" cb="1"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="0" cb="2"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="5" mb="0" cb="2"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><line nr="167" mi="0" ci="6" mb="1" cb="1"/><line nr="168" mi="2" ci="0" mb="0" cb="0"/><line nr="172" mi="0" ci="6" mb="0" cb="2"/><line nr="173" mi="0" ci="2" mb="0" cb="0"/><line nr="187" mi="8" ci="4" mb="0" cb="0"/><line nr="190" mi="0" ci="1" mb="0" cb="0"/><line nr="191" mi="0" ci="1" mb="0" cb="0"/><line nr="193" mi="0" ci="7" mb="0" cb="0"/><line nr="194" mi="0" ci="1" mb="0" cb="0"/><line nr="195" mi="8" ci="4" mb="0" cb="0"/><line nr="196" mi="6" ci="3" mb="0" cb="0"/><line nr="197" mi="6" ci="3" mb="0" cb="0"/><line nr="201" mi="4" ci="0" mb="0" cb="0"/><line nr="202" mi="1" ci="0" mb="0" cb="0"/><line nr="204" mi="2" ci="0" mb="0" cb="0"/><line nr="205" mi="16" ci="0" mb="0" cb="0"/><line nr="206" mi="7" ci="0" mb="0" cb="0"/><line nr="207" mi="5" ci="0" mb="0" cb="0"/><line nr="208" mi="3" ci="0" mb="0" cb="0"/><line nr="209" mi="3" ci="0" mb="0" cb="0"/><line nr="210" mi="12" ci="0" mb="2" cb="0"/><line nr="211" mi="16" ci="0" mb="2" cb="0"/><line nr="212" mi="1" ci="0" mb="0" cb="0"/><line nr="216" mi="4" ci="0" mb="0" cb="0"/><line nr="217" mi="1" ci="0" mb="0" cb="0"/><line nr="220" mi="14" ci="0" mb="0" cb="0"/><line nr="221" mi="5" ci="0" mb="0" cb="0"/><line nr="222" mi="5" ci="0" mb="0" cb="0"/><line nr="223" mi="3" ci="0" mb="0" cb="0"/><line nr="224" mi="3" ci="0" mb="0" cb="0"/><line nr="225" mi="12" ci="0" mb="2" cb="0"/><line nr="226" mi="16" ci="0" mb="2" cb="0"/><line nr="227" mi="1" ci="0" mb="0" cb="0"/><line nr="230" mi="0" ci="2" mb="0" cb="0"/><line nr="231" mi="0" ci="8" mb="0" cb="0"/><line nr="232" mi="0" ci="7" mb="0" cb="0"/><line nr="233" mi="0" ci="5" mb="0" cb="0"/><line nr="234" mi="0" ci="3" mb="0" cb="0"/><line nr="235" mi="0" ci="3" mb="0" cb="0"/><line nr="236" mi="0" ci="12" mb="0" cb="2"/><line nr="237" mi="0" ci="16" mb="0" cb="2"/><line nr="238" mi="0" ci="1" mb="0" cb="0"/><line nr="242" mi="6" ci="0" mb="0" cb="0"/><line nr="243" mi="5" ci="0" mb="0" cb="0"/><line nr="244" mi="5" ci="0" mb="0" cb="0"/><line nr="245" mi="3" ci="0" mb="0" cb="0"/><line nr="246" mi="3" ci="0" mb="0" cb="0"/><line nr="247" mi="12" ci="0" mb="2" cb="0"/><line nr="248" mi="16" ci="0" mb="2" cb="0"/><line nr="249" mi="1" ci="0" mb="0" cb="0"/><line nr="252" mi="2" ci="0" mb="0" cb="0"/><line nr="253" mi="3" ci="0" mb="0" cb="0"/><line nr="254" mi="5" ci="0" mb="0" cb="0"/><line nr="255" mi="3" ci="0" mb="0" cb="0"/><line nr="256" mi="3" ci="0" mb="0" cb="0"/><line nr="257" mi="12" ci="0" mb="2" cb="0"/><line nr="258" mi="16" ci="0" mb="2" cb="0"/><line nr="259" mi="1" ci="0" mb="0" cb="0"/><line nr="263" mi="3" ci="0" mb="0" cb="0"/><line nr="264" mi="5" ci="0" mb="0" cb="0"/><line nr="265" mi="3" ci="0" mb="0" cb="0"/><line nr="266" mi="3" ci="0" mb="0" cb="0"/><line nr="267" mi="12" ci="0" mb="2" cb="0"/><line nr="268" mi="16" ci="0" mb="2" cb="0"/><line nr="269" mi="1" ci="0" mb="0" cb="0"/><line nr="273" mi="0" ci="12" mb="1" cb="1"/><line nr="274" mi="9" ci="0" mb="0" cb="0"/><line nr="275" mi="0" ci="3" mb="0" cb="0"/><line nr="276" mi="0" ci="5" mb="0" cb="2"/><line nr="277" mi="0" ci="6" mb="0" cb="0"/><line nr="278" mi="0" ci="9" mb="1" cb="1"/><line nr="279" mi="3" ci="0" mb="0" cb="0"/><line nr="280" mi="9" ci="0" mb="2" cb="0"/><line nr="281" mi="5" ci="0" mb="0" cb="0"/><line nr="282" mi="2" ci="0" mb="2" cb="0"/><line nr="283" mi="8" ci="0" mb="2" cb="0"/><line nr="284" mi="4" ci="0" mb="0" cb="0"/><line nr="288" mi="0" ci="3" mb="0" cb="0"/><line nr="290" mi="0" ci="3" mb="0" cb="0"/><line nr="291" mi="0" ci="3" mb="0" cb="0"/><line nr="292" mi="0" ci="3" mb="0" cb="0"/><line nr="296" mi="12" ci="6" mb="0" cb="0"/><line nr="298" mi="0" ci="5" mb="0" cb="2"/><line nr="299" mi="0" ci="6" mb="0" cb="0"/><line nr="300" mi="0" ci="4" mb="0" cb="2"/><line nr="301" mi="0" ci="13" mb="0" cb="0"/><line nr="303" mi="0" ci="9" mb="0" cb="0"/><line nr="306" mi="0" ci="5" mb="0" cb="0"/><line nr="308" mi="0" ci="3" mb="0" cb="2"/><line nr="309" mi="0" ci="5" mb="0" cb="0"/><line nr="310" mi="0" ci="11" mb="1" cb="3"/><line nr="311" mi="0" ci="6" mb="1" cb="1"/><line nr="313" mi="0" ci="7" mb="0" cb="2"/><line nr="314" mi="8" ci="3" mb="3" cb="1"/><line nr="315" mi="0" ci="2" mb="0" cb="0"/><line nr="321" mi="10" ci="0" mb="2" cb="0"/><line nr="322" mi="9" ci="0" mb="0" cb="0"/><line nr="323" mi="3" ci="0" mb="0" cb="0"/><line nr="324" mi="6" ci="0" mb="0" cb="0"/><line nr="325" mi="3" ci="0" mb="0" cb="0"/><line nr="330" mi="0" ci="3" mb="0" cb="0"/><line nr="331" mi="2" ci="5" mb="1" cb="1"/><line nr="332" mi="7" ci="0" mb="2" cb="0"/><line nr="333" mi="7" ci="0" mb="0" cb="0"/><line nr="335" mi="0" ci="2" mb="0" cb="0"/><line nr="339" mi="0" ci="7" mb="0" cb="2"/><line nr="340" mi="0" ci="12" mb="0" cb="0"/><line nr="342" mi="0" ci="7" mb="0" cb="0"/><line nr="345" mi="10" ci="5" mb="0" cb="0"/><line nr="347" mi="6" ci="3" mb="0" cb="0"/><line nr="348" mi="8" ci="4" mb="0" cb="0"/><line nr="352" mi="1" ci="3" mb="1" cb="1"/><line nr="353" mi="0" ci="6" mb="0" cb="2"/><line nr="354" mi="0" ci="12" mb="0" cb="0"/><line nr="355" mi="0" ci="3" mb="1" cb="1"/><line nr="356" mi="0" ci="5" mb="0" cb="0"/><line nr="357" mi="0" ci="8" mb="0" cb="2"/><line nr="358" mi="0" ci="8" mb="0" cb="0"/><line nr="360" mi="0" ci="7" mb="0" cb="2"/><line nr="361" mi="0" ci="5" mb="0" cb="0"/><line nr="362" mi="0" ci="6" mb="1" cb="1"/><line nr="363" mi="2" ci="7" mb="1" cb="1"/><line nr="364" mi="0" ci="8" mb="1" cb="1"/><line nr="365" mi="0" ci="1" mb="0" cb="0"/><line nr="368" mi="6" ci="0" mb="0" cb="0"/><line nr="369" mi="1" ci="0" mb="0" cb="0"/><line nr="371" mi="1" ci="0" mb="0" cb="0"/><line nr="372" mi="0" ci="12" mb="0" cb="2"/><line nr="374" mi="0" ci="1" mb="0" cb="0"/><line nr="378" mi="0" ci="3" mb="0" cb="0"/><line nr="379" mi="0" ci="3" mb="0" cb="0"/><line nr="380" mi="0" ci="3" mb="1" cb="1"/><line nr="381" mi="0" ci="5" mb="0" cb="0"/><line nr="382" mi="0" ci="3" mb="0" cb="0"/><line nr="384" mi="0" ci="7" mb="0" cb="2"/><line nr="385" mi="0" ci="7" mb="1" cb="1"/><line nr="386" mi="7" ci="0" mb="2" cb="0"/><line nr="387" mi="8" ci="0" mb="2" cb="0"/><line nr="388" mi="4" ci="0" mb="0" cb="0"/><line nr="393" mi="0" ci="7" mb="0" cb="2"/><line nr="394" mi="0" ci="4" mb="0" cb="2"/><line nr="395" mi="0" ci="4" mb="0" cb="0"/><line nr="396" mi="0" ci="5" mb="0" cb="0"/><line nr="397" mi="0" ci="6" mb="0" cb="0"/><line nr="400" mi="0" ci="3" mb="0" cb="0"/><line nr="401" mi="0" ci="2" mb="0" cb="0"/><line nr="402" mi="0" ci="4" mb="0" cb="0"/><line nr="403" mi="0" ci="5" mb="0" cb="0"/><line nr="404" mi="0" ci="9" mb="0" cb="2"/><line nr="405" mi="0" ci="8" mb="0" cb="0"/><line nr="407" mi="0" ci="8" mb="0" cb="0"/><line nr="412" mi="1" ci="0" mb="0" cb="0"/><line nr="416" mi="1" ci="0" mb="0" cb="0"/><line nr="419" mi="0" ci="3" mb="0" cb="0"/><line nr="420" mi="0" ci="7" mb="0" cb="2"/><line nr="422" mi="0" ci="5" mb="0" cb="0"/><line nr="424" mi="0" ci="5" mb="1" cb="1"/><line nr="425" mi="0" ci="11" mb="0" cb="0"/><line nr="426" mi="0" ci="2" mb="1" cb="1"/><line nr="427" mi="0" ci="3" mb="0" cb="0"/><line nr="430" mi="0" ci="3" mb="0" cb="0"/><line nr="431" mi="0" ci="2" mb="1" cb="1"/><line nr="432" mi="1" ci="1" mb="0" cb="0"/><line nr="434" mi="0" ci="3" mb="0" cb="0"/><line nr="435" mi="0" ci="1" mb="0" cb="0"/><line nr="438" mi="0" ci="5" mb="0" cb="0"/><line nr="439" mi="0" ci="5" mb="1" cb="1"/><line nr="440" mi="11" ci="0" mb="2" cb="0"/><line nr="441" mi="4" ci="0" mb="0" cb="0"/><line nr="443" mi="0" ci="16" mb="0" cb="0"/><line nr="444" mi="0" ci="1" mb="0" cb="0"/><line nr="446" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="568" covered="764"/><counter type="BRANCH" missed="62" covered="85"/><counter type="LINE" missed="89" covered="157"/><counter type="COMPLEXITY" missed="55" covered="61"/><counter type="METHOD" missed="12" covered="29"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="KeywordDefaultDirtyHack.java"><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="2"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PushDownUtil.java"><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="5" ci="0" mb="0" cb="0"/><line nr="61" mi="4" ci="0" mb="0" cb="0"/><line nr="62" mi="9" ci="0" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="68" mi="9" ci="0" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="2" cb="2"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="1" cb="1"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="10" mb="0" cb="2"/><line nr="88" mi="0" ci="6" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="8" mb="0" cb="0"/><line nr="96" mi="0" ci="10" mb="0" cb="0"/><line nr="97" mi="10" ci="4" mb="1" cb="1"/><line nr="101" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="10" mb="0" cb="2"/><line nr="103" mi="0" ci="20" mb="0" cb="0"/><line nr="104" mi="0" ci="12" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="0" ci="5" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="1" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="11" mb="0" cb="2"/><line nr="126" mi="0" ci="8" mb="0" cb="0"/><line nr="127" mi="0" ci="1" mb="0" cb="0"/><line nr="128" mi="0" ci="11" mb="0" cb="2"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="7" mb="0" cb="2"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="139" mi="0" ci="8" mb="0" cb="2"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="1" cb="1"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="5" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><line nr="151" mi="2" ci="0" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="2"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="5" mb="0" cb="0"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="2"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="5" mb="0" cb="0"/><line nr="164" mi="0" ci="2" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="2"/><line nr="167" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="4" mb="0" cb="0"/><line nr="169" mi="0" ci="10" mb="0" cb="2"/><line nr="170" mi="0" ci="7" mb="0" cb="0"/><line nr="171" mi="0" ci="1" mb="0" cb="0"/><line nr="172" mi="0" ci="5" mb="0" cb="0"/><line nr="173" mi="0" ci="5" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="2"/><line nr="176" mi="0" ci="3" mb="0" cb="0"/><line nr="177" mi="0" ci="7" mb="0" cb="0"/><line nr="178" mi="0" ci="2" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="0" cb="2"/><line nr="181" mi="0" ci="3" mb="0" cb="0"/><line nr="182" mi="0" ci="5" mb="0" cb="0"/><line nr="183" mi="0" ci="5" mb="0" cb="0"/><line nr="184" mi="0" ci="2" mb="0" cb="0"/><line nr="186" mi="0" ci="2" mb="0" cb="0"/><line nr="191" mi="0" ci="5" mb="0" cb="2"/><line nr="192" mi="0" ci="5" mb="0" cb="0"/><line nr="194" mi="0" ci="2" mb="0" cb="0"/><line nr="199" mi="2" ci="0" mb="0" cb="0"/><line nr="204" mi="2" ci="0" mb="0" cb="0"/><line nr="209" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="55" covered="322"/><counter type="BRANCH" missed="5" covered="31"/><counter type="LINE" missed="12" covered="70"/><counter type="COMPLEXITY" missed="12" covered="22"/><counter type="METHOD" missed="7" covered="9"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="QueryInfoCollector.java"><line nr="30" mi="4" ci="0" mb="0" cb="0"/><line nr="33" mi="4" ci="0" mb="0" cb="0"/><line nr="37" mi="2" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="3043" covered="3400"/><counter type="BRANCH" missed="395" covered="328"/><counter type="LINE" missed="591" covered="691"/><counter type="COMPLEXITY" missed="350" covered="214"/><counter type="METHOD" missed="91" covered="86"/><counter type="CLASS" missed="4" covered="15"/></package><counter type="INSTRUCTION" missed="18061" covered="4653"/><counter type="BRANCH" missed="1845" covered="397"/><counter type="LINE" missed="3853" covered="933"/><counter type="COMPLEXITY" missed="1659" covered="266"/><counter type="METHOD" missed="643" covered="116"/><counter type="CLASS" missed="76" covered="25"/></report>